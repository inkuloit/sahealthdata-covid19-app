{"_id":"ml-matrix","_rev":"63-5acb05fd2aa05e0904213f726d13c1fa","name":"ml-matrix","description":"Matrix manipulation and computation library","dist-tags":{"latest":"6.4.1","next":"6.0.0-6","future":"3.0.0-0"},"versions":{"0.0.1":{"name":"ml-matrix","version":"0.0.1","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"https://github.com/mljs/matrix"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"mocha-better-spec-reporter":"latest","mocha":"latest","should":"latest","should-approximately-deep":"latest"},"gitHead":"fab8e85abdbeb74e431d006dcafff277fb14855a","_id":"ml-matrix@0.0.1","_shasum":"2a995d13a269f9129d192028fcd2193f1049a4df","_from":".","_npmVersion":"2.0.0-beta.2","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"2a995d13a269f9129d192028fcd2193f1049a4df","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-0.0.1.tgz"}},"0.0.2":{"name":"ml-matrix","version":"0.0.2","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"mocha-better-spec-reporter":"latest","mocha":"latest","should":"latest","should-approximately-deep":"latest"},"gitHead":"9161a7be0ea380d5bc8354eb570d17d8db48a7a2","_id":"ml-matrix@0.0.2","_shasum":"f16ccee6124726e6e1fa6c817734a5ef7e666d13","_from":".","_npmVersion":"2.7.0","_nodeVersion":"1.5.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"f16ccee6124726e6e1fa6c817734a5ef7e666d13","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-0.0.2.tgz"}},"0.0.3":{"name":"ml-matrix","version":"0.0.3","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"mocha-better-spec-reporter":"latest","mocha":"latest","should":"latest","should-approximately-deep":"latest"},"gitHead":"ac0bfa6235b21fb6e0eacd9a3af38c900c6db355","_id":"ml-matrix@0.0.3","_shasum":"3b03338f82e879354912e8568303f1538d3885e2","_from":".","_npmVersion":"2.8.3","_nodeVersion":"1.8.1","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"3b03338f82e879354912e8568303f1538d3885e2","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-0.0.3.tgz"}},"0.0.4":{"name":"ml-matrix","version":"0.0.4","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"mocha-better-spec-reporter":"latest","mocha":"latest","should":"latest","should-approximately-deep":"latest"},"gitHead":"414a3eaf6bb72fefbfd3aeabc3e418f58e017e92","_id":"ml-matrix@0.0.4","_shasum":"ea316f50fab5dd3a5e073dce02381481c2f70518","_from":".","_npmVersion":"2.11.0","_nodeVersion":"2.2.1","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"ea316f50fab5dd3a5e073dce02381481c2f70518","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-0.0.4.tgz"}},"0.1.0":{"name":"ml-matrix","version":"0.1.0","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"mocha-better-spec-reporter":"latest","mocha":"latest","should":"latest","should-approximately-deep":"latest"},"gitHead":"af8afc9ed6f5f7c7f786d101133452594c0969b5","_id":"ml-matrix@0.1.0","_shasum":"4ee2d6c28c7d9b27c5b1d8779af95825b6c81e23","_from":".","_npmVersion":"2.11.0","_nodeVersion":"2.2.1","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"4ee2d6c28c7d9b27c5b1d8779af95825b6c81e23","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-0.1.0.tgz"}},"1.0.0-0":{"name":"ml-matrix","version":"1.0.0-0","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^1.0.0","csv-parse":"^1.0.0","mathjs":"^2.1.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^2.1.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^7.0.4","should-approximately-deep":"^1.1.0"},"gitHead":"dd041c8c1f65ee732fc089670c271970ea832a85","_id":"ml-matrix@1.0.0-0","_shasum":"f3bec56fc5d598a933bd4cffc77d958ec5e4e52d","_from":".","_npmVersion":"2.14.2","_nodeVersion":"4.0.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"f3bec56fc5d598a933bd4cffc77d958ec5e4e52d","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.0.0-0.tgz"}},"1.0.0":{"name":"ml-matrix","version":"1.0.0","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^1.0.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^2.1.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^2.1.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^7.0.4","should-approximately-deep":"^1.1.0"},"gitHead":"4359caf96388f1dc627a7096dc5e463eaba1c010","_id":"ml-matrix@1.0.0","_shasum":"15c79fc02d73d3409bb7f1abc78bb4493d40b49c","_from":".","_npmVersion":"2.14.2","_nodeVersion":"4.0.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"15c79fc02d73d3409bb7f1abc78bb4493d40b49c","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.0.0.tgz"}},"1.0.1":{"name":"ml-matrix","version":"1.0.1","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^1.0.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^2.1.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^2.1.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^7.0.4","should-approximately-deep":"^1.1.0"},"gitHead":"c2d1454d43bcb1205ffb2c2574bea9961bffa186","_id":"ml-matrix@1.0.1","_shasum":"6da463bba7bf6adb638c074edd1e6733efd4e155","_from":".","_npmVersion":"2.9.0","_nodeVersion":"2.0.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"6da463bba7bf6adb638c074edd1e6733efd4e155","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.0.1.tgz"}},"1.0.2":{"name":"ml-matrix","version":"1.0.2","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^1.0.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^2.1.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^2.1.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^7.0.4","should-approximately-deep":"^1.1.0"},"gitHead":"25d885390b5ab6761fd4db8c8ce6c1f5d019b9f5","_id":"ml-matrix@1.0.2","_shasum":"9b185c420fdf49d3d4bbe414df5ed27a7ee0d728","_from":".","_npmVersion":"3.3.6","_nodeVersion":"4.1.1","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"9b185c420fdf49d3d4bbe414df5ed27a7ee0d728","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.0.2.tgz"}},"1.0.3":{"name":"ml-matrix","version":"1.0.3","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^1.0.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^2.1.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^2.1.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^7.0.4","should-approximately-deep":"^1.1.0"},"gitHead":"1378088112d51d853fa0b25fbe8e3ecba23ec068","_id":"ml-matrix@1.0.3","_shasum":"48c2a1f3b12f692ac6c8d9167034ae89360560ee","_from":".","_npmVersion":"3.4.0","_nodeVersion":"5.1.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"48c2a1f3b12f692ac6c8d9167034ae89360560ee","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.0.3.tgz"}},"1.0.4":{"name":"ml-matrix","version":"1.0.4","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^1.0.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^2.1.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^7.0.4","should-approximately-deep":"^1.1.0"},"gitHead":"ffb780fe9afa00d7f5bd82299b6245364d8870de","_id":"ml-matrix@1.0.4","_shasum":"9c9bd3db6ba9994c47da61fb8ce3ad6e8145f857","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.1.0","_npmUser":{"name":"targos","email":"targos@live.com"},"dist":{"shasum":"9c9bd3db6ba9994c47da61fb8ce3ad6e8145f857","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.0.4.tgz"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}]},"1.1.0":{"name":"ml-matrix","version":"1.1.0","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^3.2.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^8.0.0","should-approximately-deep":"^1.1.0"},"gitHead":"c17766d37d446b19188053a2f5bdb8fff4dc9652","_id":"ml-matrix@1.1.0","_shasum":"12523ff1590010bcb82222cf9456cabb267e135a","_from":".","_npmVersion":"3.8.9","_nodeVersion":"6.1.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"12523ff1590010bcb82222cf9456cabb267e135a","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.1.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ml-matrix-1.1.0.tgz_1463151663132_0.7448242239188403"}},"1.1.1":{"name":"ml-matrix","version":"1.1.1","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^3.2.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^8.0.0","should-approximately-deep":"^1.1.0"},"gitHead":"dd018709061258d3b4871cb42a2c6f99743a2766","_id":"ml-matrix@1.1.1","_shasum":"8996fc5d9a1b0e43cde0583244c2bdf3a7c5c4cf","_from":".","_npmVersion":"3.9.0","_nodeVersion":"6.1.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"8996fc5d9a1b0e43cde0583244c2bdf3a7c5c4cf","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.1.1.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/ml-matrix-1.1.1.tgz_1463562231023_0.7905384339392185"}},"1.1.2":{"name":"ml-matrix","version":"1.1.2","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^3.2.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^8.0.0","should-approximately-deep":"^1.1.0"},"gitHead":"335ed351fc6fba8de0f01df1efa4f598af11334a","_id":"ml-matrix@1.1.2","_shasum":"e04a9db65f1ae16fa68ad7651ea3270bbae0c22b","_from":".","_npmVersion":"3.9.0","_nodeVersion":"6.1.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"e04a9db65f1ae16fa68ad7651ea3270bbae0c22b","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.1.2.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/ml-matrix-1.1.2.tgz_1463563082287_0.7479262573178858"}},"1.1.3":{"name":"ml-matrix","version":"1.1.3","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^3.2.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^8.0.0","should-approximately-deep":"^1.1.0"},"gitHead":"379d824291de62e1f7ae77645567aded82eb41c0","_id":"ml-matrix@1.1.3","_shasum":"32cee352fb886f3f5044cd1c69b65d0c499f5d64","_from":".","_npmVersion":"3.8.9","_nodeVersion":"6.2.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"32cee352fb886f3f5044cd1c69b65d0c499f5d64","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.1.3.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/ml-matrix-1.1.3.tgz_1464341014455_0.42586683738045394"}},"1.1.4":{"name":"ml-matrix","version":"1.1.4","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^3.2.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^8.0.0","should-approximately-deep":"^1.1.0"},"gitHead":"3fa9855aff095211c4214636d3cdca89d3170646","_id":"ml-matrix@1.1.4","_shasum":"07162e542b9b54aa535cfa862553cd0586c04f40","_from":".","_npmVersion":"3.8.9","_nodeVersion":"6.2.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"07162e542b9b54aa535cfa862553cd0586c04f40","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.1.4.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ml-matrix-1.1.4.tgz_1464342964353_0.45482588023878634"}},"1.1.5":{"name":"ml-matrix","version":"1.1.5","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^3.2.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^8.0.0","should-approximately-deep":"^1.1.0"},"gitHead":"6c5cfda02ada5a18d9f4c9b725cc1e6fe7c540ac","_id":"ml-matrix@1.1.5","_shasum":"ae22063e4fb3f977bfbf4c27c04ccff2abbd1b04","_from":".","_npmVersion":"3.8.9","_nodeVersion":"6.2.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"ae22063e4fb3f977bfbf4c27c04ccff2abbd1b04","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.1.5.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ml-matrix-1.1.5.tgz_1464699039384_0.5536917552817613"}},"1.2.0":{"name":"ml-matrix","version":"1.2.0","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^3.2.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^9.0.2","should-approximately-deep":"^1.1.0"},"gitHead":"a029ffd088b74aaab752bdde8cb47a83686aa3cb","_id":"ml-matrix@1.2.0","_shasum":"7296086beac89d02d51e8754a321a63077622521","_from":".","_npmVersion":"3.10.2","_nodeVersion":"6.2.1","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"7296086beac89d02d51e8754a321a63077622521","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.2.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ml-matrix-1.2.0.tgz_1467899636426_0.21667734091170132"}},"1.2.1":{"name":"ml-matrix","version":"1.2.1","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^3.2.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^9.0.2","should-approximately-deep":"^1.1.0"},"gitHead":"41be6e4eda0da370a680c7d10a2d32972034c6a3","_id":"ml-matrix@1.2.1","_shasum":"eda3d08704f8db5428dfdc6e6c916f28b2909251","_from":".","_npmVersion":"3.10.2","_nodeVersion":"6.2.1","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"eda3d08704f8db5428dfdc6e6c916f28b2909251","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.2.1.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ml-matrix-1.2.1.tgz_1467900066349_0.31983729684725404"}},"1.3.0":{"name":"ml-matrix","version":"1.3.0","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive","doc":"jsdoc2md src/matrix.js > Documentation.md"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","jsdoc-to-markdown":"^1.1.1","mathjs":"^3.2.1","mocha":"^2.2.5","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^9.0.2","should-approximately-deep":"^1.1.0"},"dependencies":{"ml-array-utils":"^0.2.4"},"gitHead":"cd393cd2303698e0befe79eb90d80a9b1d889404","_id":"ml-matrix@1.3.0","_shasum":"b0b0efa47cb16b5c29099700e0c5c13abfea4cd4","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.3.0","_npmUser":{"name":"stropitek","email":"kostro.d@gmail.com"},"dist":{"shasum":"b0b0efa47cb16b5c29099700e0c5c13abfea4cd4","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.3.0.tgz"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ml-matrix-1.3.0.tgz_1469452714350_0.2348087893333286"}},"1.4.0":{"name":"ml-matrix","version":"1.4.0","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","mathjs":"^3.2.1","mocha":"^3.0.0","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^10.0.0","should-approximately-deep":"^1.1.0"},"dependencies":{"ml-array-utils":"^0.2.4"},"gitHead":"5206457f617a48d56f5634366ece82fec797fdd1","_id":"ml-matrix@1.4.0","_shasum":"5715c0e9de012c6b8b59983b2ed7816e97b7b719","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.3.1","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"5715c0e9de012c6b8b59983b2ed7816e97b7b719","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-1.4.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ml-matrix-1.4.0.tgz_1470237471846_0.8006356717087328"}},"2.0.0":{"name":"ml-matrix","version":"2.0.0","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","mathjs":"^3.2.1","mocha":"^3.0.0","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^10.0.0","should-approximately-deep":"^1.1.0"},"dependencies":{"ml-array-utils":"^0.2.4"},"gitHead":"2d07945e89ffcdc5c1406dbf90e4092dde51ea90","_id":"ml-matrix@2.0.0","_shasum":"bfda549916c317250421b7c189a217fd148bc646","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.3.1","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"bfda549916c317250421b7c189a217fd148bc646","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-2.0.0.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/ml-matrix-2.0.0.tgz_1470318284042_0.9799067222047597"}},"2.1.0":{"name":"ml-matrix","version":"2.1.0","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","mathjs":"^3.2.1","mocha":"^3.0.0","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^10.0.0","should-approximately-deep":"^1.1.0"},"dependencies":{"ml-array-utils":"^0.3.0"},"gitHead":"fe091fffbbdc4ec95f19f172da4a8d5a9c2ea4bb","_id":"ml-matrix@2.1.0","_shasum":"d8f43720620313ebb517a98e0974b8eb8847b869","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.7.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"d8f43720620313ebb517a98e0974b8eb8847b869","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-2.1.0.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/ml-matrix-2.1.0.tgz_1475831486928_0.46983586670830846"}},"2.2.0":{"name":"ml-matrix","version":"2.2.0","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"eslint":"eslint src test","eslint-fix":"npm run eslint -- --fix","test":"npm run test-mocha && npm run eslint","test-mocha":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","eslint":"^3.8.0","eslint-config-cheminfo":"^1.5.2","eslint-plugin-no-only-tests":"^1.1.0","mathjs":"^3.2.1","mocha":"^3.0.0","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^11.1.1","should-approximately-deep":"^1.1.0"},"dependencies":{"ml-array-utils":"^0.3.0"},"gitHead":"7528830154c7e1718bd9387f61ce2f6479d44db8","_id":"ml-matrix@2.2.0","_shasum":"a281681f9e6ee89bbec57e2266441d67f6660d79","_from":".","_npmVersion":"4.0.3","_nodeVersion":"7.2.1","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"a281681f9e6ee89bbec57e2266441d67f6660d79","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-2.2.0.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/ml-matrix-2.2.0.tgz_1481733079765_0.999264104757458"}},"2.3.0":{"name":"ml-matrix","version":"2.3.0","description":"Matrix manipulation and computation library","main":"src/index.js","directories":{"lib":"src","test":"test"},"files":["src"],"scripts":{"eslint":"eslint src test","eslint-fix":"npm run eslint -- --fix","test":"npm run test-mocha && npm run eslint","test-mocha":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"benchmark":"^2.1.0","csv-parse":"^1.0.0","eslint":"^3.8.0","eslint-config-cheminfo":"^1.5.2","eslint-plugin-no-only-tests":"^1.1.0","mathjs":"^3.2.1","mocha":"^3.0.0","mocha-better-spec-reporter":"^3.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","should":"^11.1.1","should-approximately-deep":"^1.1.0"},"dependencies":{"ml-array-utils":"^0.3.0"},"gitHead":"a850a4cb7dac75bf93cd8d75965478077c4b0dfd","_id":"ml-matrix@2.3.0","_shasum":"df4601670a6735068ee9a6dbf23c094c1d3ece29","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.6.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"df4601670a6735068ee9a6dbf23c094c1d3ece29","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-2.3.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ml-matrix-2.3.0.tgz_1488297066489_0.5356373803224415"}},"2.4.0-0":{"name":"ml-matrix","version":"2.4.0-0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","files":["matrix.js","src"],"scripts":{"compile":"rollup -c","eslint":"eslint src test __tests__","eslint-fix":"npm run eslint -- --fix","prepare":"npm run compile","test":"run-s testonly eslint","testonly":"jest"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.24.1","benchmark":"^2.1.0","csv-parse":"^1.0.0","eslint":"^3.8.0","eslint-config-cheminfo":"^1.5.2","eslint-plugin-no-only-tests":"^1.1.0","jest-cli":"^18.1.0","mathjs":"^3.2.1","npm-run-all":"^4.0.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","rollup":"^0.41.6","should":"^11.1.1","should-approximately-deep":"^1.1.0"},"dependencies":{"ml-array-utils":"^0.3.0"},"gitHead":"604b5f88c5e66d6e816545820ce30f937a006171","_id":"ml-matrix@2.4.0-0","_shasum":"6486aa1ac60ae9a68372b878dae05c3a607c503e","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"6486aa1ac60ae9a68372b878dae05c3a607c503e","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-2.4.0-0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ml-matrix-2.4.0-0.tgz_1493121331863_0.6860670608002692"},"directories":{}},"2.4.0-1":{"name":"ml-matrix","version":"2.4.0-1","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","files":["matrix.js","src"],"scripts":{"compile":"rollup -c","eslint":"eslint src test __tests__","eslint-fix":"npm run eslint -- --fix","prepare":"npm run compile","test":"run-s testonly eslint","testonly":"jest"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.24.1","benchmark":"^2.1.0","csv-parse":"^1.0.0","eslint":"^3.8.0","eslint-config-cheminfo":"^1.5.2","eslint-plugin-no-only-tests":"^1.1.0","jest-cli":"^18.1.0","mathjs":"^3.2.1","npm-run-all":"^4.0.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","rollup":"^0.41.6","should":"^11.1.1","should-approximately-deep":"^1.1.0"},"dependencies":{"ml-array-utils":"^0.3.0"},"gitHead":"e6946b1740d14cb1a12c7866f3820c9bf13831fd","_id":"ml-matrix@2.4.0-1","_shasum":"5c5e30abacf9fa06ba4fea74cad3abdf1e201818","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"5c5e30abacf9fa06ba4fea74cad3abdf1e201818","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-2.4.0-1.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/ml-matrix-2.4.0-1.tgz_1493122303319_0.5371249010786414"},"directories":{}},"3.0.0-0":{"name":"ml-matrix","version":"3.0.0-0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","files":["matrix.js","src"],"scripts":{"compile":"rollup -c","eslint":"eslint src test __tests__","eslint-fix":"npm run eslint -- --fix","prepare":"npm run compile","test":"run-s testonly eslint","testonly":"jest"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.24.1","benchmark":"^2.1.0","csv-parse":"^1.0.0","eslint":"^3.8.0","eslint-config-cheminfo":"^1.5.2","eslint-plugin-no-only-tests":"^1.1.0","jest-cli":"^18.1.0","mathjs":"^3.2.1","npm-run-all":"^4.0.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","rollup":"^0.41.6","should":"^11.1.1","should-approximately-deep":"^1.1.0"},"dependencies":{"ml-array-utils":"^0.3.0"},"gitHead":"4c996215601df1cdc0fd8dd85c5eeb61b21f36d7","_id":"ml-matrix@3.0.0-0","_shasum":"1fdfa541baea41deba7a8aaf07bfafb6971b1305","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"1fdfa541baea41deba7a8aaf07bfafb6971b1305","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-3.0.0-0.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/ml-matrix-3.0.0-0.tgz_1493123090248_0.5579600399360061"},"directories":{}},"3.0.0":{"name":"ml-matrix","version":"3.0.0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","files":["matrix.js","src"],"scripts":{"compile":"rollup -c","eslint":"eslint src test __tests__","eslint-fix":"npm run eslint -- --fix","prepare":"npm run compile","test":"run-s testonly eslint","testonly":"jest"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.24.1","benchmark":"^2.1.0","csv-parse":"^1.0.0","eslint":"^3.8.0","eslint-config-cheminfo":"^1.5.2","eslint-plugin-no-only-tests":"^1.1.0","jest-cli":"^18.1.0","mathjs":"^3.2.1","npm-run-all":"^4.0.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","rollup":"^0.41.6","should":"^11.1.1","should-approximately-deep":"^1.1.0"},"dependencies":{"ml-array-utils":"^0.3.0"},"gitHead":"2b472f370fd000267c67e0b616d83ea8c26cdf04","_id":"ml-matrix@3.0.0","_shasum":"e8dd9ee2e976757f0d4e10512cc0466b7f324ecd","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"andcastillo","email":"andcastillo@gmail.com"},{"name":"jeffersonh44","email":"swrt_9950@hotmail.com"},{"name":"lpatiny","email":"lpatiny@gmail.com"},{"name":"maasencioh","email":"maasencioh@gmail.com"},{"name":"ml-bot","email":"admin@cheminfo.org"},{"name":"stropitek","email":"kostro.d@gmail.com"},{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"e8dd9ee2e976757f0d4e10512cc0466b7f324ecd","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-3.0.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ml-matrix-3.0.0.tgz_1493129704334_0.19826979469507933"},"directories":{}},"4.0.0":{"name":"ml-matrix","version":"4.0.0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","files":["matrix.js","src"],"scripts":{"compile":"rollup -c","eslint":"eslint src test __tests__","eslint-fix":"npm run eslint -- --fix","prepare":"npm run compile","test":"run-s testonly eslint","testonly":"jest"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.24.1","benchmark":"^2.1.0","csv-parse":"^1.0.0","eslint":"^4.2.0","eslint-config-cheminfo":"^1.5.2","eslint-plugin-no-only-tests":"^2.0.0","jest-cli":"^20.0.4","jest-matcher-deep-close-to":"^1.0.0","mathjs":"^3.14.2","npm-run-all":"^4.0.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","rollup":"^0.45.2"},"dependencies":{"ml-array-rescale":"^1.1.0"},"gitHead":"f755dde0b89d3e3d9392fbb948ffa5c82762c039","_id":"ml-matrix@4.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.1.4","_npmUser":{"name":"targos","email":"targos@live.com"},"dist":{"integrity":"sha512-BPNci46Kmh6eI+lJR8H7xSHwTBdfbPd//qY3hfVGwgojqwbX/l+9Fe8UtWwgQE8n9QeFvHcTjbiU0oZusxavzg==","shasum":"577ef207ffb3c8646324462bd87dddb2c19eb45b","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-4.0.0.tgz"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"targos@live.com","name":"targos"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix-4.0.0.tgz_1500446823230_0.9151159506291151"},"directories":{}},"5.0.0":{"name":"ml-matrix","version":"5.0.0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","files":["matrix.js","src"],"scripts":{"compile":"rollup -c","eslint":"eslint src test __tests__","eslint-fix":"npm run eslint -- --fix","prepare":"npm run compile","test":"run-s testonly eslint","testonly":"jest"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.24.1","benchmark":"^2.1.0","csv-parse":"^1.0.0","eslint":"^4.2.0","eslint-config-cheminfo":"^1.5.2","eslint-plugin-no-only-tests":"^2.0.0","jest-cli":"^20.0.4","jest-matcher-deep-close-to":"^1.0.0","mathjs":"^3.14.2","npm-run-all":"^4.0.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","rollup":"^0.45.2"},"dependencies":{"ml-array-rescale":"^1.1.0"},"gitHead":"300316d47b2aaa70fbcce038604aad4a84f5a71f","_id":"ml-matrix@5.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.1.4","_npmUser":{"name":"targos","email":"targos@live.com"},"dist":{"integrity":"sha512-CARp+ddqgMbuBjdSkRXwfyvwrW6jDdcZZKTDGLVv37nrM/nXYI5Idy7QIObm+zTQ9W4vo/Fm36tcJZBLqsCoAw==","shasum":"f1e217f5d9420c69dcfa4d171975763f8b3c7918","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-5.0.0.tgz"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"targos@live.com","name":"targos"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix-5.0.0.tgz_1500638196117_0.7081259961705655"},"directories":{}},"5.0.1":{"name":"ml-matrix","version":"5.0.1","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","files":["matrix.js","src"],"scripts":{"compile":"rollup -c","eslint":"eslint src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepare":"npm run compile","test":"run-s testonly eslint","testonly":"jest","test-travis":"jest --coverage && codecov"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"engines":{"node":">=2.0.0"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.24.1","benchmark":"^2.1.0","codecov":"^2.2.0","csv-parse":"^1.0.0","eslint":"^4.2.0","eslint-config-cheminfo":"^1.5.2","eslint-plugin-no-only-tests":"^2.0.0","jest-cli":"^20.0.4","jest-matcher-deep-close-to":"^1.0.0","mathjs":"^3.14.2","npm-run-all":"^4.0.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","rollup":"^0.45.2"},"dependencies":{"ml-array-rescale":"^1.1.0"},"gitHead":"060b1676c56110d4085a006a8b0f4942fcab8b38","_id":"ml-matrix@5.0.1","_npmVersion":"5.3.0","_nodeVersion":"8.0.0","_npmUser":{"name":"maasencioh","email":"maasencioh@gmail.com"},"dist":{"integrity":"sha512-QMPLizHaG+5QIm98twKAizO8P3CNJPfXRj9armaukSK+nOZYIr1kONoZCvfNDBrOaQjz/ld1Cgb0+tcpdLK+hw==","shasum":"2cb1f20b33ed8a0475dadd68ca7a6f7da5c5482c","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-5.0.1.tgz"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"targos@live.com","name":"targos"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix-5.0.1.tgz_1501253961668_0.822847836650908"},"directories":{}},"5.1.0":{"name":"ml-matrix","version":"5.1.0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","files":["matrix.js","src"],"scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"run-s test-coverage eslint","test-only":"jest","test-coverage":"jest --coverage"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.26.0","benchmark":"^2.1.0","csv-parse":"^2.2.0","eslint":"^4.5.0","eslint-config-cheminfo":"^1.5.2","eslint-plugin-import":"^2.11.0","eslint-plugin-jest":"^21.15.1","jest":"^22.4.3","jest-matcher-deep-close-to":"^1.0.2","mathjs":"^4.2.1","npm-run-all":"^4.0.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","rollup":"^0.58.2"},"dependencies":{"ml-array-max":"^1.0.1","ml-array-rescale":"^1.1.0"},"gitHead":"d553f61a8a3b9da6e54ee7c66f4434cd787417c3","_id":"ml-matrix@5.1.0","_npmVersion":"6.0.0","_nodeVersion":"10.0.0","_npmUser":{"name":"targos","email":"targos@live.com"},"dist":{"integrity":"sha512-4RHaosxDtR/Rxehc+jMRrF2JE6S//CYuLqEl30UDUAaEjdNYEjIXZHU0YdibSPfBdRovLnLuFY8LVDDz1BE/+w==","shasum":"fa934541231eecb26efb358d65455143832e2bbf","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-5.1.0.tgz","fileCount":30,"unpackedSize":254741,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa7GFiCRA9TVsSAnZWagAAr2wQAI634XzXNTs11hfYzKkD\nLqUDAeS8lSVnw6Pz1Muda05e6cjNUtsg4K1x8Qzna+cbCCWT6l2W3CAW1s9J\nSnIF3Hafp5kgfc2V1D4Y1ppJtC10YymogefJ5lkY3D5BmTaxwLZuXBd8sggT\nS0V+pe3DZoaD6MIgudZVuNNQU5K8L98CxtcvZx8/cwW2SwM9Gih2dpNGm42o\njv2f2ctvJufHJFX02YlHEDmzW4JcLegtyMzEYAPnFAkMrp1kR6UBAKwesxYC\nMzvFoWTXDtL4EE6oNS2TkptGwFvBzEORkN0bo9NvoFDdKMNzZr1cyePEFPUz\nmk6WlYlXcP7F21MMFPbM8nXTC1v/6yT65zfXU3h09O+BnKjNEliz6mQpE5ut\nHmqdQybzbCimf+2w55+HIu7unLFUFgtowpGcSRnrwIN6oZ65pBpzBXWUWaLH\nuLmZ537FMLpxYUWjr7jygbwcOzdZmOZCBMHbkL0/FDJQbnU9/HaOlKQTmudF\nGn87G0/VIOlRxshhZNcBVajwQkeyfVE2SP/I63ZK1GKOkqRNTlB9lyv1CLLq\nivznjEUqwtSeD5KQwwgo6ntBH+3QlmWFvkLZPDWp1PyytvFCk+ZLmreBAGFv\nAqOEgRzdrr2Ucv0LF6qcOSvhzTym6z2Ga5labDOD/0JfBQIytd6m+92W/mh4\nlP8P\r\n=LpgF\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_5.1.0_1525440864832_0.39796336874315896"},"_hasShrinkwrap":false},"5.1.1":{"name":"ml-matrix","version":"5.1.1","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","files":["matrix.js","src"],"scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"run-s test-coverage eslint","test-only":"jest","test-coverage":"jest --coverage"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.26.0","benchmark":"^2.1.0","csv-parse":"^2.2.0","eslint":"^4.5.0","eslint-config-cheminfo":"^1.5.2","eslint-plugin-import":"^2.11.0","eslint-plugin-jest":"^21.15.1","jest":"^22.4.3","jest-matcher-deep-close-to":"^1.0.2","mathjs":"^4.2.1","npm-run-all":"^4.0.1","numeric":"^1.2.6","pretty-hrtime":"^1.0.0","rollup":"^0.58.2"},"dependencies":{"ml-array-max":"^1.0.1","ml-array-rescale":"^1.1.0"},"gitHead":"b4f0b083df89e4d9f9f771300968503378bb160d","_id":"ml-matrix@5.1.1","_npmVersion":"6.0.1","_nodeVersion":"10.1.0","_npmUser":{"name":"targos","email":"targos@live.com"},"dist":{"integrity":"sha512-TKns+T+OOhE92qfF80qkaq4QGQhVm2VqQN/cdkMxwm/8r4cIBPQA225xnQmPt5yR/FEBlV484KLk0HNEBY6dTw==","shasum":"f6ace207ab3abcede17fa0dc191f851580eec611","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-5.1.1.tgz","fileCount":30,"unpackedSize":255730,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa9gotCRA9TVsSAnZWagAAA2EP/0lLp7u6F3qj2MfCdqzY\nKH/W6U7G5soUTKLqi/5b6o//hsFqFcNuY8K+UTPkWhIQ1XNoqiteoiQAecw3\nPbwDJ4B37MjzGaPMapA0a0+u8NIqv4m55rk1vo+FjzbzUetS2OM6NadmYash\nOn014zQGegkZqgDEX0zSKZ/EN3ihZCb5tULheSNOpW40lsumRcWlMrKBCBP5\nzeb4Mp/wRtP8ZXHLx40kecF6cUDukqRXuLzyoy5RlFRmZq0tK4hR8PlZh/1e\n06xij3EP61xta2LYjOZOcWhdMLTJF+3PWZ+TB5f1avhFenHN4H6Wq69MzOjK\nNx3D8y7uKiNAomPWB/7OI3mQ9VNkLjF0FPdai7e0wmZMm0uOUz2NR57dgyjy\nW9UVPWc8Qsa/oDPO93TVaRrpUu0ZOjQr+DnS4cwyBPXP+Sli9k5LoR3tzoCv\nPxgP1WUK/goR2/32M58bzSRA0eQbtwBn0qYBsGnhEmbyTY2MgxFgPxDBWdm/\nBC9UeB1WNT3Xkjqqp09rNV5RQA+X4rhuBV6dKU7NSysLIRCxC/VgvVL3MfuA\n4JEUuzeDfP3qc3vAWwC9b4be4WxRQqE+JMPfh7MambxEh6YP1Hr5qw6XhP2E\nItPejp8q4/XZlho+DkAw/55YqtU3TBNbmJUfdcWFyZrGFAypxeaDZyzA3ZmA\n4BH1\r\n=jW2d\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_5.1.1_1526073899265_0.44603055689806537"},"_hasShrinkwrap":false},"5.2.0":{"name":"ml-matrix","version":"5.2.0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"run-s test-coverage eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.26.2","benchmark":"^2.1.4","csv-parse":"^3.0.0","eslint":"^5.6.0","eslint-config-cheminfo":"^1.18.0","eslint-plugin-import":"^2.14.0","eslint-plugin-jest":"^21.22.1","jest":"^23.6.0","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^5.1.2","npm-run-all":"^4.1.3","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^0.66.2"},"dependencies":{"ml-array-max":"^1.0.2","ml-array-rescale":"^1.1.1"},"gitHead":"610d805355bccae1fa86be65947a97043fd45745","_id":"ml-matrix@5.2.0","_npmVersion":"6.4.1","_nodeVersion":"10.10.0","_npmUser":{"name":"targos","email":"targos@live.com"},"dist":{"integrity":"sha512-YoldgXeLw77cFAO9wCFMkOM9HAmgm1SHPaXVanevb0p1jn/G88ixv7v40/1hL+K0P2DJlMsNy4kNL0c0jtAfjw==","shasum":"3cabcf5a4f59e1c45bb7fd0e91700beb344c4f7e","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-5.2.0.tgz","fileCount":31,"unpackedSize":269583,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbqk/SCRA9TVsSAnZWagAAep0P/2XnAuK5wWCaG/ZThVoQ\nLhs1OsrgtWHNaRXO3W9R++ULaf5Mm1GHnyMI2Fsukx/ZlQ1vSoClmZDPlRWI\nFQ0jpwXFCqPSG+YZmbD5ku9NB7p6y7MvM5XdoDhE6ltxQzxfVrssjG0SOycx\nTmoXgEBdbRT3Bd9RoDYjF/AbKjgidVxYvcVsBjvMoQa8HrwHrsQlvI8Jojdi\nDT4tX+em0OY4Go9orU8mwe8jeN2Yey6m5w5csMgr2xcbZYOmkGLVvTJEbOvf\n/5YNcK1kNT15O93qpRNxM51nl+uOD7GCBJYwC0GjE4+VOVjI+BSQ4NJze80j\nqsPh5oGXJ97wQyEKfcRDtrs7pZsNd++WK43lhJfLI6eV3EwHv1PmyJ1dax1K\naPgbFDh3bzcRgj7YD7U+z2knzzmIDFzDkmPcAWMutEO1Z7A8kqwwsfcHDe0X\nTQfOMs5e7sFb91RqSEye8HpSXyyaIA41pp0rqI4B/TXw+5IaKoAmlrTH4A0T\nmNHLBRBzQzdfJt5/HdJcSSeCCG9L9KiGYU7/O5Vn0eXeTqycbpfzzlAjaECd\ntflm2e/44jC2aa56zYVmI4IhTpSUhpMkJvgWnTxT8MrsM3XMgPE2XZP4LTwz\n1HsR3iXDxlhdpDRuvSbiu/P5eTj8W6izv8iMEEWGkjMUUe4aKmlSwuvbANJI\n2Etl\r\n=Gm3R\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_5.2.0_1537888183369_0.8205208795349139"},"_hasShrinkwrap":false},"5.2.1":{"name":"ml-matrix","version":"5.2.1","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.26.2","benchmark":"^2.1.4","csv-parse":"^4.2.0","eslint":"^5.10.0","eslint-config-cheminfo":"^1.19.1","eslint-plugin-import":"^2.14.0","eslint-plugin-jest":"^22.1.2","jest":"^23.6.0","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^5.4.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^0.67.4"},"dependencies":{"ml-array-max":"^1.1.1","ml-array-rescale":"^1.2.1"},"gitHead":"43e75c550c999606c770b7299b3da2a4a168b93b","_id":"ml-matrix@5.2.1","_npmVersion":"6.5.0-next.0","_nodeVersion":"11.6.0","_npmUser":{"name":"targos","email":"targos@protonmail.com"},"dist":{"integrity":"sha512-bPvOKYmp29VFtU23ImjQvRhJNPPHcLZj6NR+SERF64lr4mEo7TvCKeZs+H5kajQDt0vBkNHZZkrcaPqkpBS8JQ==","shasum":"6cf2566f15c88bc06793dea78473804c4e6ab19e","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-5.2.1.tgz","fileCount":31,"unpackedSize":269879,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcM6JFCRA9TVsSAnZWagAAFrkQAJGRgP7JU97hGpIHCEWk\nHP6zLktbzrYhVtcRLKafMPcdbB2HSWo+BK34EYBtdWVY3KOxqDHnH+H8qGed\nW+KM+MouXxmjjulKkwpmLdLICFZ5aiJ+rZfwjYsn0qRgmuwLtfR7bPcvW0YD\nDSSyBblYHl0K+YJrATvyOq1ZC6lFdUtH34an7OqrETD00s8z0sdZllVWSpjz\nF1I0h2Hem1zUgkeKSsCLT9ykNNMeWSWVOKaYnEkSP+EErKduthVCamEVMEL9\nNsrRx6deaxbq84nOO/4ljCnwNUBdf3E6pk9/upYWS4/gzvlQQ7ywrVZFjf0q\nwvx6zggndmVmE2py9rpEcdeLmQRSDiCqlJNjxmnrJKhl10AUovTBlAHfd9ZP\nXFAafOVZV4quTrPdLWVn6aPPDLjK6knVkyQlQZPAntqOIq2INgMgRN3bv/jR\nA/j4MaMs8QpAuBCwYOU1BSJyBJFtybiGe6772sN/Z2NIuMj4sL8syfsOIEui\nlMXiDQP7OQWQ+F94gUQHVg6yjSgnwapih1+rJZqB8IlkOYOa8QsmZYai5GrA\nlZax27iKmT/BbvWUktEEAk6CSf9SlTrQPI+fD9w+m5y4eKfepU2jZCztp44/\nSiYDYR/90+7bBK9CSG8VZURDD+n7uCMEKwdph2uq6yf782yHBYPA4GX+LiGC\ngGlS\r\n=qiKE\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_5.2.1_1546887748368_0.06658505189396569"},"_hasShrinkwrap":false},"5.3.0":{"name":"ml-matrix","version":"5.3.0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.26.2","benchmark":"^2.1.4","csv-parse":"^4.3.4","eslint":"^5.15.3","eslint-config-cheminfo":"^1.20.0","eslint-plugin-import":"^2.16.0","eslint-plugin-jest":"^22.4.1","jest":"^24.5.0","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^5.8.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.7.0"},"dependencies":{"ml-array-max":"^1.1.1","ml-array-rescale":"^1.2.1"},"gitHead":"04322d92464d12c2b3eba56ec1ae623433655cea","_id":"ml-matrix@5.3.0","_nodeVersion":"11.12.0","_npmVersion":"6.7.0","dist":{"integrity":"sha512-DuvdXYwfGRpM+7MVdvi/zSjiazn+8QPrACT3Xi0pQpYx5SXZ1WuFYwUDXTSmV9+hrCxRhrC4hrzesNcfjpvOsw==","shasum":"2154902a3380f6a0874ab9a2539a09e873e8db92","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-5.3.0.tgz","fileCount":31,"unpackedSize":283716,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcllJwCRA9TVsSAnZWagAA7xcQAJCKG49DtMgbEWoLJMyL\nM4CzcRXCrdd+sgq25bJK3Obn2y03O8wu5/jSjjbDOi8f2fKzCmIB+EzOteoz\nuWdYlHCbuyMz/9RZc863OpxkijhB1ucsNkSTzjaqnqXF8Tm+lqs/ejaYQ5+V\n8PTCL4sfljqk7cpGXyqLbVpcIEFdq9t00p7hOd4jVc64q9Tn9UHZrSSlUCuL\nLTn3nX5MF81RKg1pHklKqMjCMnsYWa6WEMipH62Ck0P8NaEo8pBqpE0ASIVq\nz51lftj0DxCTMkVg7ZElbp9dnVcF8ijhtyoQVDkyBFc5bQME2qMIoPRK7VC/\nUKyWsojtN9/1urCBUSp1xYiEwjyyCWQJehZS4wncE4BkMOPzVtDjDFUJvEz1\n0oFxaBAkb30G/sCMuh6J9RGaCTgVo70ctqf7Aw1GEQrFeK29zsHBme0wzC2E\nD7OuWbxqFLAa7SzqZIMjChZZRVvy0ZgYFIY6JXmA8aozzclV7hVa16G2wmxQ\nZ0k52Pm/KpG+QWft0dIw64dki3bB/q5+26DAcAvbGBHLZFoIvstUoh/swMm3\noMXrVzqF8bFsGO/8anZ0O0YMzf0dY7jPGnVfguGELFXwRmCHEPXI4ID8MdgJ\n+deHrh++18MqJD9N8QD8EKRl44rFVIRzKiqXMRZtTCByxTxuGkY6ENUIHhXv\negS4\r\n=T4dg\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_5.3.0_1553355374958_0.7704150574574851"},"_hasShrinkwrap":false},"6.0.0-0":{"name":"ml-matrix","version":"6.0.0-0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.26.2","benchmark":"^2.1.4","csv-parse":"^4.4.0","eslint":"^5.16.0","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.17.2","eslint-plugin-jest":"^22.4.1","jest":"^24.7.1","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^5.9.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.10.0"},"dependencies":{"ml-array-max":"^1.1.1","ml-array-rescale":"^1.2.1"},"readme":"# ml-matrix\r\n\r\n[![NPM version][npm-image]][npm-url]\r\n[![build status][travis-image]][travis-url]\r\n[![Test coverage][codecov-image]][codecov-url]\r\n[![npm download][download-image]][download-url]\r\n\r\nMatrix manipulation and computation library.\r\n\r\n## Installation\r\n\r\n`$ npm install ml-matrix`\r\n\r\n## Usage\r\n\r\n### As an ES module\r\n\r\n```js\r\nimport { Matrix } from 'ml-matrix';\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n### As a CommonJS module\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n## [API Documentation](https://mljs.github.io/matrix/)\r\n\r\n## Examples\r\n\r\n### Standard operations\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nvar A = new Matrix([[1, 1], [2, 2]]);\r\nvar B = new Matrix([[3, 3], [1, 1]]);\r\nvar C = new Matrix([[3, 3], [1, 1]]);\r\n\r\n// ============================\r\n// Operations with the matrix :\r\n// =============================\r\n\r\n// operations :\r\nconst addition = Matrix.add(A, B); // addition = Matrix [[4, 4], [3, 3], rows: 2, columns: 2]\r\nconst substraction = Matrix.sub(A, B); // substraction = Matrix [[-2, -2], [1, 1], rows: 2, columns: 2]\r\nconst multiplication = A.mmul(B); // multiplication = Matrix [[4, 4], [8, 8], rows: 2, columns: 2]\r\nconst mulByNumber = Matrix.mul(A, 10); // mulByNumber = Matrix [[10, 10], [20, 20], rows: 2, columns: 2]\r\nconst divByNumber = Matrix.div(A, 10); // divByNumber = Matrix [[0.1, 0.1], [0.2, 0.2], rows: 2, columns: 2]\r\nconst modulo = Matrix.mod(B, 2); // modulo = Matrix [[ 1, 1], [1, 1], rows: 2, columns: 2]\r\nconst maxMatrix = Matrix.max(A, B); // max = Matrix [[3, 3], [2, 2], rows: 2, columns: 2]\r\nconst minMatrix = Matrix.min(A, B); // max = Matrix [[1, 1], [1, 1], rows: 2, columns: 2]\r\n\r\n// Inplace operations : (consider that Cinit = C before all the operations below)\r\nC.add(A); // => C = Cinit + A\r\nC.sub(A); // => C = Cinit\r\nC.mul(10); // => C = 10 * Cinit\r\nC.div(10); // => C = Cinit\r\nC.mod(2); // => C = Cinit % 2\r\n\r\n// Standard Math operations : (abs, cos, round, etc.)\r\nvar A = new Matrix([[1, 1], [-1, -1]]);\r\nvar expon = Matrix.exp(A); // expon = Matrix [[Math.exp(1), Math.exp(1)], [Math.exp(-1), Math.exp(-1)], rows: 2, columns: 2].\r\nvar cosinus = Matrix.cos(A); // cosinus = Matrix [[Math.cos(1), Math.cos(1)], [Math.cos(-1), Math.cos(-1)], rows: 2, columns: 2].\r\nvar absolute = Matrix.abs(A); // expon = absolute [[1, 1], [1, 1], rows: 2, columns: 2].\r\n// you can use 'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil', 'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p', 'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n// Note : you can do it inplace too as A.abs()\r\n\r\n// ============================\r\n// Manipulation of the matrix :\r\n// =============================\r\n\r\nvar numberRows = A.rows; // A has 2 rows\r\nvar numberCols = A.columns; // A has 2 columns\r\nvar firstValue = A.get(0, 0); // get(rows, columns)\r\nvar numberElements = A.size; // 2 * 2 = 4 elements\r\nvar isRow = A.isRowVector(); // false because A has more that 1 row\r\nvar isColumn = A.isColumnVector(); // false because A has more that 1 column\r\nvar isSquare = A.isSquare(); // true, because A is 2 * 2 matrix\r\nvar isSym = A.isSymmetric(); // false, because A is not symmetric\r\n// remember : A = Matrix [[1, 1], [-1, -1], rows: 2, columns: 2]\r\nA.set(1, 0, 10); // A = Matrix [[1, 1], [10, -1], rows: 2, columns: 2]. We have change the second row and the first column\r\nvar diag = A.diag(); // diag = [1, -1], i.e values in the diagonal.\r\nvar m = A.mean(); // m = 2.75\r\nvar product = A.prod(); // product = -10, i.e product of all values of the matrix\r\nvar norm = A.norm(); // norm = 10.14889156509222, i.e Frobenius norm of the matrix\r\nvar transpose = A.transpose(); // tranpose = Matrix [[1, 10], [1, -1], rows: 2, columns: 2]\r\n\r\n// ============================\r\n// Instanciation of matrix :\r\n// =============================\r\n\r\nvar z = Matrix.zeros(3, 2); // z = Matrix [[0, 0], [0, 0], [0, 0], rows: 3, columns: 2]\r\nvar z = Matrix.ones(2, 3); // z = Matrix [[1, 1, 1], [1, 1, 1], rows: 2, columns: 3]\r\nvar z = Matrix.eye(3, 4); // Matrix [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], rows: 3, columns: 4]. there are 1 only in the diagonal\r\n```\r\n\r\n### Maths\r\n\r\n```js\r\nconst {\r\n  Matrix,\r\n  inverse,\r\n  solve,\r\n  linearDependencies,\r\n  QrDecomposition,\r\n  LuDecomposition,\r\n  CholeskyDecomposition\r\n} = require('ml-matrix');\r\n\r\n//===========================\r\n// inverse and pseudo-inverse\r\n//===========================\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar inverseA = inverse(A);\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), so B ~= Identity\r\n\r\n// if A is singular, you can use SVD :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]); // A is singular, so the standard computation of inverse won't work (you can test if you don't trust me^^)\r\nvar inverseA = inverse(A, (useSVD = true)); // inverseA is only an approximation of the inverse, by using the Singular Values Decomposition\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), but inverse(A) is only an approximation, so B doesn't really be identity.\r\n\r\n// if you want the pseudo-inverse of a matrix :\r\nvar A = new Matrix([[1, 2], [3, 4], [5, 6]]);\r\nvar pseudoInverseA = A.pseudoInverse();\r\nvar B = A.mmul(pseudoInverseA).mmul(A); // with pseudo inverse, A*pseudo-inverse(A)*A ~= A. It's the case here\r\n\r\n//=============\r\n// Least square\r\n//=============\r\n\r\n// Least square is the following problem : We search x, such as A.x = b (A, x and b are matrix or vectors).\r\n// Below, how to solve least square with our function\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[3, 1], [4.25, 1], [5.5, 1], [8, 1]]);\r\nvar b = Matrix.columnVector([4.5, 4.25, 5.5, 5.5]);\r\nvar x = solve(A, b);\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\r\nvar b = Matrix.columnVector([8, 20, 32]);\r\nvar x = solve(A, b, (useSVD = true)); // there are many solutions. x can be [1, 2, 1].transpose(), or [1.33, 1.33, 1.33].transpose(), etc.\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n//===============\r\n// Decompositions\r\n//===============\r\n\r\n// QR Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar QR = QrDecomposition(A);\r\nvar Q = QR.orthogonalMatrix;\r\nvar R = QR.upperTriangularMatrix;\r\n// So you have the QR decomposition. If you multiply Q by R, you'll see that A = Q.R, with Q orthogonal and R upper triangular\r\n\r\n// LU Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar LU = LuDecomposition(A);\r\nvar L = LU.lowerTriangularMatrix;\r\nvar U = LU.upperTriangularMatrix;\r\nvar P = LU.pivotPermutationVector;\r\n// So you have the LU decomposition. P includes the permutation of the matrix. Here P = [1, 2, 0], i.e the first row of LU is the second row of A, the second row of LU is the third row of A and the third row of LU is the first row of A.\r\n\r\n// Cholesky Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar cholesky = CholeskyDecomposition(A);\r\nvar L = cholesky.lowerTriangularMatrix;\r\n\r\n// Eigenvalues & eigenvectors\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar e = EigenvalueDecomposition(A);\r\nvar real = e.realEigenvalues;\r\nvar imaginary = e.imaginaryEigenvalues;\r\nvar vectors = e.eigenvectorMatrix;\r\n\r\n//=======\r\n// Others\r\n//=======\r\n\r\n// Linear dependencies\r\nvar A = new Matrix([\r\n  [2, 0, 0, 1],\r\n  [0, 1, 6, 0],\r\n  [0, 3, 0, 1],\r\n  [0, 0, 1, 0],\r\n  [0, 1, 2, 0]\r\n]);\r\nvar dependencies = linearDependencies(A); // dependencies is a matrix with the dependencies of the rows. When we look row by row, we see that the first row is [0, 0, 0, 0, 0], so it means that the first row is independent, and the second row is [ 0, 0, 0, 4, 1 ], i.e the second row = 4 times the 4th row + the 5th row.\r\n```\r\n\r\n## License\r\n\r\n[MIT](./LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/ml-matrix.svg?style=flat-square\r\n[npm-url]: https://npmjs.org/package/ml-matrix\r\n[travis-image]: https://img.shields.io/travis/mljs/matrix/master.svg?style=flat-square\r\n[travis-url]: https://travis-ci.org/mljs/matrix\r\n[codecov-image]: https://img.shields.io/codecov/c/github/mljs/matrix.svg?style=flat-square\r\n[codecov-url]: https://codecov.io/github/mljs/matrix\r\n[download-image]: https://img.shields.io/npm/dm/ml-matrix.svg?style=flat-square\r\n[download-url]: https://npmjs.org/package/ml-matrix\r\n","readmeFilename":"README.md","gitHead":"185c428bbe00af9d201fc8597fda5a9d04e46b9a","_id":"ml-matrix@6.0.0-0","_nodeVersion":"11.14.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-TmXY+T/N5qyuLR1K4LyabQX7Yf0sxgPy5Gp8iKFVJ+ucsTYDz15MD10xCLscvl0o+4NeHdGpVyFJDzBn1IkGLA==","shasum":"905fa90526b9423bf26f55be76b5eb4697e7d104","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.0.0-0.tgz","fileCount":31,"unpackedSize":284045,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcuDOaCRA9TVsSAnZWagAA1b0QAJC3YwUEpmEWc07TDgzT\noDnYgSTdhW4hOrBjcHeHGNoeZQlIAU4HA7BDjisxAM2ElzVvrK1PL/hr5yxp\nrQD/X18HKWKFg5Dfp5dOznSTwphezB4qfCWCI/0c+ixIBNDOb54C2QO0M2xC\nHG2Y3lcZnZPYWPs8Z9clplqsbYdGVEcOil6XfDVSjDw+C+lgcImB/9VVOgDS\n3eoIY6DKtdmWJgAv3CA+C7d5dKIW0VPNQD10lndc5JDtauVlEuzASaV/BLoT\naKFSOvliY/jSpUJBUL4B89Z9BZr4I42SMSg2dKtES2PmHXUnVM+oGhzfNjGs\n86I4tbEVWg4ScB1DDpUnrifV6Hinvy6fQujTLdijDMwylT25XfCRw2H7BrQd\n2BSaoSokbu15nzwuC7ACSbTkZNHDYlJgU4NDEGPVI/TK3ybUp9BM72aD2FSA\nB/AvO4OtGNV0sXyOokFjDcv6LReW1TPWFtnHs9DIW6Uel6LIs+gA8+0ZkToB\nDTnXq1nIH87JKFhWUfdP78p/OD2XYNlla0xMeDmyEZv0IXyihub379wfdW8H\nx2zgZsmQ1CdeUg8fkRQxEMD0vEl8LjQXk+v+HuyDwL0UjegMNwap84D9CX0M\nYzH1hT30tHDpWnMvQ5IkNXblCd9tj9bUD4OhRM9ipuVX+X+tF55uMm4Kki9S\nXGme\r\n=ul37\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.0.0-0_1555575704795_0.852728739930861"},"_hasShrinkwrap":false},"6.0.0-1":{"name":"ml-matrix","version":"6.0.0-1","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.26.2","benchmark":"^2.1.4","csv-parse":"^4.4.0","eslint":"^5.16.0","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.17.2","eslint-plugin-jest":"^22.4.1","jest":"^24.7.1","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^5.9.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.10.0"},"dependencies":{"ml-array-max":"^1.1.1","ml-array-rescale":"^1.2.1"},"readme":"# ml-matrix\r\n\r\n[![NPM version][npm-image]][npm-url]\r\n[![build status][travis-image]][travis-url]\r\n[![Test coverage][codecov-image]][codecov-url]\r\n[![npm download][download-image]][download-url]\r\n\r\nMatrix manipulation and computation library.\r\n\r\n## Installation\r\n\r\n`$ npm install ml-matrix`\r\n\r\n## Usage\r\n\r\n### As an ES module\r\n\r\n```js\r\nimport { Matrix } from 'ml-matrix';\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n### As a CommonJS module\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n## [API Documentation](https://mljs.github.io/matrix/)\r\n\r\n## Examples\r\n\r\n### Standard operations\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nvar A = new Matrix([[1, 1], [2, 2]]);\r\nvar B = new Matrix([[3, 3], [1, 1]]);\r\nvar C = new Matrix([[3, 3], [1, 1]]);\r\n\r\n// ============================\r\n// Operations with the matrix :\r\n// =============================\r\n\r\n// operations :\r\nconst addition = Matrix.add(A, B); // addition = Matrix [[4, 4], [3, 3], rows: 2, columns: 2]\r\nconst substraction = Matrix.sub(A, B); // substraction = Matrix [[-2, -2], [1, 1], rows: 2, columns: 2]\r\nconst multiplication = A.mmul(B); // multiplication = Matrix [[4, 4], [8, 8], rows: 2, columns: 2]\r\nconst mulByNumber = Matrix.mul(A, 10); // mulByNumber = Matrix [[10, 10], [20, 20], rows: 2, columns: 2]\r\nconst divByNumber = Matrix.div(A, 10); // divByNumber = Matrix [[0.1, 0.1], [0.2, 0.2], rows: 2, columns: 2]\r\nconst modulo = Matrix.mod(B, 2); // modulo = Matrix [[ 1, 1], [1, 1], rows: 2, columns: 2]\r\nconst maxMatrix = Matrix.max(A, B); // max = Matrix [[3, 3], [2, 2], rows: 2, columns: 2]\r\nconst minMatrix = Matrix.min(A, B); // max = Matrix [[1, 1], [1, 1], rows: 2, columns: 2]\r\n\r\n// Inplace operations : (consider that Cinit = C before all the operations below)\r\nC.add(A); // => C = Cinit + A\r\nC.sub(A); // => C = Cinit\r\nC.mul(10); // => C = 10 * Cinit\r\nC.div(10); // => C = Cinit\r\nC.mod(2); // => C = Cinit % 2\r\n\r\n// Standard Math operations : (abs, cos, round, etc.)\r\nvar A = new Matrix([[1, 1], [-1, -1]]);\r\nvar expon = Matrix.exp(A); // expon = Matrix [[Math.exp(1), Math.exp(1)], [Math.exp(-1), Math.exp(-1)], rows: 2, columns: 2].\r\nvar cosinus = Matrix.cos(A); // cosinus = Matrix [[Math.cos(1), Math.cos(1)], [Math.cos(-1), Math.cos(-1)], rows: 2, columns: 2].\r\nvar absolute = Matrix.abs(A); // expon = absolute [[1, 1], [1, 1], rows: 2, columns: 2].\r\n// you can use 'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil', 'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p', 'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n// Note : you can do it inplace too as A.abs()\r\n\r\n// ============================\r\n// Manipulation of the matrix :\r\n// =============================\r\n\r\nvar numberRows = A.rows; // A has 2 rows\r\nvar numberCols = A.columns; // A has 2 columns\r\nvar firstValue = A.get(0, 0); // get(rows, columns)\r\nvar numberElements = A.size; // 2 * 2 = 4 elements\r\nvar isRow = A.isRowVector(); // false because A has more that 1 row\r\nvar isColumn = A.isColumnVector(); // false because A has more that 1 column\r\nvar isSquare = A.isSquare(); // true, because A is 2 * 2 matrix\r\nvar isSym = A.isSymmetric(); // false, because A is not symmetric\r\n// remember : A = Matrix [[1, 1], [-1, -1], rows: 2, columns: 2]\r\nA.set(1, 0, 10); // A = Matrix [[1, 1], [10, -1], rows: 2, columns: 2]. We have change the second row and the first column\r\nvar diag = A.diag(); // diag = [1, -1], i.e values in the diagonal.\r\nvar m = A.mean(); // m = 2.75\r\nvar product = A.prod(); // product = -10, i.e product of all values of the matrix\r\nvar norm = A.norm(); // norm = 10.14889156509222, i.e Frobenius norm of the matrix\r\nvar transpose = A.transpose(); // tranpose = Matrix [[1, 10], [1, -1], rows: 2, columns: 2]\r\n\r\n// ============================\r\n// Instanciation of matrix :\r\n// =============================\r\n\r\nvar z = Matrix.zeros(3, 2); // z = Matrix [[0, 0], [0, 0], [0, 0], rows: 3, columns: 2]\r\nvar z = Matrix.ones(2, 3); // z = Matrix [[1, 1, 1], [1, 1, 1], rows: 2, columns: 3]\r\nvar z = Matrix.eye(3, 4); // Matrix [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], rows: 3, columns: 4]. there are 1 only in the diagonal\r\n```\r\n\r\n### Maths\r\n\r\n```js\r\nconst {\r\n  Matrix,\r\n  inverse,\r\n  solve,\r\n  linearDependencies,\r\n  QrDecomposition,\r\n  LuDecomposition,\r\n  CholeskyDecomposition\r\n} = require('ml-matrix');\r\n\r\n//===========================\r\n// inverse and pseudo-inverse\r\n//===========================\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar inverseA = inverse(A);\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), so B ~= Identity\r\n\r\n// if A is singular, you can use SVD :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]); // A is singular, so the standard computation of inverse won't work (you can test if you don't trust me^^)\r\nvar inverseA = inverse(A, (useSVD = true)); // inverseA is only an approximation of the inverse, by using the Singular Values Decomposition\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), but inverse(A) is only an approximation, so B doesn't really be identity.\r\n\r\n// if you want the pseudo-inverse of a matrix :\r\nvar A = new Matrix([[1, 2], [3, 4], [5, 6]]);\r\nvar pseudoInverseA = A.pseudoInverse();\r\nvar B = A.mmul(pseudoInverseA).mmul(A); // with pseudo inverse, A*pseudo-inverse(A)*A ~= A. It's the case here\r\n\r\n//=============\r\n// Least square\r\n//=============\r\n\r\n// Least square is the following problem : We search x, such as A.x = b (A, x and b are matrix or vectors).\r\n// Below, how to solve least square with our function\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[3, 1], [4.25, 1], [5.5, 1], [8, 1]]);\r\nvar b = Matrix.columnVector([4.5, 4.25, 5.5, 5.5]);\r\nvar x = solve(A, b);\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\r\nvar b = Matrix.columnVector([8, 20, 32]);\r\nvar x = solve(A, b, (useSVD = true)); // there are many solutions. x can be [1, 2, 1].transpose(), or [1.33, 1.33, 1.33].transpose(), etc.\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n//===============\r\n// Decompositions\r\n//===============\r\n\r\n// QR Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar QR = QrDecomposition(A);\r\nvar Q = QR.orthogonalMatrix;\r\nvar R = QR.upperTriangularMatrix;\r\n// So you have the QR decomposition. If you multiply Q by R, you'll see that A = Q.R, with Q orthogonal and R upper triangular\r\n\r\n// LU Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar LU = LuDecomposition(A);\r\nvar L = LU.lowerTriangularMatrix;\r\nvar U = LU.upperTriangularMatrix;\r\nvar P = LU.pivotPermutationVector;\r\n// So you have the LU decomposition. P includes the permutation of the matrix. Here P = [1, 2, 0], i.e the first row of LU is the second row of A, the second row of LU is the third row of A and the third row of LU is the first row of A.\r\n\r\n// Cholesky Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar cholesky = CholeskyDecomposition(A);\r\nvar L = cholesky.lowerTriangularMatrix;\r\n\r\n// Eigenvalues & eigenvectors\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar e = EigenvalueDecomposition(A);\r\nvar real = e.realEigenvalues;\r\nvar imaginary = e.imaginaryEigenvalues;\r\nvar vectors = e.eigenvectorMatrix;\r\n\r\n//=======\r\n// Others\r\n//=======\r\n\r\n// Linear dependencies\r\nvar A = new Matrix([\r\n  [2, 0, 0, 1],\r\n  [0, 1, 6, 0],\r\n  [0, 3, 0, 1],\r\n  [0, 0, 1, 0],\r\n  [0, 1, 2, 0]\r\n]);\r\nvar dependencies = linearDependencies(A); // dependencies is a matrix with the dependencies of the rows. When we look row by row, we see that the first row is [0, 0, 0, 0, 0], so it means that the first row is independent, and the second row is [ 0, 0, 0, 4, 1 ], i.e the second row = 4 times the 4th row + the 5th row.\r\n```\r\n\r\n## License\r\n\r\n[MIT](./LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/ml-matrix.svg?style=flat-square\r\n[npm-url]: https://npmjs.org/package/ml-matrix\r\n[travis-image]: https://img.shields.io/travis/mljs/matrix/master.svg?style=flat-square\r\n[travis-url]: https://travis-ci.org/mljs/matrix\r\n[codecov-image]: https://img.shields.io/codecov/c/github/mljs/matrix.svg?style=flat-square\r\n[codecov-url]: https://codecov.io/github/mljs/matrix\r\n[download-image]: https://img.shields.io/npm/dm/ml-matrix.svg?style=flat-square\r\n[download-url]: https://npmjs.org/package/ml-matrix\r\n","readmeFilename":"README.md","gitHead":"c573709e6c20a904639ef5ffbdac9375685d3934","_id":"ml-matrix@6.0.0-1","_nodeVersion":"11.14.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-SNiQOjUS3WgwiBik3DtA54boZeEXSILBP/rSdfb/tbYPBJCrYGLo6aw/PbM8kZZDqwp5gUBfXDmRVdhwn4bN1w==","shasum":"a781f7aa92b88ff3f82e1029037ae37b0ded739e","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.0.0-1.tgz","fileCount":32,"unpackedSize":290719,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcuEAPCRA9TVsSAnZWagAAodoP/RRwizg/wXlVbf7LmCfM\nRZybov1Phn1kiIF9NqT10ptPWBvfJxT0kVtf+ZpxuJ63X+IKdmgaH/98GYrE\nqfTNgv1sTzJZs4/ln0qDlzrPjCaPn9QWALe0zrkYDrN8or/9jeKdhTmwxwyf\n1AN7GNhOMl/yVDH2XEfRlnGIbZrnvf4j4wfo/tMnCIZLuwPxeGwpsJKFNv5h\nVwz8wajxz8EEUjuqul9tZ+hkG64Lu1Et06wmJi3YRObxsygAQoo5z5ORMsHM\nPLyoRWvS9LW7DLces5urV9qBdG14R8T05CGVqOycJSO72HGeniBttA2U4q4z\nt5azqR0BjkYKrgZLmoPIAWOsFxcqZWYWZfXwegOCNN2g0wkdNY80JdDwUVXj\n1SP/Vbx1bgDkV2CpXHk+2yyN/wZKEd58mszhRn2JgV94VdKLCX3Uste1lgQB\ni0k84ArvWJzqmlr6dPgHMuQjW58UBYIYOxa8kPHwsWcvmZguiQcNlncM9126\nmkAAeKry3mMU+pshFKTvOq8nO5QqjZeSe/rvx12DlMPBD8Ld1BjaEVGBun4u\n7JozA/rWYkinYe/28HJspLdgtn8KkAdAHRXldyRzdiS6ux+3G4vTGi6NrQs7\nScRlAAtdxVPb0bDjzKoKQWENgY1X1oc6RrDec2CHtOHh7umSQjm8WebeRFjr\n2ONd\r\n=CR9a\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.0.0-1_1555578894458_0.7682016633394004"},"_hasShrinkwrap":false},"6.0.0-2":{"name":"ml-matrix","version":"6.0.0-2","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"babel-plugin-transform-es2015-modules-commonjs":"^6.26.2","benchmark":"^2.1.4","csv-parse":"^4.4.0","eslint":"^5.16.0","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.17.2","eslint-plugin-jest":"^22.4.1","jest":"^24.7.1","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^5.9.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.10.0"},"dependencies":{"ml-array-max":"^1.1.1","ml-array-rescale":"^1.2.1"},"readme":"# ml-matrix\r\n\r\n[![NPM version][npm-image]][npm-url]\r\n[![build status][travis-image]][travis-url]\r\n[![Test coverage][codecov-image]][codecov-url]\r\n[![npm download][download-image]][download-url]\r\n\r\nMatrix manipulation and computation library.\r\n\r\n## Installation\r\n\r\n`$ npm install ml-matrix`\r\n\r\n## Usage\r\n\r\n### As an ES module\r\n\r\n```js\r\nimport { Matrix } from 'ml-matrix';\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n### As a CommonJS module\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n## [API Documentation](https://mljs.github.io/matrix/)\r\n\r\n## Examples\r\n\r\n### Standard operations\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nvar A = new Matrix([[1, 1], [2, 2]]);\r\nvar B = new Matrix([[3, 3], [1, 1]]);\r\nvar C = new Matrix([[3, 3], [1, 1]]);\r\n\r\n// ============================\r\n// Operations with the matrix :\r\n// =============================\r\n\r\n// operations :\r\nconst addition = Matrix.add(A, B); // addition = Matrix [[4, 4], [3, 3], rows: 2, columns: 2]\r\nconst substraction = Matrix.sub(A, B); // substraction = Matrix [[-2, -2], [1, 1], rows: 2, columns: 2]\r\nconst multiplication = A.mmul(B); // multiplication = Matrix [[4, 4], [8, 8], rows: 2, columns: 2]\r\nconst mulByNumber = Matrix.mul(A, 10); // mulByNumber = Matrix [[10, 10], [20, 20], rows: 2, columns: 2]\r\nconst divByNumber = Matrix.div(A, 10); // divByNumber = Matrix [[0.1, 0.1], [0.2, 0.2], rows: 2, columns: 2]\r\nconst modulo = Matrix.mod(B, 2); // modulo = Matrix [[ 1, 1], [1, 1], rows: 2, columns: 2]\r\nconst maxMatrix = Matrix.max(A, B); // max = Matrix [[3, 3], [2, 2], rows: 2, columns: 2]\r\nconst minMatrix = Matrix.min(A, B); // max = Matrix [[1, 1], [1, 1], rows: 2, columns: 2]\r\n\r\n// Inplace operations : (consider that Cinit = C before all the operations below)\r\nC.add(A); // => C = Cinit + A\r\nC.sub(A); // => C = Cinit\r\nC.mul(10); // => C = 10 * Cinit\r\nC.div(10); // => C = Cinit\r\nC.mod(2); // => C = Cinit % 2\r\n\r\n// Standard Math operations : (abs, cos, round, etc.)\r\nvar A = new Matrix([[1, 1], [-1, -1]]);\r\nvar expon = Matrix.exp(A); // expon = Matrix [[Math.exp(1), Math.exp(1)], [Math.exp(-1), Math.exp(-1)], rows: 2, columns: 2].\r\nvar cosinus = Matrix.cos(A); // cosinus = Matrix [[Math.cos(1), Math.cos(1)], [Math.cos(-1), Math.cos(-1)], rows: 2, columns: 2].\r\nvar absolute = Matrix.abs(A); // expon = absolute [[1, 1], [1, 1], rows: 2, columns: 2].\r\n// you can use 'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil', 'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p', 'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n// Note : you can do it inplace too as A.abs()\r\n\r\n// ============================\r\n// Manipulation of the matrix :\r\n// =============================\r\n\r\nvar numberRows = A.rows; // A has 2 rows\r\nvar numberCols = A.columns; // A has 2 columns\r\nvar firstValue = A.get(0, 0); // get(rows, columns)\r\nvar numberElements = A.size; // 2 * 2 = 4 elements\r\nvar isRow = A.isRowVector(); // false because A has more that 1 row\r\nvar isColumn = A.isColumnVector(); // false because A has more that 1 column\r\nvar isSquare = A.isSquare(); // true, because A is 2 * 2 matrix\r\nvar isSym = A.isSymmetric(); // false, because A is not symmetric\r\n// remember : A = Matrix [[1, 1], [-1, -1], rows: 2, columns: 2]\r\nA.set(1, 0, 10); // A = Matrix [[1, 1], [10, -1], rows: 2, columns: 2]. We have change the second row and the first column\r\nvar diag = A.diag(); // diag = [1, -1], i.e values in the diagonal.\r\nvar m = A.mean(); // m = 2.75\r\nvar product = A.prod(); // product = -10, i.e product of all values of the matrix\r\nvar norm = A.norm(); // norm = 10.14889156509222, i.e Frobenius norm of the matrix\r\nvar transpose = A.transpose(); // tranpose = Matrix [[1, 10], [1, -1], rows: 2, columns: 2]\r\n\r\n// ============================\r\n// Instanciation of matrix :\r\n// =============================\r\n\r\nvar z = Matrix.zeros(3, 2); // z = Matrix [[0, 0], [0, 0], [0, 0], rows: 3, columns: 2]\r\nvar z = Matrix.ones(2, 3); // z = Matrix [[1, 1, 1], [1, 1, 1], rows: 2, columns: 3]\r\nvar z = Matrix.eye(3, 4); // Matrix [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], rows: 3, columns: 4]. there are 1 only in the diagonal\r\n```\r\n\r\n### Maths\r\n\r\n```js\r\nconst {\r\n  Matrix,\r\n  inverse,\r\n  solve,\r\n  linearDependencies,\r\n  QrDecomposition,\r\n  LuDecomposition,\r\n  CholeskyDecomposition\r\n} = require('ml-matrix');\r\n\r\n//===========================\r\n// inverse and pseudo-inverse\r\n//===========================\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar inverseA = inverse(A);\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), so B ~= Identity\r\n\r\n// if A is singular, you can use SVD :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]); // A is singular, so the standard computation of inverse won't work (you can test if you don't trust me^^)\r\nvar inverseA = inverse(A, (useSVD = true)); // inverseA is only an approximation of the inverse, by using the Singular Values Decomposition\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), but inverse(A) is only an approximation, so B doesn't really be identity.\r\n\r\n// if you want the pseudo-inverse of a matrix :\r\nvar A = new Matrix([[1, 2], [3, 4], [5, 6]]);\r\nvar pseudoInverseA = A.pseudoInverse();\r\nvar B = A.mmul(pseudoInverseA).mmul(A); // with pseudo inverse, A*pseudo-inverse(A)*A ~= A. It's the case here\r\n\r\n//=============\r\n// Least square\r\n//=============\r\n\r\n// Least square is the following problem : We search x, such as A.x = b (A, x and b are matrix or vectors).\r\n// Below, how to solve least square with our function\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[3, 1], [4.25, 1], [5.5, 1], [8, 1]]);\r\nvar b = Matrix.columnVector([4.5, 4.25, 5.5, 5.5]);\r\nvar x = solve(A, b);\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\r\nvar b = Matrix.columnVector([8, 20, 32]);\r\nvar x = solve(A, b, (useSVD = true)); // there are many solutions. x can be [1, 2, 1].transpose(), or [1.33, 1.33, 1.33].transpose(), etc.\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n//===============\r\n// Decompositions\r\n//===============\r\n\r\n// QR Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar QR = QrDecomposition(A);\r\nvar Q = QR.orthogonalMatrix;\r\nvar R = QR.upperTriangularMatrix;\r\n// So you have the QR decomposition. If you multiply Q by R, you'll see that A = Q.R, with Q orthogonal and R upper triangular\r\n\r\n// LU Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar LU = LuDecomposition(A);\r\nvar L = LU.lowerTriangularMatrix;\r\nvar U = LU.upperTriangularMatrix;\r\nvar P = LU.pivotPermutationVector;\r\n// So you have the LU decomposition. P includes the permutation of the matrix. Here P = [1, 2, 0], i.e the first row of LU is the second row of A, the second row of LU is the third row of A and the third row of LU is the first row of A.\r\n\r\n// Cholesky Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar cholesky = CholeskyDecomposition(A);\r\nvar L = cholesky.lowerTriangularMatrix;\r\n\r\n// Eigenvalues & eigenvectors\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar e = EigenvalueDecomposition(A);\r\nvar real = e.realEigenvalues;\r\nvar imaginary = e.imaginaryEigenvalues;\r\nvar vectors = e.eigenvectorMatrix;\r\n\r\n//=======\r\n// Others\r\n//=======\r\n\r\n// Linear dependencies\r\nvar A = new Matrix([\r\n  [2, 0, 0, 1],\r\n  [0, 1, 6, 0],\r\n  [0, 3, 0, 1],\r\n  [0, 0, 1, 0],\r\n  [0, 1, 2, 0]\r\n]);\r\nvar dependencies = linearDependencies(A); // dependencies is a matrix with the dependencies of the rows. When we look row by row, we see that the first row is [0, 0, 0, 0, 0], so it means that the first row is independent, and the second row is [ 0, 0, 0, 4, 1 ], i.e the second row = 4 times the 4th row + the 5th row.\r\n```\r\n\r\n## License\r\n\r\n[MIT](./LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/ml-matrix.svg?style=flat-square\r\n[npm-url]: https://npmjs.org/package/ml-matrix\r\n[travis-image]: https://img.shields.io/travis/mljs/matrix/master.svg?style=flat-square\r\n[travis-url]: https://travis-ci.org/mljs/matrix\r\n[codecov-image]: https://img.shields.io/codecov/c/github/mljs/matrix.svg?style=flat-square\r\n[codecov-url]: https://codecov.io/github/mljs/matrix\r\n[download-image]: https://img.shields.io/npm/dm/ml-matrix.svg?style=flat-square\r\n[download-url]: https://npmjs.org/package/ml-matrix\r\n","readmeFilename":"README.md","gitHead":"f745c7592ff414345f0e046d299a15e00acf8248","_id":"ml-matrix@6.0.0-2","_nodeVersion":"11.14.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-aK2lYb9h0cU5+CXGIIdJR9NlS50I/5KiQfMapbuX1Sq3zYUr89kHnFYdXItdGewNOHqdiiibtLfU/cnHVpQ/rg==","shasum":"b07c9545e1738df345d16362c6dfd492284c6ceb","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.0.0-2.tgz","fileCount":32,"unpackedSize":290833,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcuEaLCRA9TVsSAnZWagAAj+MP/iKBaRecoS3ChnANny9v\nDgFfaKw1bpJ56p+SGaaoXD/3doIUtTMUBlE71a3oIOaQ+x9o9u35ZyNtA5xZ\ndPdSgqgKM7SJ83zbjMJeDCAbxZnAZJKHUBs9w8vVvxKodJAEw4nzaa/6VVxX\ntzEmmaBu10VgTx93wnEFL6AW5t2YzMyafJil0jheqmXua1q0aULz831EnUtX\nNyOValREnbpEbY3izaK965//jtYA9GTK5tlcPCNKj6n97mo6OnDj54DIii4v\ncKIoSRjbv81EUIrrrabolrMmYDrbAHJF7cRoxz0JyGNcPWGkBt2VZ5d5gW1F\n0IC390Q8pPaD19L0ZdTIh9oPrGoyFH+FCdIEuYvPL3ZP3Ac1+A6gm6G9/ThO\nLz6OTfZChuYCuzcBGdgkgUeZ98TuCABKeLRGw3TaHUjQSvhZzYK2i6U8L8lv\n+iMQNK7Hz2fm+CQc26XtZvxxnVDMC+8ex3e0PYxizLsm+Af21lWsv1Hk1Lis\n3ddh3K+IatKFvsgBtmuXww7QOo791a13xjmtcf+LTOCTxTuw7P5yT83CwenK\nmmt/qUJ/0A4wZQHwZ5xmVLy4s3jvgTZ316scIIHKv14LESp3K28qG07FO9OB\nNsGHltF9TrSr5HoDeBsolXFnNHHB6SgG0+ZWROEY2xBONj1MFGNSL+d2/1y8\nttm4\r\n=/nC1\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.0.0-2_1555580554970_0.9894991320864903"},"_hasShrinkwrap":false},"6.0.0-3":{"name":"ml-matrix","version":"6.0.0-3","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.4.3","benchmark":"^2.1.4","csv-parse":"^4.4.0","eslint":"^5.16.0","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.17.2","eslint-plugin-jest":"^22.4.1","jest":"^24.7.1","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^5.9.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.10.0"},"dependencies":{"ml-array-rescale":"^1.2.1"},"readme":"# ml-matrix\r\n\r\n[![NPM version][npm-image]][npm-url]\r\n[![build status][travis-image]][travis-url]\r\n[![Test coverage][codecov-image]][codecov-url]\r\n[![npm download][download-image]][download-url]\r\n\r\nMatrix manipulation and computation library.\r\n\r\n## Installation\r\n\r\n`$ npm install ml-matrix`\r\n\r\n## Usage\r\n\r\n### As an ES module\r\n\r\n```js\r\nimport { Matrix } from 'ml-matrix';\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n### As a CommonJS module\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n## [API Documentation](https://mljs.github.io/matrix/)\r\n\r\n## Examples\r\n\r\n### Standard operations\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nvar A = new Matrix([[1, 1], [2, 2]]);\r\nvar B = new Matrix([[3, 3], [1, 1]]);\r\nvar C = new Matrix([[3, 3], [1, 1]]);\r\n\r\n// ============================\r\n// Operations with the matrix :\r\n// =============================\r\n\r\n// operations :\r\nconst addition = Matrix.add(A, B); // addition = Matrix [[4, 4], [3, 3], rows: 2, columns: 2]\r\nconst substraction = Matrix.sub(A, B); // substraction = Matrix [[-2, -2], [1, 1], rows: 2, columns: 2]\r\nconst multiplication = A.mmul(B); // multiplication = Matrix [[4, 4], [8, 8], rows: 2, columns: 2]\r\nconst mulByNumber = Matrix.mul(A, 10); // mulByNumber = Matrix [[10, 10], [20, 20], rows: 2, columns: 2]\r\nconst divByNumber = Matrix.div(A, 10); // divByNumber = Matrix [[0.1, 0.1], [0.2, 0.2], rows: 2, columns: 2]\r\nconst modulo = Matrix.mod(B, 2); // modulo = Matrix [[ 1, 1], [1, 1], rows: 2, columns: 2]\r\nconst maxMatrix = Matrix.max(A, B); // max = Matrix [[3, 3], [2, 2], rows: 2, columns: 2]\r\nconst minMatrix = Matrix.min(A, B); // max = Matrix [[1, 1], [1, 1], rows: 2, columns: 2]\r\n\r\n// Inplace operations : (consider that Cinit = C before all the operations below)\r\nC.add(A); // => C = Cinit + A\r\nC.sub(A); // => C = Cinit\r\nC.mul(10); // => C = 10 * Cinit\r\nC.div(10); // => C = Cinit\r\nC.mod(2); // => C = Cinit % 2\r\n\r\n// Standard Math operations : (abs, cos, round, etc.)\r\nvar A = new Matrix([[1, 1], [-1, -1]]);\r\nvar expon = Matrix.exp(A); // expon = Matrix [[Math.exp(1), Math.exp(1)], [Math.exp(-1), Math.exp(-1)], rows: 2, columns: 2].\r\nvar cosinus = Matrix.cos(A); // cosinus = Matrix [[Math.cos(1), Math.cos(1)], [Math.cos(-1), Math.cos(-1)], rows: 2, columns: 2].\r\nvar absolute = Matrix.abs(A); // expon = absolute [[1, 1], [1, 1], rows: 2, columns: 2].\r\n// you can use 'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil', 'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p', 'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n// Note : you can do it inplace too as A.abs()\r\n\r\n// ============================\r\n// Manipulation of the matrix :\r\n// =============================\r\n\r\nvar numberRows = A.rows; // A has 2 rows\r\nvar numberCols = A.columns; // A has 2 columns\r\nvar firstValue = A.get(0, 0); // get(rows, columns)\r\nvar numberElements = A.size; // 2 * 2 = 4 elements\r\nvar isRow = A.isRowVector(); // false because A has more that 1 row\r\nvar isColumn = A.isColumnVector(); // false because A has more that 1 column\r\nvar isSquare = A.isSquare(); // true, because A is 2 * 2 matrix\r\nvar isSym = A.isSymmetric(); // false, because A is not symmetric\r\n// remember : A = Matrix [[1, 1], [-1, -1], rows: 2, columns: 2]\r\nA.set(1, 0, 10); // A = Matrix [[1, 1], [10, -1], rows: 2, columns: 2]. We have change the second row and the first column\r\nvar diag = A.diag(); // diag = [1, -1], i.e values in the diagonal.\r\nvar m = A.mean(); // m = 2.75\r\nvar product = A.prod(); // product = -10, i.e product of all values of the matrix\r\nvar norm = A.norm(); // norm = 10.14889156509222, i.e Frobenius norm of the matrix\r\nvar transpose = A.transpose(); // tranpose = Matrix [[1, 10], [1, -1], rows: 2, columns: 2]\r\n\r\n// ============================\r\n// Instanciation of matrix :\r\n// =============================\r\n\r\nvar z = Matrix.zeros(3, 2); // z = Matrix [[0, 0], [0, 0], [0, 0], rows: 3, columns: 2]\r\nvar z = Matrix.ones(2, 3); // z = Matrix [[1, 1, 1], [1, 1, 1], rows: 2, columns: 3]\r\nvar z = Matrix.eye(3, 4); // Matrix [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], rows: 3, columns: 4]. there are 1 only in the diagonal\r\n```\r\n\r\n### Maths\r\n\r\n```js\r\nconst {\r\n  Matrix,\r\n  inverse,\r\n  solve,\r\n  linearDependencies,\r\n  QrDecomposition,\r\n  LuDecomposition,\r\n  CholeskyDecomposition\r\n} = require('ml-matrix');\r\n\r\n//===========================\r\n// inverse and pseudo-inverse\r\n//===========================\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar inverseA = inverse(A);\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), so B ~= Identity\r\n\r\n// if A is singular, you can use SVD :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]); // A is singular, so the standard computation of inverse won't work (you can test if you don't trust me^^)\r\nvar inverseA = inverse(A, (useSVD = true)); // inverseA is only an approximation of the inverse, by using the Singular Values Decomposition\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), but inverse(A) is only an approximation, so B doesn't really be identity.\r\n\r\n// if you want the pseudo-inverse of a matrix :\r\nvar A = new Matrix([[1, 2], [3, 4], [5, 6]]);\r\nvar pseudoInverseA = A.pseudoInverse();\r\nvar B = A.mmul(pseudoInverseA).mmul(A); // with pseudo inverse, A*pseudo-inverse(A)*A ~= A. It's the case here\r\n\r\n//=============\r\n// Least square\r\n//=============\r\n\r\n// Least square is the following problem : We search x, such as A.x = b (A, x and b are matrix or vectors).\r\n// Below, how to solve least square with our function\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[3, 1], [4.25, 1], [5.5, 1], [8, 1]]);\r\nvar b = Matrix.columnVector([4.5, 4.25, 5.5, 5.5]);\r\nvar x = solve(A, b);\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\r\nvar b = Matrix.columnVector([8, 20, 32]);\r\nvar x = solve(A, b, (useSVD = true)); // there are many solutions. x can be [1, 2, 1].transpose(), or [1.33, 1.33, 1.33].transpose(), etc.\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n//===============\r\n// Decompositions\r\n//===============\r\n\r\n// QR Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar QR = QrDecomposition(A);\r\nvar Q = QR.orthogonalMatrix;\r\nvar R = QR.upperTriangularMatrix;\r\n// So you have the QR decomposition. If you multiply Q by R, you'll see that A = Q.R, with Q orthogonal and R upper triangular\r\n\r\n// LU Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar LU = LuDecomposition(A);\r\nvar L = LU.lowerTriangularMatrix;\r\nvar U = LU.upperTriangularMatrix;\r\nvar P = LU.pivotPermutationVector;\r\n// So you have the LU decomposition. P includes the permutation of the matrix. Here P = [1, 2, 0], i.e the first row of LU is the second row of A, the second row of LU is the third row of A and the third row of LU is the first row of A.\r\n\r\n// Cholesky Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar cholesky = CholeskyDecomposition(A);\r\nvar L = cholesky.lowerTriangularMatrix;\r\n\r\n// Eigenvalues & eigenvectors\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar e = EigenvalueDecomposition(A);\r\nvar real = e.realEigenvalues;\r\nvar imaginary = e.imaginaryEigenvalues;\r\nvar vectors = e.eigenvectorMatrix;\r\n\r\n//=======\r\n// Others\r\n//=======\r\n\r\n// Linear dependencies\r\nvar A = new Matrix([\r\n  [2, 0, 0, 1],\r\n  [0, 1, 6, 0],\r\n  [0, 3, 0, 1],\r\n  [0, 0, 1, 0],\r\n  [0, 1, 2, 0]\r\n]);\r\nvar dependencies = linearDependencies(A); // dependencies is a matrix with the dependencies of the rows. When we look row by row, we see that the first row is [0, 0, 0, 0, 0], so it means that the first row is independent, and the second row is [ 0, 0, 0, 4, 1 ], i.e the second row = 4 times the 4th row + the 5th row.\r\n```\r\n\r\n## License\r\n\r\n[MIT](./LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/ml-matrix.svg?style=flat-square\r\n[npm-url]: https://npmjs.org/package/ml-matrix\r\n[travis-image]: https://img.shields.io/travis/mljs/matrix/master.svg?style=flat-square\r\n[travis-url]: https://travis-ci.org/mljs/matrix\r\n[codecov-image]: https://img.shields.io/codecov/c/github/mljs/matrix.svg?style=flat-square\r\n[codecov-url]: https://codecov.io/github/mljs/matrix\r\n[download-image]: https://img.shields.io/npm/dm/ml-matrix.svg?style=flat-square\r\n[download-url]: https://npmjs.org/package/ml-matrix\r\n","readmeFilename":"README.md","gitHead":"ea0bcd657d534cdb81b1615c73ef83609a104235","_id":"ml-matrix@6.0.0-3","_nodeVersion":"11.14.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-Zzkcmk+3haI0UqeyVWzmp8lbRaDhF2yLjmA3oltFQhM58uML34OuPgapxYwI+JHnTa6ePrcNyU25aXxgAvZU0Q==","shasum":"a1ce373062031836314b27e22ec50675c646319e","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.0.0-3.tgz","fileCount":32,"unpackedSize":290794,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcuF+QCRA9TVsSAnZWagAAFBsP/350tOKM0MC8l3dAQvXa\ngGZENTd/EveXtyg7kqzKSBUlTSj0tHoay5gGLSSgbhaiAu2kWT4oLzfIXYOD\n4pCQCyRAeHtbyO4ARS/qaYDZ5aZfqBYC47TI7zgmbq+KYY7CMafy+HWr3AaJ\n+MrKv/kAWZ0EakyngXY5x8clR+3impupuqzcyKbRtwYq9J7B+dCeIFR7grQv\n9Ff5v1tRjh1IS1+E+BPxH/3KKMyfES2XsT5AIrvHl8xPqGDJzKYoCZOMGRIc\nZIki0qVP3nIGi5kGxImTihney3/Ne33QPUXKdl/YrhelVEK3RD2uRakr6ovE\nMZXZ0GmNiS0bkR5fD2WqwX69Lf4Jt3vJr8L+6uCzX4xnAmxn2lkVnoZHj8Gc\n2QG2Uv8aSigkNFuhhCPzjFw9q+/ZHjFp9a+oiiHUTOoRjI7dzti5W5GIlSOV\nUN6FcUznC8h7Is95wKiW9plkme0NrTV333baYN9cTY6rMy3YxWw19+2rZNzr\nSGPmtxZzvP/5QlDWvpe8NFKew/7tNyueZq6iHpRSRIgMN6i+QT+DQDuXh8YO\n9IInF2/wYSRL29wKjdpePnamWeuMJdMW4LB2ah0gdKVu5T1+8DfYxKHC3kUu\nIr4a4jsAdN90pVzRgxKtWiVF67/OXcdfxyKD1YrHoBX7KooShVAHMVjYpdc0\ngchJ\r\n=PFNX\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.0.0-3_1555586960044_0.7292109195244438"},"_hasShrinkwrap":false},"6.0.0-4":{"name":"ml-matrix","version":"6.0.0-4","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.4.3","benchmark":"^2.1.4","csv-parse":"^4.4.0","eslint":"^5.16.0","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.17.2","eslint-plugin-jest":"^22.4.1","jest":"^24.7.1","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^5.9.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.10.0"},"dependencies":{"ml-array-rescale":"^1.2.1"},"readme":"# ml-matrix\r\n\r\n[![NPM version][npm-image]][npm-url]\r\n[![build status][travis-image]][travis-url]\r\n[![Test coverage][codecov-image]][codecov-url]\r\n[![npm download][download-image]][download-url]\r\n\r\nMatrix manipulation and computation library.\r\n\r\n## Installation\r\n\r\n`$ npm install ml-matrix`\r\n\r\n## Usage\r\n\r\n### As an ES module\r\n\r\n```js\r\nimport { Matrix } from 'ml-matrix';\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n### As a CommonJS module\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n## [API Documentation](https://mljs.github.io/matrix/)\r\n\r\n## Examples\r\n\r\n### Standard operations\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nvar A = new Matrix([[1, 1], [2, 2]]);\r\nvar B = new Matrix([[3, 3], [1, 1]]);\r\nvar C = new Matrix([[3, 3], [1, 1]]);\r\n\r\n// ============================\r\n// Operations with the matrix :\r\n// =============================\r\n\r\n// operations :\r\nconst addition = Matrix.add(A, B); // addition = Matrix [[4, 4], [3, 3], rows: 2, columns: 2]\r\nconst substraction = Matrix.sub(A, B); // substraction = Matrix [[-2, -2], [1, 1], rows: 2, columns: 2]\r\nconst multiplication = A.mmul(B); // multiplication = Matrix [[4, 4], [8, 8], rows: 2, columns: 2]\r\nconst mulByNumber = Matrix.mul(A, 10); // mulByNumber = Matrix [[10, 10], [20, 20], rows: 2, columns: 2]\r\nconst divByNumber = Matrix.div(A, 10); // divByNumber = Matrix [[0.1, 0.1], [0.2, 0.2], rows: 2, columns: 2]\r\nconst modulo = Matrix.mod(B, 2); // modulo = Matrix [[ 1, 1], [1, 1], rows: 2, columns: 2]\r\nconst maxMatrix = Matrix.max(A, B); // max = Matrix [[3, 3], [2, 2], rows: 2, columns: 2]\r\nconst minMatrix = Matrix.min(A, B); // max = Matrix [[1, 1], [1, 1], rows: 2, columns: 2]\r\n\r\n// Inplace operations : (consider that Cinit = C before all the operations below)\r\nC.add(A); // => C = Cinit + A\r\nC.sub(A); // => C = Cinit\r\nC.mul(10); // => C = 10 * Cinit\r\nC.div(10); // => C = Cinit\r\nC.mod(2); // => C = Cinit % 2\r\n\r\n// Standard Math operations : (abs, cos, round, etc.)\r\nvar A = new Matrix([[1, 1], [-1, -1]]);\r\nvar expon = Matrix.exp(A); // expon = Matrix [[Math.exp(1), Math.exp(1)], [Math.exp(-1), Math.exp(-1)], rows: 2, columns: 2].\r\nvar cosinus = Matrix.cos(A); // cosinus = Matrix [[Math.cos(1), Math.cos(1)], [Math.cos(-1), Math.cos(-1)], rows: 2, columns: 2].\r\nvar absolute = Matrix.abs(A); // expon = absolute [[1, 1], [1, 1], rows: 2, columns: 2].\r\n// you can use 'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil', 'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p', 'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n// Note : you can do it inplace too as A.abs()\r\n\r\n// ============================\r\n// Manipulation of the matrix :\r\n// =============================\r\n\r\nvar numberRows = A.rows; // A has 2 rows\r\nvar numberCols = A.columns; // A has 2 columns\r\nvar firstValue = A.get(0, 0); // get(rows, columns)\r\nvar numberElements = A.size; // 2 * 2 = 4 elements\r\nvar isRow = A.isRowVector(); // false because A has more that 1 row\r\nvar isColumn = A.isColumnVector(); // false because A has more that 1 column\r\nvar isSquare = A.isSquare(); // true, because A is 2 * 2 matrix\r\nvar isSym = A.isSymmetric(); // false, because A is not symmetric\r\n// remember : A = Matrix [[1, 1], [-1, -1], rows: 2, columns: 2]\r\nA.set(1, 0, 10); // A = Matrix [[1, 1], [10, -1], rows: 2, columns: 2]. We have change the second row and the first column\r\nvar diag = A.diag(); // diag = [1, -1], i.e values in the diagonal.\r\nvar m = A.mean(); // m = 2.75\r\nvar product = A.prod(); // product = -10, i.e product of all values of the matrix\r\nvar norm = A.norm(); // norm = 10.14889156509222, i.e Frobenius norm of the matrix\r\nvar transpose = A.transpose(); // tranpose = Matrix [[1, 10], [1, -1], rows: 2, columns: 2]\r\n\r\n// ============================\r\n// Instanciation of matrix :\r\n// =============================\r\n\r\nvar z = Matrix.zeros(3, 2); // z = Matrix [[0, 0], [0, 0], [0, 0], rows: 3, columns: 2]\r\nvar z = Matrix.ones(2, 3); // z = Matrix [[1, 1, 1], [1, 1, 1], rows: 2, columns: 3]\r\nvar z = Matrix.eye(3, 4); // Matrix [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], rows: 3, columns: 4]. there are 1 only in the diagonal\r\n```\r\n\r\n### Maths\r\n\r\n```js\r\nconst {\r\n  Matrix,\r\n  inverse,\r\n  solve,\r\n  linearDependencies,\r\n  QrDecomposition,\r\n  LuDecomposition,\r\n  CholeskyDecomposition\r\n} = require('ml-matrix');\r\n\r\n//===========================\r\n// inverse and pseudo-inverse\r\n//===========================\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar inverseA = inverse(A);\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), so B ~= Identity\r\n\r\n// if A is singular, you can use SVD :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]); // A is singular, so the standard computation of inverse won't work (you can test if you don't trust me^^)\r\nvar inverseA = inverse(A, (useSVD = true)); // inverseA is only an approximation of the inverse, by using the Singular Values Decomposition\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), but inverse(A) is only an approximation, so B doesn't really be identity.\r\n\r\n// if you want the pseudo-inverse of a matrix :\r\nvar A = new Matrix([[1, 2], [3, 4], [5, 6]]);\r\nvar pseudoInverseA = A.pseudoInverse();\r\nvar B = A.mmul(pseudoInverseA).mmul(A); // with pseudo inverse, A*pseudo-inverse(A)*A ~= A. It's the case here\r\n\r\n//=============\r\n// Least square\r\n//=============\r\n\r\n// Least square is the following problem : We search x, such as A.x = b (A, x and b are matrix or vectors).\r\n// Below, how to solve least square with our function\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[3, 1], [4.25, 1], [5.5, 1], [8, 1]]);\r\nvar b = Matrix.columnVector([4.5, 4.25, 5.5, 5.5]);\r\nvar x = solve(A, b);\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\r\nvar b = Matrix.columnVector([8, 20, 32]);\r\nvar x = solve(A, b, (useSVD = true)); // there are many solutions. x can be [1, 2, 1].transpose(), or [1.33, 1.33, 1.33].transpose(), etc.\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n//===============\r\n// Decompositions\r\n//===============\r\n\r\n// QR Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar QR = QrDecomposition(A);\r\nvar Q = QR.orthogonalMatrix;\r\nvar R = QR.upperTriangularMatrix;\r\n// So you have the QR decomposition. If you multiply Q by R, you'll see that A = Q.R, with Q orthogonal and R upper triangular\r\n\r\n// LU Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar LU = LuDecomposition(A);\r\nvar L = LU.lowerTriangularMatrix;\r\nvar U = LU.upperTriangularMatrix;\r\nvar P = LU.pivotPermutationVector;\r\n// So you have the LU decomposition. P includes the permutation of the matrix. Here P = [1, 2, 0], i.e the first row of LU is the second row of A, the second row of LU is the third row of A and the third row of LU is the first row of A.\r\n\r\n// Cholesky Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar cholesky = CholeskyDecomposition(A);\r\nvar L = cholesky.lowerTriangularMatrix;\r\n\r\n// Eigenvalues & eigenvectors\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar e = EigenvalueDecomposition(A);\r\nvar real = e.realEigenvalues;\r\nvar imaginary = e.imaginaryEigenvalues;\r\nvar vectors = e.eigenvectorMatrix;\r\n\r\n//=======\r\n// Others\r\n//=======\r\n\r\n// Linear dependencies\r\nvar A = new Matrix([\r\n  [2, 0, 0, 1],\r\n  [0, 1, 6, 0],\r\n  [0, 3, 0, 1],\r\n  [0, 0, 1, 0],\r\n  [0, 1, 2, 0]\r\n]);\r\nvar dependencies = linearDependencies(A); // dependencies is a matrix with the dependencies of the rows. When we look row by row, we see that the first row is [0, 0, 0, 0, 0], so it means that the first row is independent, and the second row is [ 0, 0, 0, 4, 1 ], i.e the second row = 4 times the 4th row + the 5th row.\r\n```\r\n\r\n## License\r\n\r\n[MIT](./LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/ml-matrix.svg?style=flat-square\r\n[npm-url]: https://npmjs.org/package/ml-matrix\r\n[travis-image]: https://img.shields.io/travis/mljs/matrix/master.svg?style=flat-square\r\n[travis-url]: https://travis-ci.org/mljs/matrix\r\n[codecov-image]: https://img.shields.io/codecov/c/github/mljs/matrix.svg?style=flat-square\r\n[codecov-url]: https://codecov.io/github/mljs/matrix\r\n[download-image]: https://img.shields.io/npm/dm/ml-matrix.svg?style=flat-square\r\n[download-url]: https://npmjs.org/package/ml-matrix\r\n","readmeFilename":"README.md","gitHead":"7cdb3a91d355d03aca92cf5be3b17b119a1de06b","_id":"ml-matrix@6.0.0-4","_nodeVersion":"11.14.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-wIlzX8wwK3EuHCB7uov8blvZUz8Jo+k+RpBzNRSt0S6ev29yG5ZNYOfyVZsocqS86ya2wK7yCUSaluCo+9Hrfg==","shasum":"47bd0f9d6fa972a8fcf99d0a085ab23e76a68d2f","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.0.0-4.tgz","fileCount":32,"unpackedSize":292405,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcuGVtCRA9TVsSAnZWagAAEeAP/1wOxmVobQnoLUuQOIEd\nQBP7PQwkpEXcxmzbzDSHLvx7nfHKqUuNMTAANf4S9Pe7CLjzO5f6Taf4h9D4\nUs8FeaAbUl+4zLL9wMIoUdyUflke2j6xW6etSDqni9WvyMPNcRboIEuf3saI\nJSrjWi5460GcY8baETBGaTxmyTj3NTKmbK+ihZEhmEBgRXCjvPdrSjkuUK7O\nml9+7cSKuSC0EM5VSyYs5/HCidnfmvQQETlOvLATEY7RsMXprqE3g8vJzHu+\nRsCWeiLo8PQ3t0aa8285vTUqX2mBl8Rz23IK2ZHEsUdg3AP7b+nvVuA9gvO1\nLlwtGcmBDzpmCpuFAmyjLKYpwonreQu1DRjej03DpNYLRU4YCKlPDDn2e+vq\nFK8WBk9FLm43VzG916/Cq9Y4IzmdjG98fZ0Q1eoCQXv3ruLY8qgTjIMJP58G\nnJz658gc0QCftOZuTihwe6OfgTtoQJ+1gO96AYlSRFtY71RSLfklNvBFSX/Q\nJRccGxxWDWkNtfIrghQbiSX+0OlurB8btbTFS8k6y01gm7NGRaAbH361h07a\nuYpSbncnLA2uFd8vFDDswmmECW5AvNy/rhTsjBhkH3JF3oI8Bm5ynI/L7pJw\nSZq494DPLWZNHkY6tx4BbQ0ZPVBIJzaJ7ht4HaQL1VbCtiomjqaQNqJk4h0t\nOFMP\r\n=7zfB\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.0.0-4_1555588461378_0.9946468873541938"},"_hasShrinkwrap":false},"6.0.0-5":{"name":"ml-matrix","version":"6.0.0-5","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.4.3","benchmark":"^2.1.4","csv-parse":"^4.4.0","eslint":"^5.16.0","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.17.2","eslint-plugin-jest":"^22.4.1","jest":"^24.7.1","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^5.9.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.10.0"},"dependencies":{"ml-array-rescale":"^1.2.1"},"gitHead":"b8b2c9f43659a68743e44011666fd16b4fa583a3","readme":"# ml-matrix\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![npm download][download-image]][download-url]\n\nMatrix manipulation and computation library.\n\n## Installation\n\n`$ npm install ml-matrix`\n\n## Usage\n\n### As an ES module\n\n```js\nimport { Matrix } from 'ml-matrix';\n\nconst matrix = Matrix.ones(5, 5);\n```\n\n### As a CommonJS module\n\n```js\nconst { Matrix } = require('ml-matrix');\n\nconst matrix = Matrix.ones(5, 5);\n```\n\n## [API Documentation](https://mljs.github.io/matrix/)\n\n## Examples\n\n### Standard operations\n\n```js\nconst { Matrix } = require('ml-matrix');\n\nvar A = new Matrix([[1, 1], [2, 2]]);\nvar B = new Matrix([[3, 3], [1, 1]]);\nvar C = new Matrix([[3, 3], [1, 1]]);\n\n// ============================\n// Operations with the matrix :\n// =============================\n\n// operations :\nconst addition = Matrix.add(A, B); // addition = Matrix [[4, 4], [3, 3], rows: 2, columns: 2]\nconst substraction = Matrix.sub(A, B); // substraction = Matrix [[-2, -2], [1, 1], rows: 2, columns: 2]\nconst multiplication = A.mmul(B); // multiplication = Matrix [[4, 4], [8, 8], rows: 2, columns: 2]\nconst mulByNumber = Matrix.mul(A, 10); // mulByNumber = Matrix [[10, 10], [20, 20], rows: 2, columns: 2]\nconst divByNumber = Matrix.div(A, 10); // divByNumber = Matrix [[0.1, 0.1], [0.2, 0.2], rows: 2, columns: 2]\nconst modulo = Matrix.mod(B, 2); // modulo = Matrix [[ 1, 1], [1, 1], rows: 2, columns: 2]\nconst maxMatrix = Matrix.max(A, B); // max = Matrix [[3, 3], [2, 2], rows: 2, columns: 2]\nconst minMatrix = Matrix.min(A, B); // max = Matrix [[1, 1], [1, 1], rows: 2, columns: 2]\n\n// Inplace operations : (consider that Cinit = C before all the operations below)\nC.add(A); // => C = Cinit + A\nC.sub(A); // => C = Cinit\nC.mul(10); // => C = 10 * Cinit\nC.div(10); // => C = Cinit\nC.mod(2); // => C = Cinit % 2\n\n// Standard Math operations : (abs, cos, round, etc.)\nvar A = new Matrix([[1, 1], [-1, -1]]);\nvar expon = Matrix.exp(A); // expon = Matrix [[Math.exp(1), Math.exp(1)], [Math.exp(-1), Math.exp(-1)], rows: 2, columns: 2].\nvar cosinus = Matrix.cos(A); // cosinus = Matrix [[Math.cos(1), Math.cos(1)], [Math.cos(-1), Math.cos(-1)], rows: 2, columns: 2].\nvar absolute = Matrix.abs(A); // expon = absolute [[1, 1], [1, 1], rows: 2, columns: 2].\n// you can use 'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil', 'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p', 'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n// Note : you can do it inplace too as A.abs()\n\n// ============================\n// Manipulation of the matrix :\n// =============================\n\nvar numberRows = A.rows; // A has 2 rows\nvar numberCols = A.columns; // A has 2 columns\nvar firstValue = A.get(0, 0); // get(rows, columns)\nvar numberElements = A.size; // 2 * 2 = 4 elements\nvar isRow = A.isRowVector(); // false because A has more that 1 row\nvar isColumn = A.isColumnVector(); // false because A has more that 1 column\nvar isSquare = A.isSquare(); // true, because A is 2 * 2 matrix\nvar isSym = A.isSymmetric(); // false, because A is not symmetric\n// remember : A = Matrix [[1, 1], [-1, -1], rows: 2, columns: 2]\nA.set(1, 0, 10); // A = Matrix [[1, 1], [10, -1], rows: 2, columns: 2]. We have change the second row and the first column\nvar diag = A.diag(); // diag = [1, -1], i.e values in the diagonal.\nvar m = A.mean(); // m = 2.75\nvar product = A.prod(); // product = -10, i.e product of all values of the matrix\nvar norm = A.norm(); // norm = 10.14889156509222, i.e Frobenius norm of the matrix\nvar transpose = A.transpose(); // tranpose = Matrix [[1, 10], [1, -1], rows: 2, columns: 2]\n\n// ============================\n// Instanciation of matrix :\n// =============================\n\nvar z = Matrix.zeros(3, 2); // z = Matrix [[0, 0], [0, 0], [0, 0], rows: 3, columns: 2]\nvar z = Matrix.ones(2, 3); // z = Matrix [[1, 1, 1], [1, 1, 1], rows: 2, columns: 3]\nvar z = Matrix.eye(3, 4); // Matrix [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], rows: 3, columns: 4]. there are 1 only in the diagonal\n```\n\n### Maths\n\n```js\nconst {\n  Matrix,\n  inverse,\n  solve,\n  linearDependencies,\n  QrDecomposition,\n  LuDecomposition,\n  CholeskyDecomposition\n} = require('ml-matrix');\n\n//===========================\n// inverse and pseudo-inverse\n//===========================\n\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\nvar inverseA = inverse(A);\nvar B = A.mmul(inverseA); // B = A * inverse(A), so B ~= Identity\n\n// if A is singular, you can use SVD :\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]); // A is singular, so the standard computation of inverse won't work (you can test if you don't trust me^^)\nvar inverseA = inverse(A, (useSVD = true)); // inverseA is only an approximation of the inverse, by using the Singular Values Decomposition\nvar B = A.mmul(inverseA); // B = A * inverse(A), but inverse(A) is only an approximation, so B doesn't really be identity.\n\n// if you want the pseudo-inverse of a matrix :\nvar A = new Matrix([[1, 2], [3, 4], [5, 6]]);\nvar pseudoInverseA = A.pseudoInverse();\nvar B = A.mmul(pseudoInverseA).mmul(A); // with pseudo inverse, A*pseudo-inverse(A)*A ~= A. It's the case here\n\n//=============\n// Least square\n//=============\n\n// Least square is the following problem : We search x, such as A.x = b (A, x and b are matrix or vectors).\n// Below, how to solve least square with our function\n\n// If A is non singular :\nvar A = new Matrix([[3, 1], [4.25, 1], [5.5, 1], [8, 1]]);\nvar b = Matrix.columnVector([4.5, 4.25, 5.5, 5.5]);\nvar x = solve(A, b);\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\n\n// If A is non singular :\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\nvar b = Matrix.columnVector([8, 20, 32]);\nvar x = solve(A, b, (useSVD = true)); // there are many solutions. x can be [1, 2, 1].transpose(), or [1.33, 1.33, 1.33].transpose(), etc.\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\n\n//===============\n// Decompositions\n//===============\n\n// QR Decomposition\n\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\nvar QR = QrDecomposition(A);\nvar Q = QR.orthogonalMatrix;\nvar R = QR.upperTriangularMatrix;\n// So you have the QR decomposition. If you multiply Q by R, you'll see that A = Q.R, with Q orthogonal and R upper triangular\n\n// LU Decomposition\n\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\nvar LU = LuDecomposition(A);\nvar L = LU.lowerTriangularMatrix;\nvar U = LU.upperTriangularMatrix;\nvar P = LU.pivotPermutationVector;\n// So you have the LU decomposition. P includes the permutation of the matrix. Here P = [1, 2, 0], i.e the first row of LU is the second row of A, the second row of LU is the third row of A and the third row of LU is the first row of A.\n\n// Cholesky Decomposition\n\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\nvar cholesky = CholeskyDecomposition(A);\nvar L = cholesky.lowerTriangularMatrix;\n\n// Eigenvalues & eigenvectors\n\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\nvar e = EigenvalueDecomposition(A);\nvar real = e.realEigenvalues;\nvar imaginary = e.imaginaryEigenvalues;\nvar vectors = e.eigenvectorMatrix;\n\n//=======\n// Others\n//=======\n\n// Linear dependencies\nvar A = new Matrix([\n  [2, 0, 0, 1],\n  [0, 1, 6, 0],\n  [0, 3, 0, 1],\n  [0, 0, 1, 0],\n  [0, 1, 2, 0]\n]);\nvar dependencies = linearDependencies(A); // dependencies is a matrix with the dependencies of the rows. When we look row by row, we see that the first row is [0, 0, 0, 0, 0], so it means that the first row is independent, and the second row is [ 0, 0, 0, 4, 1 ], i.e the second row = 4 times the 4th row + the 5th row.\n```\n\n## License\n\n[MIT](./LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/ml-matrix.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/ml-matrix\n[travis-image]: https://img.shields.io/travis/mljs/matrix/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/mljs/matrix\n[codecov-image]: https://img.shields.io/codecov/c/github/mljs/matrix.svg?style=flat-square\n[codecov-url]: https://codecov.io/github/mljs/matrix\n[download-image]: https://img.shields.io/npm/dm/ml-matrix.svg?style=flat-square\n[download-url]: https://npmjs.org/package/ml-matrix\n","readmeFilename":"README.md","_id":"ml-matrix@6.0.0-5","_nodeVersion":"11.14.0","_npmVersion":"6.7.0","dist":{"integrity":"sha512-CfWNC4Q7aBVI6dD9i+3MMCnkfbzhGNo0qv5sqDPGUGfsBepykeBa1mpcx1Om76HaichjRcrX93sOkfPN2nvWTQ==","shasum":"4948c5ddd579bae5829a42add5758c7be92e8abb","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.0.0-5.tgz","fileCount":35,"unpackedSize":268410,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcuO0mCRA9TVsSAnZWagAAAuMQAIzyPlAu9fMMfVouhhbh\nJRysCDz1hsQ+oghC6I/ZAZpwV3Qh8peXEpVqwSGXDcITiCKFYQPMcLrt+fIa\nYCNdkYBKETy6svU0oUKkEoSPaXTNTIvJfsjStZVT83cbnkMxGCzCyZALPOcE\nyMpmOd9Zjh5g1GXkkYUUX8orkgM27LbUWtqLHf6bjDUSKmKOCQBPA9JhIy/S\ngG0ntrcPR1tjEpiUWvMpk1MlG+jY46nrhWl5ZCdj6MOsTQdJVRx4a9Ac7ucn\n5o3c+hCobWuUhw+q4jllsUe4pl8GYq4iXwuk68VdSSI3VW56jZxoaBbOxJM8\nRwxhsdMLCsW5KknWnjBojMLefa1tVNZXd+EyCtxTu51ueinmPveMqjvhCZjI\nopGrFAZKFSyUVZLDZocREtTDipLWmeqwyVzJaeKu7yPG22c6o/lDI7K2za4a\ngK82/XO4cupKy0Z03/EleIcSVsn+Mp2UhHqWojG3NBJfC+jCT3iwNNRJMtHr\nzVoHmJb5GaSYqkMdI1oG2tvAIqrjaGDWC24FQRntdx3QIg36K5xHMPgIY368\nn/auV7N1bS4gbfxp0oOJWVvxXLuW+Ta6azrkFKDBFTDXFT/0pZVu4cLOrbSG\nbxD7UmKwr6pmXIVz5rgw4lwAZ9Kut+3NT+hoD/3fjQZFZ68p2nHnmsnCZCNF\nW+7k\r\n=RGaR\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.0.0-5_1555623205375_0.7056892320177359"},"_hasShrinkwrap":false},"6.0.0-6":{"name":"ml-matrix","version":"6.0.0-6","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","sideEffects":false,"scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.4.3","benchmark":"^2.1.4","csv-parse":"^4.4.0","eslint":"^5.16.0","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.17.2","eslint-plugin-jest":"^22.4.1","jest":"^24.7.1","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^5.9.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.10.0"},"dependencies":{"ml-array-rescale":"^1.2.1"},"readme":"# ml-matrix\r\n\r\n[![NPM version][npm-image]][npm-url]\r\n[![build status][travis-image]][travis-url]\r\n[![Test coverage][codecov-image]][codecov-url]\r\n[![npm download][download-image]][download-url]\r\n\r\nMatrix manipulation and computation library.\r\n\r\n## Installation\r\n\r\n`$ npm install ml-matrix`\r\n\r\n## Usage\r\n\r\n### As an ES module\r\n\r\n```js\r\nimport { Matrix } from 'ml-matrix';\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n### As a CommonJS module\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nconst matrix = Matrix.ones(5, 5);\r\n```\r\n\r\n## [API Documentation](https://mljs.github.io/matrix/)\r\n\r\n## Examples\r\n\r\n### Standard operations\r\n\r\n```js\r\nconst { Matrix } = require('ml-matrix');\r\n\r\nvar A = new Matrix([[1, 1], [2, 2]]);\r\nvar B = new Matrix([[3, 3], [1, 1]]);\r\nvar C = new Matrix([[3, 3], [1, 1]]);\r\n\r\n// ============================\r\n// Operations with the matrix :\r\n// =============================\r\n\r\n// operations :\r\nconst addition = Matrix.add(A, B); // addition = Matrix [[4, 4], [3, 3], rows: 2, columns: 2]\r\nconst substraction = Matrix.sub(A, B); // substraction = Matrix [[-2, -2], [1, 1], rows: 2, columns: 2]\r\nconst multiplication = A.mmul(B); // multiplication = Matrix [[4, 4], [8, 8], rows: 2, columns: 2]\r\nconst mulByNumber = Matrix.mul(A, 10); // mulByNumber = Matrix [[10, 10], [20, 20], rows: 2, columns: 2]\r\nconst divByNumber = Matrix.div(A, 10); // divByNumber = Matrix [[0.1, 0.1], [0.2, 0.2], rows: 2, columns: 2]\r\nconst modulo = Matrix.mod(B, 2); // modulo = Matrix [[ 1, 1], [1, 1], rows: 2, columns: 2]\r\nconst maxMatrix = Matrix.max(A, B); // max = Matrix [[3, 3], [2, 2], rows: 2, columns: 2]\r\nconst minMatrix = Matrix.min(A, B); // max = Matrix [[1, 1], [1, 1], rows: 2, columns: 2]\r\n\r\n// Inplace operations : (consider that Cinit = C before all the operations below)\r\nC.add(A); // => C = Cinit + A\r\nC.sub(A); // => C = Cinit\r\nC.mul(10); // => C = 10 * Cinit\r\nC.div(10); // => C = Cinit\r\nC.mod(2); // => C = Cinit % 2\r\n\r\n// Standard Math operations : (abs, cos, round, etc.)\r\nvar A = new Matrix([[1, 1], [-1, -1]]);\r\nvar expon = Matrix.exp(A); // expon = Matrix [[Math.exp(1), Math.exp(1)], [Math.exp(-1), Math.exp(-1)], rows: 2, columns: 2].\r\nvar cosinus = Matrix.cos(A); // cosinus = Matrix [[Math.cos(1), Math.cos(1)], [Math.cos(-1), Math.cos(-1)], rows: 2, columns: 2].\r\nvar absolute = Matrix.abs(A); // expon = absolute [[1, 1], [1, 1], rows: 2, columns: 2].\r\n// you can use 'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil', 'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p', 'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n// Note : you can do it inplace too as A.abs()\r\n\r\n// ============================\r\n// Manipulation of the matrix :\r\n// =============================\r\n\r\nvar numberRows = A.rows; // A has 2 rows\r\nvar numberCols = A.columns; // A has 2 columns\r\nvar firstValue = A.get(0, 0); // get(rows, columns)\r\nvar numberElements = A.size; // 2 * 2 = 4 elements\r\nvar isRow = A.isRowVector(); // false because A has more that 1 row\r\nvar isColumn = A.isColumnVector(); // false because A has more that 1 column\r\nvar isSquare = A.isSquare(); // true, because A is 2 * 2 matrix\r\nvar isSym = A.isSymmetric(); // false, because A is not symmetric\r\n// remember : A = Matrix [[1, 1], [-1, -1], rows: 2, columns: 2]\r\nA.set(1, 0, 10); // A = Matrix [[1, 1], [10, -1], rows: 2, columns: 2]. We have change the second row and the first column\r\nvar diag = A.diag(); // diag = [1, -1], i.e values in the diagonal.\r\nvar m = A.mean(); // m = 2.75\r\nvar product = A.prod(); // product = -10, i.e product of all values of the matrix\r\nvar norm = A.norm(); // norm = 10.14889156509222, i.e Frobenius norm of the matrix\r\nvar transpose = A.transpose(); // tranpose = Matrix [[1, 10], [1, -1], rows: 2, columns: 2]\r\n\r\n// ============================\r\n// Instanciation of matrix :\r\n// =============================\r\n\r\nvar z = Matrix.zeros(3, 2); // z = Matrix [[0, 0], [0, 0], [0, 0], rows: 3, columns: 2]\r\nvar z = Matrix.ones(2, 3); // z = Matrix [[1, 1, 1], [1, 1, 1], rows: 2, columns: 3]\r\nvar z = Matrix.eye(3, 4); // Matrix [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], rows: 3, columns: 4]. there are 1 only in the diagonal\r\n```\r\n\r\n### Maths\r\n\r\n```js\r\nconst {\r\n  Matrix,\r\n  inverse,\r\n  solve,\r\n  linearDependencies,\r\n  QrDecomposition,\r\n  LuDecomposition,\r\n  CholeskyDecomposition\r\n} = require('ml-matrix');\r\n\r\n//===========================\r\n// inverse and pseudo-inverse\r\n//===========================\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar inverseA = inverse(A);\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), so B ~= Identity\r\n\r\n// if A is singular, you can use SVD :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]); // A is singular, so the standard computation of inverse won't work (you can test if you don't trust me^^)\r\nvar inverseA = inverse(A, (useSVD = true)); // inverseA is only an approximation of the inverse, by using the Singular Values Decomposition\r\nvar B = A.mmul(inverseA); // B = A * inverse(A), but inverse(A) is only an approximation, so B doesn't really be identity.\r\n\r\n// if you want the pseudo-inverse of a matrix :\r\nvar A = new Matrix([[1, 2], [3, 4], [5, 6]]);\r\nvar pseudoInverseA = A.pseudoInverse();\r\nvar B = A.mmul(pseudoInverseA).mmul(A); // with pseudo inverse, A*pseudo-inverse(A)*A ~= A. It's the case here\r\n\r\n//=============\r\n// Least square\r\n//=============\r\n\r\n// Least square is the following problem : We search x, such as A.x = b (A, x and b are matrix or vectors).\r\n// Below, how to solve least square with our function\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[3, 1], [4.25, 1], [5.5, 1], [8, 1]]);\r\nvar b = Matrix.columnVector([4.5, 4.25, 5.5, 5.5]);\r\nvar x = solve(A, b);\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n// If A is non singular :\r\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\r\nvar b = Matrix.columnVector([8, 20, 32]);\r\nvar x = solve(A, b, (useSVD = true)); // there are many solutions. x can be [1, 2, 1].transpose(), or [1.33, 1.33, 1.33].transpose(), etc.\r\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\r\n\r\n//===============\r\n// Decompositions\r\n//===============\r\n\r\n// QR Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar QR = QrDecomposition(A);\r\nvar Q = QR.orthogonalMatrix;\r\nvar R = QR.upperTriangularMatrix;\r\n// So you have the QR decomposition. If you multiply Q by R, you'll see that A = Q.R, with Q orthogonal and R upper triangular\r\n\r\n// LU Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar LU = LuDecomposition(A);\r\nvar L = LU.lowerTriangularMatrix;\r\nvar U = LU.upperTriangularMatrix;\r\nvar P = LU.pivotPermutationVector;\r\n// So you have the LU decomposition. P includes the permutation of the matrix. Here P = [1, 2, 0], i.e the first row of LU is the second row of A, the second row of LU is the third row of A and the third row of LU is the first row of A.\r\n\r\n// Cholesky Decomposition\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar cholesky = CholeskyDecomposition(A);\r\nvar L = cholesky.lowerTriangularMatrix;\r\n\r\n// Eigenvalues & eigenvectors\r\n\r\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\r\nvar e = EigenvalueDecomposition(A);\r\nvar real = e.realEigenvalues;\r\nvar imaginary = e.imaginaryEigenvalues;\r\nvar vectors = e.eigenvectorMatrix;\r\n\r\n//=======\r\n// Others\r\n//=======\r\n\r\n// Linear dependencies\r\nvar A = new Matrix([\r\n  [2, 0, 0, 1],\r\n  [0, 1, 6, 0],\r\n  [0, 3, 0, 1],\r\n  [0, 0, 1, 0],\r\n  [0, 1, 2, 0]\r\n]);\r\nvar dependencies = linearDependencies(A); // dependencies is a matrix with the dependencies of the rows. When we look row by row, we see that the first row is [0, 0, 0, 0, 0], so it means that the first row is independent, and the second row is [ 0, 0, 0, 4, 1 ], i.e the second row = 4 times the 4th row + the 5th row.\r\n```\r\n\r\n## License\r\n\r\n[MIT](./LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/ml-matrix.svg?style=flat-square\r\n[npm-url]: https://npmjs.org/package/ml-matrix\r\n[travis-image]: https://img.shields.io/travis/mljs/matrix/master.svg?style=flat-square\r\n[travis-url]: https://travis-ci.org/mljs/matrix\r\n[codecov-image]: https://img.shields.io/codecov/c/github/mljs/matrix.svg?style=flat-square\r\n[codecov-url]: https://codecov.io/github/mljs/matrix\r\n[download-image]: https://img.shields.io/npm/dm/ml-matrix.svg?style=flat-square\r\n[download-url]: https://npmjs.org/package/ml-matrix\r\n","readmeFilename":"README.md","gitHead":"6877bd94d38156432954ac92b3f8fee2bf6e9ac6","_id":"ml-matrix@6.0.0-6","_nodeVersion":"12.0.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-TvysHOyAM+0P9QzCEMpehk02v4CJ0QpxjODv40wqPIwxaOOaO2QAOCtHT/ABBJm1KKgrJL0hgMjMaCQ5/tYIrQ==","shasum":"39a9201652ed464fff727de49ae71b32cc5d64f2","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.0.0-6.tgz","fileCount":37,"unpackedSize":311813,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcwZTgCRA9TVsSAnZWagAAcBkP/3EQHF2yRi2mAODiUJO/\nGgBppoUsu/m2OYViEjODx7mgZaSpYyo0ghAjer+VdzQs+uTgC+i4YUOVHANw\nf4vM4yjr8pCxW9Lme93iyY4svYTV8sDXrDprDjKSTaKQ8paZJmm7ve4Bd5wa\nMqtpsUFjAnz0mkvUrI13GQeHD+rZueZyI17qf0ZcGb3lKs/XXZ1P2o0W29FS\n2ZZOkyuwAURVtkki0sQbMGShlUgmcB4nNChN/AUxUxLNPkaCUlBZSYDEnBo1\nVl15vqTHas+csSpg81Zbd5JmHF0uzXX4eeYrOjPoHTcSBWVHsaa6kRLc6L+K\ntFhoOVJoY/iryy+L/nTcaKJ7DfsbVlDWNkGsmo2yiuj79GZhIGwQI8jhSUP8\nc8fjix+NeKqW/4ARpp+3Eak/kpoQhGsbsE2p06qb92xTLJIneUrh0+uf/YhS\nrqS1BYVp1R9N8WAWlDzErTS9/X3GJS75quiyiY6y6/NDlY+dIhOwGdyw/rhq\nKRO+OVvIMWaIfV+9309+LU8/HeffDku40jEF91hJ8rPKyV3V+ytvcExKtKhr\nLFlt7/MhGSfF/r3Q7cy5wxMJZsLF44ySCqKA2UyRpfmaIBFHENzAWDg+bVYR\nc/d8RXUAN+1jPNIBX5XrTun61wMuu483mbfxOb3z73vWEpyI2DS+emSEpNVu\nRo1m\r\n=Wpnb\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.0.0-6_1556190431346_0.9779460715938841"},"_hasShrinkwrap":false},"6.0.0":{"name":"ml-matrix","version":"6.0.0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","sideEffects":false,"scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.4.3","benchmark":"^2.1.4","csv-parse":"^4.4.0","eslint":"^5.16.0","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.17.2","eslint-plugin-jest":"^22.4.1","jest":"^24.7.1","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^5.9.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.10.0"},"dependencies":{"ml-array-rescale":"^1.2.1"},"gitHead":"d9c9d499ed317c5685c1366bce2f67430cf2b6a6","_id":"ml-matrix@6.0.0","_nodeVersion":"12.0.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-yEsPKkUohwukvhBgWURSX+X09kf3+3aTUOa+v27VSdhmix0wLbhwE/qIGnmr2s1QKxFIHEhb0H4j/m5v5vT4yg==","shasum":"ee926add38b762ef1b5b104c4fc438d71db57d8b","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.0.0.tgz","fileCount":37,"unpackedSize":311895,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcwaq1CRA9TVsSAnZWagAA+AIQAJ//XkZZVEJu8A/2ZMrP\n2bM4ZmjIxGxSqUNGvrPD7BA0uKXW5WUxFR53qhSEpFhg5sjavy68szrzulKt\ncIdvw73frXvYUhNdUnzuhBlGmH1Gh0XKIyKpORriOonH9NgtS90EOTE03y/d\n810fx0uXezdljMqKTxmtbqzD76LBoWPr08TbVttQ1TRzBIJaQBeVZBLVQWTP\ns3vAr8esxtA4If7Q1beCaq2KwHHnd6KcoP0tlNcaXHZ9TGBRSY6iQR4/CRMI\nBtwm+KUHbvMKLfNDEW7rFWTTqioLZ4vZUPDotx9iTxfTHPihu4+q/q0yExWD\n3v7Ay084wsrwOdbQPKL/CBfRU9A4EpK/+yw3hYn9hohjXrGCSj5fKZv5m6j0\nQ30xfsYM312wKiiD04mjkCHB2BPLKS8L1mcPjDXe4j5gFQjqTad0nLFmhaET\ntzd3n/PYnYo0v1PFSpE/0mLY4zJnHPNjcPqsKudADCgJZy37+judttxzeTJG\nASN5zOb6OHUEqSWGTvW/8uu1kSzs1GjBh4rmw91UeJAlvQPxxc1HrCnEOhmN\nNz0bNsrkWpRhFegpz7PY6WWxIRXt7puLFGGBEMjREeNn9WB7OQ/dhtZ0IoM/\njCEokA8cTQEGORlP66NXmhQr/u07XoNTUEw/3BS5IC0u7C06TON0auhAlbsh\n9faj\r\n=NtF3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.0.0_1556196020934_0.5367809702025748"},"_hasShrinkwrap":false},"6.1.0":{"name":"ml-matrix","version":"6.1.0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","sideEffects":false,"scripts":{"compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.4.4","benchmark":"^2.1.4","csv-parse":"^4.4.3","eslint":"^6.0.0","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.17.3","eslint-plugin-jest":"^22.7.0","jest":"^24.8.0","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^6.0.2","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.16.2"},"dependencies":{"ml-array-rescale":"^1.2.1"},"gitHead":"587df53662ed07e43b7c0a407ff2a71e0d801a98","_id":"ml-matrix@6.1.0","_nodeVersion":"12.4.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-ziDP9Pep2hGpjBF7DoxBwbr9OSAHBpTT30W0jFOrknLcEci/pDinllrb946Hpbq0oc8nDHunSVKS6tufnrQaTA==","shasum":"0d21f0f5812ae9b1fe3c37ca4ef2e7898d09f983","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.1.0.tgz","fileCount":39,"unpackedSize":331870,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdDkOwCRA9TVsSAnZWagAAX2gQAI1cpOxtTMFMSo08yxg8\nhWg+AHccx0RJvPqH9xqLPViKZotqw7DtYxhuwsZl/lalpaLBZcN9MWP+nxVO\nzqDqq4LzGJlLUCSyJFtfvFwq4Rh8Y5/qAfyw5zi9G88a2FTDx5Qoh8mReJGQ\n5XiO4QQfdXdIN3Zd8+QhpaR+EO8FhidrMq63T0ObsqP3yu5RJAzMD36+OIf9\nt5/Tz6KMoRM3n/DbJVcdn9CsFXHLglNyyC34ZMwixhXjH79EYVqw143Xo1w8\nBlvPDkVhHxiyr88bq/8YRXVanxcIH8K+j5c5fFA/rHBOeNJDyMY1AfirZeUy\nIcAK15/i7qk9i46sRAW8xWldonEke20sbMK4vaK3px/2MGPpdN5iyH8BpBQm\nxqiIFtHi08CyfZxjjOczXuPzz8KjR5V1FNbl2RZ/YXNFNMrdWUKjto/ChLXN\nBC5cMiegh/aOxozxMLP2qSfcC/CQ7aGub5npS25LCRGYDZr2qlWjXYSlNOOH\nXCfV3nqBoBHvhLLZ1cbFDkykadWTT1tbPCERAf7kIMwrZlRDJtpRoFW5ltU4\n00XK9Hg6+Ez2DAJ8RkT91kdxNNv7Vn8MAvVYWxsxssLnXkNRErDNrnH1mhPD\nIDzspGQ0945Dk84QUGHKuT6muDHYntcq0UZM4bhbJmgCwGZ4EThwMtJRTkDx\nTJpj\r\n=6sKP\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.1.0_1561215919508_0.7751001538123186"},"_hasShrinkwrap":false},"6.1.1":{"name":"ml-matrix","version":"6.1.1","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","sideEffects":false,"scripts":{"build-docs":"typedoc --out docs --name \"ml-matrix\" --mode file --includeDeclarations --excludeExternals --hideGenerator --excludePrivate --moduleResolution node matrix.d.ts","compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.4.4","benchmark":"^2.1.4","csv-parse":"^4.4.3","eslint":"^6.0.1","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.18.0","eslint-plugin-jest":"^22.7.1","jest":"^24.8.0","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^6.0.2","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.16.2","typedoc":"^0.14.2"},"dependencies":{"ml-array-rescale":"^1.2.1"},"gitHead":"5abf400f6da452f40e931fc1e759e7ebc160a6ac","_id":"ml-matrix@6.1.1","_nodeVersion":"12.5.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-V0XJtC4zGI5eMUzZYBsBYfQXK203LIxZL7WrI9Xy1Pb/1ivIvBnTV+7eeDheviMXPC0lihu89ZgN8h/k3vxHhQ==","shasum":"61ed751b6e4085421c9e13e0aa56ffe540514b3a","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.1.1.tgz","fileCount":39,"unpackedSize":307962,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdForZCRA9TVsSAnZWagAAvdkP/1lIVZM0EGTnnjmeuOlE\ntCFj1zj+pkOPocl6zjWzwOeaapCfYUYFqe+GDP4EBv4A6sA/Jmhpd3iUW7mO\nnUdichgp2GOi/YWEpM7f+jlublrwDXp5CXd1fu7e+Yu12hRNIAWRNB2dazG0\nzl2pIBlCKRT3w67PNhVcVy3nZSOWOx6eLaetw1pqoGVOkDCG4e623oonPiuO\n8TcGSWplnVkDjTTZJe8t/eebpxgZ9IsWD1T6Hj7R9QZmY619GX7I8VR+wyPu\n+sdk+4LRjFxHXP33bAd32hMK9XgdTGzLarObZmnY1mbeo5S3xBztuj9yrzKk\nEjGaGBQ/uwbXg6CnNG4U9qI0xZSopU87E2hX3fo8CxXo8AZGpzYNvaKkvHJc\nOFs5VvE9ZYU8G0AyQM8AUSxowmF246O3DYjcr795a/zho3qw63Zyr7+h46jg\nGt3GrKO8M8Z+W0DPMhrlmdcc3ni4dJyvtDVh6EqGgZfRcX88iwqy+/HY5L0V\ng82sY8BwY2EbxBSf0qn2lDwPPZhH1Ngq1zY/GnCRVblAwW61sx4HCVa9RYF7\nBlqgvusQ6YROdqVUdIWR2qGjxcV/Qxp0peJNJnThM2UVou6HFsNnMBfxAkiC\nq7KYOYtoTIiGX34puFOqRAN8l63v0F7jFSxeMr5oefYoQnXqylWr4MoYmiTP\nGhvu\r\n=n1GU\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.1.1_1561758424337_0.0922146626242244"},"_hasShrinkwrap":false},"6.1.2":{"name":"ml-matrix","version":"6.1.2","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","sideEffects":false,"scripts":{"build-docs":"typedoc --out docs --name \"ml-matrix\" --mode file --includeDeclarations --excludeExternals --hideGenerator --excludePrivate --moduleResolution node matrix.d.ts","compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.4.4","benchmark":"^2.1.4","csv-parse":"^4.4.3","eslint":"^6.0.1","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.18.0","eslint-plugin-jest":"^22.7.1","jest":"^24.8.0","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^6.0.2","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.16.3","typedoc":"^0.14.2"},"dependencies":{"ml-array-rescale":"^1.2.1"},"gitHead":"7125de6ec09d8613c4aa5cb279a04149958900bc","_id":"ml-matrix@6.1.2","_nodeVersion":"12.5.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-JQgKXCaeQQJ22Ssy7Z4iB8mWfzN5sn6Vp7n4d/IsCIQjD13hlLz0SjSIu6xj98CCbY/cxuz8xLfSvAmlghNwmQ==","shasum":"a862febc3e5d05d756ae7a02c03114d644b5ee48","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.1.2.tgz","fileCount":39,"unpackedSize":309067,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdF0AACRA9TVsSAnZWagAAHWoP/0mVyOa6HGlerHK6vXFX\n/zkUgdQFGNCIRSaIlDOd7fRh/XgVoCRTC5mlpqCoUddsHQct6+H73Ave1haA\nRFDpDCkQJailJYvCGkESQNHFBnv4Cq4p0N7WDkK2uBSgfH3CCZbzHjh85SSa\nDvBO6NfuY7g6hbsoAP+kzmReSLTuDKx/iGssUUm5+47Gn/l4Fyaf3yEJa7OS\nseE++9I8gi/6r6H8gJKnXxrOelQS/Q1E+7gn3CQ7tugjCPguB//hICWfz9nd\nAUMfnx2zEBP2M7TWLWkKmVdiLN4zbIy/UW1UzPczi0ut3aCZkUNSPxmmY4qY\n6dw/odUcNTVWGsupiYIz3Q79h+eg43vFw6U38Ubv/+4H0dQBmQGLJUquDkLU\nR0KRzYiN7lP3rhWKnIp1Y6f180COu7F482MZemphtXm+/VffFJWwWVVqMGlN\n0Isgmp/7EvSxnyHgtLNK8SRn+sRt7ELCNuOiHC+TnRNwyUNHNj30LxcbdIzN\nURFjb9D881tXptW7PED98uANGZfSGM2ilP9Jt8ZKVCoJE/X80O5Pzj8fX3Qb\nuGgUYI0/ZJEDdNjrGiAjT3oW8O8EitAHbHHwEtM867ND3FiNt85jRyeurF+V\n78s7885w8JD5/MSQM5ydRi9rbDcaUXWWgnblNHfkO64IvDmUSvHbK5KcNfda\n3t9L\r\n=Pm1Y\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.1.2_1561804799529_0.9082181308775508"},"_hasShrinkwrap":false},"6.2.0":{"name":"ml-matrix","version":"6.2.0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","types":"matrix.d.ts","sideEffects":false,"scripts":{"build-docs":"typedoc --out docs --name \"ml-matrix\" --mode file --includeDeclarations --excludeExternals --hideGenerator --excludePrivate --moduleResolution node matrix.d.ts","compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.4.4","benchmark":"^2.1.4","csv-parse":"^4.4.3","eslint":"^6.0.1","eslint-config-cheminfo":"^1.20.1","eslint-plugin-import":"^2.18.0","eslint-plugin-jest":"^22.7.1","jest":"^24.8.0","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^6.0.2","ml-dataset-iris":"^1.0.0","numeric":"^1.2.6","pretty-hrtime":"^1.0.3","rollup":"^1.16.3","typedoc":"^0.14.2"},"dependencies":{"ml-array-rescale":"^1.2.1"},"gitHead":"a9d9f2a268d33598553bee996ad71322e3f838d3","_id":"ml-matrix@6.2.0","_nodeVersion":"12.6.0","_npmVersion":"6.10.0","dist":{"integrity":"sha512-J+0VWVhQrrp7qb5+pcmLb+vFJVMugb26B6ovbJ7Ku/8zZ+ZwvUbRWHQnpAmVDoFX33PF72WZCymYMwZ9oEdXxw==","shasum":"84c74720f3d2b583d811dfc8f9dd113752362a7f","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.2.0.tgz","fileCount":40,"unpackedSize":315897,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdMx+/CRA9TVsSAnZWagAAaMMP/1K+YIkFHOvbxXFr3qcI\nHBYbQfm2a0Em8t3Hrtw3+GlOumcSbwGMr7zvWelXI0iJ8AwguGPTUd6gvtUH\nDXTzRrQBBWqdbsHN1vidLAZ9b5nqEAy/zux9gJek0K+R6ixoaw8b4kF9pEU4\nGtdAWPx1CfTuey3nIkqezS0eHuwAvt69nyyMTwhREvQwKeVFyFPryPnACXgR\nO6WdWZ7xef+gQ+Cc4uonaXIWgxG99BRSK4Z6Hj1uFVTsuwO8iWeJj9iuK7AF\nAujkx3EPn7LatoPTUGZgP9MscCmi40oi9cPdh9iJxt9b67g548QydP/2VvbX\nA+cLmzi/if/geXG8sxfQ1uIWfzhGps6D5cCM8S7/Wvo+4glBY+YIVbtpdGIM\n+S2vCxqERC6RPBkbONVGIXBBhZI6ELz9yJdn/CEpYrgbA7hTRjYBsNFufvxB\nQYkdyLy5FCYk4UIsgHA08QSfhsPHDqKz8KakTk0OzFbIPuVvV1ubOTq8kkHZ\n3ZhOWSygsQZFL2tc796+k8dE2yipbaXzI7qfUuPRf23HIiqRSUQPXZsdkhZJ\njlyGWZHZe8Tj1Sk7DyjtM5sre0mnwXvEczAcBjs1oz5h8SEsuKXM5AzIW10F\n4ZAhjf1/rDUA+wbUpgVoiLjtM6nhI86ZcaD1/ZoqxE8+H78g9IqeqwdJvdhi\nxEcn\r\n=vCVo\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.2.0_1563631551191_0.6713526750625127"},"_hasShrinkwrap":false},"6.3.0":{"name":"ml-matrix","version":"6.3.0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","jsdelivr":"matrix.umd.js","unpkg":"matrix.umd.js","types":"matrix.d.ts","sideEffects":false,"scripts":{"build-docs":"typedoc --out docs --name \"ml-matrix\" --mode file --includeDeclarations --excludeExternals --hideGenerator --excludePrivate --moduleResolution node matrix.d.ts","compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.5.0","benchmark":"^2.1.4","csv-parse":"^4.4.5","eslint":"^6.1.0","eslint-config-cheminfo":"^2.0.3","eslint-plugin-import":"^2.18.2","eslint-plugin-jest":"^22.15.1","eslint-plugin-prettier":"^3.1.0","jest":"^24.9.0","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^6.0.4","ml-dataset-iris":"^1.1.1","numeric":"^1.2.6","prettier":"^1.18.2","pretty-hrtime":"^1.0.3","rollup":"^1.19.4","rollup-plugin-commonjs":"^10.0.2","rollup-plugin-node-resolve":"^5.2.0","rollup-plugin-terser":"^5.1.1","typedoc":"^0.15.0"},"dependencies":{"ml-array-rescale":"^1.2.1"},"gitHead":"1074d6a84eb2c00cca4f7bb6bc38d4db33b143f5","_id":"ml-matrix@6.3.0","_nodeVersion":"12.8.1","_npmVersion":"6.10.2","dist":{"integrity":"sha512-UVJHTP0p9Gf9oWRgf63JhckjyLpmD+w4tKH+sXEgu2MFf+xVPT5tSI9qbJgT0hJ5puZ7c/btCx+fk8spnJ8w+A==","shasum":"fe318cf33dce3717a0cfa4814f970dc3244102ec","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.3.0.tgz","fileCount":41,"unpackedSize":378459,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdVmLSCRA9TVsSAnZWagAAxOgP/R8UOYoX4NtIVVFWHMGh\nMmW//JnQrJJBkglOVzbL1l+nTSQQJL2piFnAX5Qi+kWAdLx3t0A+iYd/7Ke6\ndD15Mnv9XBxSLunhgfO0ERW1zkRocFwqOeqH1nBgdLfoRPlm966CFO0yUjxU\nL9rnOF807Tc/2q0P9tJIt/oiOIAocW35B1k3wD948uxir1t7Zno6orCYUP3z\nIWkdfj3IQiZTfZnXQMlR6dknMbD4Zvb2togf2AjykhIyxDSlCsAHtB4Eahzx\nDt0OTT9NQqP7KjewwHNaz+8RXK1lTN1kdC0t4OlkSajqCYwTXpFmdtxACSHE\nWYORQ4O0b3IKxO9f43YctOlJZNtA6KtYs4tDAI+BPM4TrFfWOwPzowA9XHkS\nX3DxwyfQEobI7cysnELYm5x+eGBJxJc13MYkpBs3BKN2FYMcgBWn/cxAFzei\nmNVdHrjibOQVipFqmssGHudIMbu0l0u2LuLtnNNWBH25n54LizWOdJ8woPZS\nBvFevwLxKrc6JxbMBCNR40SScFyw6QsyLOczc4ovsZnjpsyS4+8Rp3tHWgFC\nBPjkojUXcnouqoZ9WyH8wfBns2HoKLLlVrYYJIpjZmfohhPWP3aTpyojA+7W\n/ac/0TvDwoxF0ugcWgx3W8sRv7hRcTWOntUoAvlQWjgFZIY4vt/Khsi4HOqQ\nzYh4\r\n=RFon\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.3.0_1565942481231_0.11690475017509283"},"_hasShrinkwrap":false},"6.4.0":{"name":"ml-matrix","version":"6.4.0","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","jsdelivr":"matrix.umd.js","unpkg":"matrix.umd.js","types":"matrix.d.ts","sideEffects":false,"scripts":{"build-docs":"typedoc --out docs --name \"ml-matrix\" --mode file --includeDeclarations --excludeExternals --hideGenerator --excludePrivate --moduleResolution node matrix.d.ts","compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.5.0","benchmark":"^2.1.4","csv-parse":"^4.4.5","eslint":"^6.1.0","eslint-config-cheminfo":"^2.0.3","eslint-plugin-import":"^2.18.2","eslint-plugin-jest":"^22.15.1","eslint-plugin-prettier":"^3.1.0","jest":"^24.9.0","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^6.0.4","ml-dataset-iris":"^1.1.1","numeric":"^1.2.6","prettier":"^1.18.2","pretty-hrtime":"^1.0.3","rollup":"^1.19.4","rollup-plugin-commonjs":"^10.0.2","rollup-plugin-node-resolve":"^5.2.0","rollup-plugin-terser":"^5.1.1","typedoc":"^0.15.0"},"dependencies":{"ml-array-rescale":"^1.2.1"},"gitHead":"51056cb95f0336b4e0e6ff7cd5f9104bc78acd5f","_id":"ml-matrix@6.4.0","_nodeVersion":"12.8.1","_npmVersion":"6.10.3","dist":{"integrity":"sha512-VOHAwNjsx1w77BWuv6cHwpfEARzD5oIuJIPDgHA1/U/S4Zql/cp29fr/Ft3V1OOIgK8HZtFQnn5zQnDetFXXTg==","shasum":"b126aec3d7ad184106b3bd12054edab527ad8c8a","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.4.0.tgz","fileCount":41,"unpackedSize":379315,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdVn0tCRA9TVsSAnZWagAAfDgP/15m89f7XKuJ+vaT3wh8\n7ZZ8fdiD2yIUFDkExAekmPaQjibutR/LQNLVvanBHrwOI/yqXqyjzh3QUh7e\nOOiO3/gHUp1iT2yk0XzRfF2MVGfP73CV0ojuWjBB0io9gG7ywiDpyjjV0Wn2\n5sgIwGZ3GjEQ20XTz7H9BorQWqmSqcvXZMUbWpkHMP0pyJkPjCy9YLvfz3sw\nZfyFfsczUA2qodEHx7vS5IbfWVyTlqkI7YRuJgyECUMGrjyGNMICv+GpIRCI\niinrTtMZefQmjwU5M0tEMD0qgXkl3aEz40BsGEG7ShdZAqwyRP9yYkXem67a\nnWUorS9YApzrA3Gipj6Zg++Z0PoeSAHI4WdISqXjE/eNk9ZWezuSlMnP7RhY\nwQuSllJzqdjcuz9K5ioPE9HuzdwM5PJDhEbP7LyHVWt/JZqH0sTV+i5/6hpF\n0KitE6ESRl5RJiZPRGdlk+YxB0WmYk22ai6fYh7ZaobVjes7V+6YnnXIsAxO\n7gkpX1BulioKdjtFDdCxoA6ziGWnYsAcTrQvgEmSAFsqbovXdkgzFqRtF3Rf\nNpKlehZi6medbNd8OH4Wt47xo3/TQ0KAidBN8+pzXOzY5V6UImxboSPklssp\nY8RpdfgqOz5+v1d5vZw8XTNAcvE1sBnO6yD6fV38I5WF/0m2FBavtHkw8wn4\ndmET\r\n=bbun\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.4.0_1565949228560_0.10015948121537455"},"_hasShrinkwrap":false},"6.4.1":{"name":"ml-matrix","version":"6.4.1","description":"Matrix manipulation and computation library","main":"matrix.js","module":"src/index.js","jsdelivr":"matrix.umd.js","unpkg":"matrix.umd.js","types":"matrix.d.ts","sideEffects":false,"scripts":{"build-docs":"typedoc --out docs --name \"ml-matrix\" --mode file --includeDeclarations --excludeExternals --hideGenerator --excludePrivate --moduleResolution node matrix.d.ts","compile":"rollup -c","eslint":"eslint benchmark src testUtils.js","eslint-fix":"npm run eslint -- --fix","prepublishOnly":"npm run compile","test":"npm run test-coverage && npm run eslint","test-only":"jest","test-coverage":"jest --coverage"},"jest":{"testEnvironment":"node"},"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/matrix/issues"},"homepage":"https://github.com/mljs/matrix","devDependencies":{"@babel/plugin-transform-modules-commonjs":"^7.6.0","benchmark":"^2.1.4","csv-parse":"^4.4.7","eslint":"^6.5.0","eslint-config-cheminfo":"^2.0.3","eslint-plugin-import":"^2.18.2","eslint-plugin-jest":"^22.17.0","eslint-plugin-prettier":"^3.1.1","jest":"^24.9.0","jest-matcher-deep-close-to":"^1.3.0","mathjs":"^6.2.2","ml-dataset-iris":"^1.1.1","numeric":"^1.2.6","prettier":"^1.18.2","pretty-hrtime":"^1.0.3","rollup":"^1.22.0","rollup-plugin-commonjs":"^10.1.0","rollup-plugin-node-resolve":"^5.2.0","rollup-plugin-terser":"^5.1.2","typedoc":"^0.15.0"},"dependencies":{"ml-array-rescale":"^1.2.2"},"gitHead":"ab356186b23d14970cbe200fba275c0ca763c357","_id":"ml-matrix@6.4.1","_nodeVersion":"12.11.0","_npmVersion":"6.11.3","dist":{"integrity":"sha512-YZ6lLRhk80B2zJSC0bKocnHbpxCdXFKWb6A7QTDztf5ob2qL1g/5AYNAuDtCQgbZtW1wwFZbjXbDgk/UdiO3Uw==","shasum":"388082df1584b34ffe14e26115dbc5f0f3312ff1","tarball":"https://registry.npmjs.org/ml-matrix/-/ml-matrix-6.4.1.tgz","fileCount":41,"unpackedSize":379555,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdkfwsCRA9TVsSAnZWagAAc4YQAIBcpE0FzVO8Eefr9aN/\ntYo3FhVGzAPTs8Gw5FKKfaPTr6V6KFWMHI80oHUpcDA4OJdvYtaC9BceerSq\nSrPpZitupDTpFHfojwoY8OklNJHUouxAJL9Syxk+AQniPLNEFYv8iLBsxEk8\nVut2Mt/9rvErswoeeFMjn5ks7fZrJByczN8AvSEYNjRlEkQIcmn9CizUZnFH\nG62BNfY0BKBGbeGvdyy1xel4rzQ3j8muIowvxQk+j2VSIK5Piz3jIXP8qq4z\nj2codM/rsRmY+rnKo4Yx7v6W5m4Q7m95xO01CSNnAr0qt2msxjExHCj5gzno\ng75aUJJZMTWzA23cz/j4rL8NXgknNfE/XHv2/5LAZjcbPX/WwZyHaSZIURtv\nKgrBP1HCjG33yjM3MuTgMLJqhSxWGf+FFDjSLpSEcRwtuFUOD1LeXraHt2Tc\nvZlfmx0cdCjYmh1fb8X24U266+1E0we9dU2JTOYGfux5YOb0mz8u7RAPcRJ6\nNinrpxgbwqO1Uj1rMSSx2AWUEdC4inarFMg072nI8iWBRyld88wFrO04Qy1d\nvSGIqGVWaS7PBJ6JNnH2rCTgtHkBj98nHiVn6V0xhfeXMoGht6zKFI/o8fLn\n8TNto6htbCAlgi9FGB8Qkj2JBTPvSDRc3cAt0Ms48wBHE7eHWUTaUijBOjnE\nSJLd\r\n=U4DQ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"_npmUser":{"name":"targos","email":"targos+npm@protonmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ml-matrix_6.4.1_1569848363795_0.8259025054347047"},"_hasShrinkwrap":false}},"readme":"# ml-matrix\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![npm download][download-image]][download-url]\n\nMatrix manipulation and computation library.\n\n## Installation\n\n`$ npm install ml-matrix`\n\n## Usage\n\n### As an ES module\n\n```js\nimport { Matrix } from 'ml-matrix';\n\nconst matrix = Matrix.ones(5, 5);\n```\n\n### As a CommonJS module\n\n```js\nconst { Matrix } = require('ml-matrix');\n\nconst matrix = Matrix.ones(5, 5);\n```\n\n## [API Documentation](https://mljs.github.io/matrix/globals.html)\n\n## Examples\n\n### Standard operations\n\n```js\nconst { Matrix } = require('ml-matrix');\n\nvar A = new Matrix([[1, 1], [2, 2]]);\nvar B = new Matrix([[3, 3], [1, 1]]);\nvar C = new Matrix([[3, 3], [1, 1]]);\n\n// ============================\n// Operations with the matrix :\n// =============================\n\n// operations :\nconst addition = Matrix.add(A, B); // addition = Matrix [[4, 4], [3, 3], rows: 2, columns: 2]\nconst substraction = Matrix.sub(A, B); // substraction = Matrix [[-2, -2], [1, 1], rows: 2, columns: 2]\nconst multiplication = A.mmul(B); // multiplication = Matrix [[4, 4], [8, 8], rows: 2, columns: 2]\nconst mulByNumber = Matrix.mul(A, 10); // mulByNumber = Matrix [[10, 10], [20, 20], rows: 2, columns: 2]\nconst divByNumber = Matrix.div(A, 10); // divByNumber = Matrix [[0.1, 0.1], [0.2, 0.2], rows: 2, columns: 2]\nconst modulo = Matrix.mod(B, 2); // modulo = Matrix [[ 1, 1], [1, 1], rows: 2, columns: 2]\nconst maxMatrix = Matrix.max(A, B); // max = Matrix [[3, 3], [2, 2], rows: 2, columns: 2]\nconst minMatrix = Matrix.min(A, B); // max = Matrix [[1, 1], [1, 1], rows: 2, columns: 2]\n\n// Inplace operations : (consider that Cinit = C before all the operations below)\nC.add(A); // => C = Cinit + A\nC.sub(A); // => C = Cinit\nC.mul(10); // => C = 10 * Cinit\nC.div(10); // => C = Cinit\nC.mod(2); // => C = Cinit % 2\n\n// Standard Math operations : (abs, cos, round, etc.)\nvar A = new Matrix([[1, 1], [-1, -1]]);\nvar expon = Matrix.exp(A); // expon = Matrix [[Math.exp(1), Math.exp(1)], [Math.exp(-1), Math.exp(-1)], rows: 2, columns: 2].\nvar cosinus = Matrix.cos(A); // cosinus = Matrix [[Math.cos(1), Math.cos(1)], [Math.cos(-1), Math.cos(-1)], rows: 2, columns: 2].\nvar absolute = Matrix.abs(A); // expon = absolute [[1, 1], [1, 1], rows: 2, columns: 2].\n// you can use 'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil', 'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p', 'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n// Note : you can do it inplace too as A.abs()\n\n// ============================\n// Manipulation of the matrix :\n// =============================\n\nvar numberRows = A.rows; // A has 2 rows\nvar numberCols = A.columns; // A has 2 columns\nvar firstValue = A.get(0, 0); // get(rows, columns)\nvar numberElements = A.size; // 2 * 2 = 4 elements\nvar isRow = A.isRowVector(); // false because A has more that 1 row\nvar isColumn = A.isColumnVector(); // false because A has more that 1 column\nvar isSquare = A.isSquare(); // true, because A is 2 * 2 matrix\nvar isSym = A.isSymmetric(); // false, because A is not symmetric\n// remember : A = Matrix [[1, 1], [-1, -1], rows: 2, columns: 2]\nA.set(1, 0, 10); // A = Matrix [[1, 1], [10, -1], rows: 2, columns: 2]. We have change the second row and the first column\nvar diag = A.diag(); // diag = [1, -1], i.e values in the diagonal.\nvar m = A.mean(); // m = 2.75\nvar product = A.prod(); // product = -10, i.e product of all values of the matrix\nvar norm = A.norm(); // norm = 10.14889156509222, i.e Frobenius norm of the matrix\nvar transpose = A.transpose(); // tranpose = Matrix [[1, 10], [1, -1], rows: 2, columns: 2]\n\n// ============================\n// Instanciation of matrix :\n// =============================\n\nvar z = Matrix.zeros(3, 2); // z = Matrix [[0, 0], [0, 0], [0, 0], rows: 3, columns: 2]\nvar z = Matrix.ones(2, 3); // z = Matrix [[1, 1, 1], [1, 1, 1], rows: 2, columns: 3]\nvar z = Matrix.eye(3, 4); // Matrix [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], rows: 3, columns: 4]. there are 1 only in the diagonal\n```\n\n### Maths\n\n```js\nconst {\n  Matrix,\n  inverse,\n  solve,\n  linearDependencies,\n  QrDecomposition,\n  LuDecomposition,\n  CholeskyDecomposition,\n} = require('ml-matrix');\n\n//===========================\n// inverse and pseudo-inverse\n//===========================\n\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\nvar inverseA = inverse(A);\nvar B = A.mmul(inverseA); // B = A * inverse(A), so B ~= Identity\n\n// if A is singular, you can use SVD :\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]); // A is singular, so the standard computation of inverse won't work (you can test if you don't trust me^^)\nvar inverseA = inverse(A, (useSVD = true)); // inverseA is only an approximation of the inverse, by using the Singular Values Decomposition\nvar B = A.mmul(inverseA); // B = A * inverse(A), but inverse(A) is only an approximation, so B doesn't really be identity.\n\n// if you want the pseudo-inverse of a matrix :\nvar A = new Matrix([[1, 2], [3, 4], [5, 6]]);\nvar pseudoInverseA = A.pseudoInverse();\nvar B = A.mmul(pseudoInverseA).mmul(A); // with pseudo inverse, A*pseudo-inverse(A)*A ~= A. It's the case here\n\n//=============\n// Least square\n//=============\n\n// Least square is the following problem : We search x, such as A.x = b (A, x and b are matrix or vectors).\n// Below, how to solve least square with our function\n\n// If A is non singular :\nvar A = new Matrix([[3, 1], [4.25, 1], [5.5, 1], [8, 1]]);\nvar b = Matrix.columnVector([4.5, 4.25, 5.5, 5.5]);\nvar x = solve(A, b);\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\n\n// If A is non singular :\nvar A = new Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\nvar b = Matrix.columnVector([8, 20, 32]);\nvar x = solve(A, b, (useSVD = true)); // there are many solutions. x can be [1, 2, 1].transpose(), or [1.33, 1.33, 1.33].transpose(), etc.\nvar error = Matrix.sub(b, A.mmul(x)); // The error enables to evaluate the solution x found.\n\n//===============\n// Decompositions\n//===============\n\n// QR Decomposition\n\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\nvar QR = new QrDecomposition(A);\nvar Q = QR.orthogonalMatrix;\nvar R = QR.upperTriangularMatrix;\n// So you have the QR decomposition. If you multiply Q by R, you'll see that A = Q.R, with Q orthogonal and R upper triangular\n\n// LU Decomposition\n\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\nvar LU = new LuDecomposition(A);\nvar L = LU.lowerTriangularMatrix;\nvar U = LU.upperTriangularMatrix;\nvar P = LU.pivotPermutationVector;\n// So you have the LU decomposition. P includes the permutation of the matrix. Here P = [1, 2, 0], i.e the first row of LU is the second row of A, the second row of LU is the third row of A and the third row of LU is the first row of A.\n\n// Cholesky Decomposition\n\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\nvar cholesky = new CholeskyDecomposition(A);\nvar L = cholesky.lowerTriangularMatrix;\n\n// Eigenvalues & eigenvectors\n\nvar A = new Matrix([[2, 3, 5], [4, 1, 6], [1, 3, 0]]);\nvar e = new EigenvalueDecomposition(A);\nvar real = e.realEigenvalues;\nvar imaginary = e.imaginaryEigenvalues;\nvar vectors = e.eigenvectorMatrix;\n\n//=======\n// Others\n//=======\n\n// Linear dependencies\nvar A = new Matrix([\n  [2, 0, 0, 1],\n  [0, 1, 6, 0],\n  [0, 3, 0, 1],\n  [0, 0, 1, 0],\n  [0, 1, 2, 0],\n]);\nvar dependencies = linearDependencies(A); // dependencies is a matrix with the dependencies of the rows. When we look row by row, we see that the first row is [0, 0, 0, 0, 0], so it means that the first row is independent, and the second row is [ 0, 0, 0, 4, 1 ], i.e the second row = 4 times the 4th row + the 5th row.\n```\n\n## License\n\n[MIT](./LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/ml-matrix.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/ml-matrix\n[travis-image]: https://img.shields.io/travis/mljs/matrix/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/mljs/matrix\n[codecov-image]: https://img.shields.io/codecov/c/github/mljs/matrix.svg?style=flat-square\n[codecov-url]: https://codecov.io/github/mljs/matrix\n[download-image]: https://img.shields.io/npm/dm/ml-matrix.svg?style=flat-square\n[download-url]: https://npmjs.org/package/ml-matrix\n","maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"time":{"modified":"2019-09-30T12:59:28.353Z","created":"2014-10-24T14:20:05.417Z","0.0.1":"2014-10-24T14:20:05.417Z","0.0.2":"2015-03-16T12:47:45.307Z","0.0.3":"2015-04-24T06:50:20.882Z","0.0.4":"2015-06-11T12:58:43.923Z","0.1.0":"2015-06-11T13:39:59.410Z","1.0.0-0":"2015-09-09T09:17:36.389Z","1.0.0":"2015-09-10T11:33:27.014Z","1.0.1":"2015-09-11T07:10:15.592Z","1.0.2":"2015-10-05T09:21:21.843Z","1.0.3":"2015-11-19T11:56:26.544Z","1.0.4":"2015-11-21T15:10:53.356Z","1.1.0":"2016-05-13T15:01:05.532Z","1.1.1":"2016-05-18T09:03:53.983Z","1.1.2":"2016-05-18T09:18:05.045Z","1.1.3":"2016-05-27T09:23:36.380Z","1.1.4":"2016-05-27T09:56:06.667Z","1.1.5":"2016-05-31T12:50:41.746Z","1.2.0":"2016-07-07T13:53:58.904Z","1.2.1":"2016-07-07T14:01:08.914Z","1.3.0":"2016-07-25T13:18:36.130Z","1.4.0":"2016-08-03T15:17:53.667Z","2.0.0":"2016-08-04T13:44:45.474Z","2.1.0":"2016-10-07T09:11:29.484Z","2.2.0":"2016-12-14T16:31:20.339Z","2.3.0":"2017-02-28T15:51:08.530Z","2.4.0-0":"2017-04-25T11:55:33.816Z","2.4.0-1":"2017-04-25T12:11:44.020Z","3.0.0-0":"2017-04-25T12:24:50.958Z","3.0.0":"2017-04-25T14:15:06.150Z","4.0.0":"2017-07-19T06:47:04.330Z","5.0.0":"2017-07-21T11:56:37.258Z","5.0.1":"2017-07-28T14:59:22.885Z","5.1.0":"2018-05-04T13:34:24.918Z","5.1.1":"2018-05-11T21:24:59.417Z","5.2.0":"2018-09-25T15:09:43.543Z","5.2.1":"2019-01-07T19:02:28.501Z","5.3.0":"2019-03-23T15:36:15.114Z","6.0.0-0":"2019-04-18T08:21:44.978Z","6.0.0-1":"2019-04-18T09:14:54.573Z","6.0.0-2":"2019-04-18T09:42:35.178Z","6.0.0-3":"2019-04-18T11:29:20.187Z","6.0.0-4":"2019-04-18T11:54:21.519Z","6.0.0-5":"2019-04-18T21:33:25.546Z","6.0.0-6":"2019-04-25T11:07:11.509Z","6.0.0":"2019-04-25T12:40:21.054Z","6.1.0":"2019-06-22T15:05:19.661Z","6.1.1":"2019-06-28T21:47:04.556Z","6.1.2":"2019-06-29T10:39:59.772Z","6.2.0":"2019-07-20T14:05:51.368Z","6.3.0":"2019-08-16T08:01:21.598Z","6.4.0":"2019-08-16T09:53:48.671Z","6.4.1":"2019-09-30T12:59:24.013Z"},"homepage":"https://github.com/mljs/matrix","keywords":["matrix","decomposition","SVD","singular","value","EVD","eigenvalue","LU","Qr","Cholesky","data","mining","datamining","machine","learning"],"repository":{"type":"git","url":"git+https://github.com/mljs/matrix.git"},"author":{"name":"Michaël Zasso"},"bugs":{"url":"https://github.com/mljs/matrix/issues"},"license":"MIT","readmeFilename":"README.md","users":{"maasencioh":true},"_etag":"W/\"f00a7fae75f77d566c18d3f298c1953b\"","_lastModified":"Mon, 30 Sep 2019 12:59:33 GMT"}