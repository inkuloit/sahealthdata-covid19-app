{"_id":"0x","_rev":"146-3a01c90dfd2ea66644f579c40aec5131","name":"0x","description":"🔥 single-command flamegraph profiling 🔥","dist-tags":{"latest":"4.9.1","rc1":"4.0.0-rc1","rc2":"4.0.0-rc2","rc4":"4.0.0-rc4","rc3":"4.0.0-rc3","rc5":"4.0.0-rc5","v3-latest":"3.3.1","v2-latest":"2.5.4"},"versions":{"1.0.0":{"name":"0x","version":"1.0.0","description":"Map a v8 symbol found in output from `--trace-deopt`, `--trace-inlining`, and when dtracing/perfing `--perf-basic-prof`.","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":{"name":"David Mark Clements"},"license":"MIT","dependencies":{"resolve-jit-symbols":"^0.5.0"},"_id":"0x@1.0.0","_shasum":"6a1138ac0b348e6a22d30fbaabd5ba0b9dc17e08","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.6.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"6a1138ac0b348e6a22d30fbaabd5ba0b9dc17e08","tarball":"https://registry.npmjs.org/0x/-/0x-1.0.0.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/0x-1.0.0.tgz_1455466214814_0.5757907452061772"},"directories":{}},"2.0.0":{"name":"0x","version":"2.0.0","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"gitHead":"a4b40898210384be62da7989f8eb53976052a2b0","_id":"0x@2.0.0","_shasum":"198ab8d225c8827b21429f67bf351fecf0cf10fd","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.7.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"198ab8d225c8827b21429f67bf351fecf0cf10fd","tarball":"https://registry.npmjs.org/0x/-/0x-2.0.0.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/0x-2.0.0.tgz_1456942735377_0.2576697524636984"},"directories":{}},"2.0.1":{"name":"0x","version":"2.0.1","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"gitHead":"b93d6eff7471e2720c4c9e080c3d8ee1c6b720b8","_id":"0x@2.0.1","_shasum":"60c4f5fea0edbe043da290768fd862a5e2c6394e","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.7.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"60c4f5fea0edbe043da290768fd862a5e2c6394e","tarball":"https://registry.npmjs.org/0x/-/0x-2.0.1.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.0.1.tgz_1456969761011_0.7632090323604643"},"directories":{}},"2.0.2":{"name":"0x","version":"2.0.2","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"gitHead":"0c087385555c78f729bdceac774622e3d49ef0de","_id":"0x@2.0.2","_shasum":"38ab34cf7a915cb3c66456a6cc51e8211ffd4e05","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.7.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"38ab34cf7a915cb3c66456a6cc51e8211ffd4e05","tarball":"https://registry.npmjs.org/0x/-/0x-2.0.2.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/0x-2.0.2.tgz_1456970034514_0.5968842091970146"},"directories":{}},"2.0.3":{"name":"0x","version":"2.0.3","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"gitHead":"b28dbfbd3e9117b5bd81e7b713ed037bc019e37d","_id":"0x@2.0.3","_shasum":"31207629d1cb9a26984c6b5d6a2da526bb2e98c2","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.7.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"31207629d1cb9a26984c6b5d6a2da526bb2e98c2","tarball":"https://registry.npmjs.org/0x/-/0x-2.0.3.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.0.3.tgz_1456970275738_0.21269095595926046"},"directories":{}},"2.0.4":{"name":"0x","version":"2.0.4","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"gitHead":"73920d865e5b44c90e5f50d31e371b2046db8b1f","_id":"0x@2.0.4","_shasum":"1729e7ae720b196b495eb73c31b3fe2fe97214a0","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.7.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"1729e7ae720b196b495eb73c31b3fe2fe97214a0","tarball":"https://registry.npmjs.org/0x/-/0x-2.0.4.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/0x-2.0.4.tgz_1456975937475_0.3556211977265775"},"directories":{}},"2.0.5":{"name":"0x","version":"2.0.5","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"gitHead":"745fdfde13cfb73e335635dea242e43044e56324","_id":"0x@2.0.5","_shasum":"a83e76a3285d743e971aef17811c4c38f6a43b48","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.7.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"a83e76a3285d743e971aef17811c4c38f6a43b48","tarball":"https://registry.npmjs.org/0x/-/0x-2.0.5.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/0x-2.0.5.tgz_1456977108572_0.824533516773954"},"directories":{}},"2.0.6":{"name":"0x","version":"2.0.6","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"gitHead":"9e6841c1f45c1b38e0130bca52023b8db4f7ed04","_id":"0x@2.0.6","_shasum":"59b45ab1cc075b49c4ad3965fdd02cc8d0e83e50","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.7.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"59b45ab1cc075b49c4ad3965fdd02cc8d0e83e50","tarball":"https://registry.npmjs.org/0x/-/0x-2.0.6.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/0x-2.0.6.tgz_1457632638449_0.1671937801875174"},"directories":{}},"2.1.0":{"name":"0x","version":"2.1.0","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"dc4a72bc3afb65f2c00c0b0774f5d682078d8802","_id":"0x@2.1.0","_shasum":"4c4fa28a34caf884241a5642a6f8e17e413b2299","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.7.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"4c4fa28a34caf884241a5642a6f8e17e413b2299","tarball":"https://registry.npmjs.org/0x/-/0x-2.1.0.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.1.0.tgz_1458049186761_0.8182096278760582"},"directories":{}},"2.2.0":{"name":"0x","version":"2.2.0","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"8f58842baf5215d863d8db04282c64535efdae11","_id":"0x@2.2.0","_shasum":"32031582823e54b6c53e1fdb4a3fb222130257cb","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.9.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"32031582823e54b6c53e1fdb4a3fb222130257cb","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.0.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.2.0.tgz_1458495549670_0.6809503978583962"},"directories":{}},"2.2.1":{"name":"0x","version":"2.2.1","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"06e9fb93f1dead0077e44742283460b12d12d2be","_id":"0x@2.2.1","_shasum":"0c878621d0d4a8697d2e8ddc103a1aca7a88dd28","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.9.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"0c878621d0d4a8697d2e8ddc103a1aca7a88dd28","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.1.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/0x-2.2.1.tgz_1458648019570_0.18612669804133475"},"directories":{}},"2.2.2":{"name":"0x","version":"2.2.2","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"c7698422993cdf9d710cf5af00943001eaee2b93","_id":"0x@2.2.2","_shasum":"f8b4994e8333292bb2799d8e2cdc5d57439bed77","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.9.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"f8b4994e8333292bb2799d8e2cdc5d57439bed77","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.2.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/0x-2.2.2.tgz_1458752151703_0.05152180208824575"},"directories":{}},"2.2.3":{"name":"0x","version":"2.2.3","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"59ed39d1493f5aba777c71f049c24e9f61e10792","_id":"0x@2.2.3","_shasum":"e6ee1961173a0a5ef099d4a32283033ac36beba2","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.9.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"e6ee1961173a0a5ef099d4a32283033ac36beba2","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.3.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/0x-2.2.3.tgz_1458757065684_0.9596532299183309"},"directories":{}},"2.2.4":{"name":"0x","version":"2.2.4","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"585196df2f38c7d658e4e0226ebdf1f053c43b92","_id":"0x@2.2.4","_shasum":"a5c41789cba3e9d1e84f4027a1f74e3f49410fe6","_from":".","_npmVersion":"2.14.17","_nodeVersion":"5.9.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"a5c41789cba3e9d1e84f4027a1f74e3f49410fe6","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.4.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.2.4.tgz_1458773679701_0.1450842961203307"},"directories":{}},"2.2.5":{"name":"0x","version":"2.2.5","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"be1d4e84b163320a92f5e427702defdbaa513b3f","_id":"0x@2.2.5","_shasum":"515536c9be583437332eb6343e930b79a055ca7c","_from":".","_npmVersion":"2.14.17","_nodeVersion":"4.2.3","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"515536c9be583437332eb6343e930b79a055ca7c","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.5.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/0x-2.2.5.tgz_1458837998442_0.045576517935842276"},"directories":{}},"2.2.6":{"name":"0x","version":"2.2.6","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","browserify-string":"^1.1.1","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"7074a166b225c0a3608202660496bb7ed3a4b95a","_id":"0x@2.2.6","_shasum":"2cd543cd4187ac63c132cf23a6d54a59c912d81d","_from":".","_npmVersion":"2.14.17","_nodeVersion":"4.2.3","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"2cd543cd4187ac63c132cf23a6d54a59c912d81d","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.6.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.2.6.tgz_1458839335556_0.5911253201775253"},"directories":{}},"2.2.8":{"name":"0x","version":"2.2.8","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","clean-browserify-string":"^1.0.0","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"d60b5844b89adcd92ecb0b651fb555f1bde17436","_id":"0x@2.2.8","_shasum":"02c8f3f31798f7172a6cfb5483d7b8ff7d9f6079","_from":".","_npmVersion":"2.14.17","_nodeVersion":"6.3.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"02c8f3f31798f7172a6cfb5483d7b8ff7d9f6079","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.8.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.2.8.tgz_1471041396882_0.5618964843451977"},"directories":{}},"2.2.9":{"name":"0x","version":"2.2.9","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","clean-browserify-string":"^1.0.0","clockface":"^1.1.1","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"d8b589847ff92ca008785fceb89f95dee71b30b5","_id":"0x@2.2.9","_shasum":"6ce5be6639f1abd63fb58950acc6dafb81ee4a55","_from":".","_npmVersion":"2.14.17","_nodeVersion":"6.3.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"6ce5be6639f1abd63fb58950acc6dafb81ee4a55","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.9.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.2.9.tgz_1474123392670_0.010185891296714544"},"directories":{}},"2.2.10":{"name":"0x","version":"2.2.10","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"7eb960a62fef531eb6877d902168acafc0bcfd5d","_id":"0x@2.2.10","_shasum":"0e0642255ca1e0590e182826af3ed47bf5478efa","_from":".","_npmVersion":"2.14.17","_nodeVersion":"6.3.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"0e0642255ca1e0590e182826af3ed47bf5478efa","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.10.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/0x-2.2.10.tgz_1474305125487_0.24173511401750147"},"directories":{}},"2.2.11":{"name":"0x","version":"2.2.11","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"6983efec476a5c8fbb940bdf1e0b9a8c6d43333e","_id":"0x@2.2.11","_shasum":"54a4af203fcb87bd2e4dc3dcfea3fc76ed44ac3b","_from":".","_npmVersion":"2.14.17","_nodeVersion":"6.3.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"54a4af203fcb87bd2e4dc3dcfea3fc76ed44ac3b","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.11.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.2.11.tgz_1474306646364_0.8401771688368171"},"directories":{}},"2.2.12":{"name":"0x","version":"2.2.12","description":"## Visualize Stack Traces","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"a774896aa946430b660908e383a986b5f1d29b37","_id":"0x@2.2.12","_shasum":"136ef8b493e3ba9fe901f2f8ae9feb2b552a3931","_from":".","_npmVersion":"2.14.17","_nodeVersion":"6.7.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"136ef8b493e3ba9fe901f2f8ae9feb2b552a3931","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.12.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.2.12.tgz_1476795805814_0.027520473580807447"},"directories":{}},"2.2.13":{"name":"0x","version":"2.2.13","description":"Discover the bottlenecks and hot paths in your code, with flamegraphs.","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"1381bd19f0d9792ee52d6e06e010cfd4a8eff087","_id":"0x@2.2.13","_shasum":"b056a0631e2de2649242ff1f67b9881e293a8ba3","_from":".","_npmVersion":"2.14.17","_nodeVersion":"6.9.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"b056a0631e2de2649242ff1f67b9881e293a8ba3","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.13.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.2.13.tgz_1477839644483_0.6875845624599606"},"directories":{}},"2.2.14":{"name":"0x","version":"2.2.14","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"8a29e68b04cae5fa3275fbab5dae9f69fdc2b7e5","_id":"0x@2.2.14","_shasum":"648fee2507b97c98687e3a5b41166c55eff00f19","_from":".","_npmVersion":"2.14.17","_nodeVersion":"6.9.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"648fee2507b97c98687e3a5b41166c55eff00f19","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.14.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/0x-2.2.14.tgz_1478175295101_0.9811165616847575"},"directories":{}},"2.2.15":{"name":"0x","version":"2.2.15","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"487040955843f345282e2814f99c3f043c0426af","_id":"0x@2.2.15","_shasum":"c26570040ded0ca7cab5a5fb17bb4823d9a5640e","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"c26570040ded0ca7cab5a5fb17bb4823d9a5640e","tarball":"https://registry.npmjs.org/0x/-/0x-2.2.15.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/0x-2.2.15.tgz_1480701957105_0.3430823578964919"},"directories":{}},"2.3.0":{"name":"0x","version":"2.3.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"b80e054f59ba8e36db7d3774c1bf00be101276eb","_id":"0x@2.3.0","_shasum":"9f1e2e6df5dd67c98b8a752cdd16358e754e01f8","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"shasum":"9f1e2e6df5dd67c98b8a752cdd16358e754e01f8","tarball":"https://registry.npmjs.org/0x/-/0x-2.3.0.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.3.0.tgz_1481127520950_0.9130567198153585"},"directories":{}},"2.3.1":{"name":"0x","version":"2.3.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"f0a90848c0cc60d7115104697103ac5170859739","_id":"0x@2.3.1","_shasum":"a52b0d23d703fbc26fa07d513f5a2d0d72017c39","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.9.3","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"a52b0d23d703fbc26fa07d513f5a2d0d72017c39","tarball":"https://registry.npmjs.org/0x/-/0x-2.3.1.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/0x-2.3.1.tgz_1485118236945_0.24367630947381258"},"directories":{}},"2.4.0":{"name":"0x","version":"2.4.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"ff51b512de3664f25661ef5db54c9eadcba7c41e","_id":"0x@2.4.0","_shasum":"671a9762b7163297e818b3c2378f174275785066","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.9.3","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"671a9762b7163297e818b3c2378f174275785066","tarball":"https://registry.npmjs.org/0x/-/0x-2.4.0.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.4.0.tgz_1485124852891_0.4024048401042819"},"directories":{}},"2.4.1":{"name":"0x","version":"2.4.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"bb545fa3f0594de4d30b0aa1224b6220cade153b","_id":"0x@2.4.1","_shasum":"1837d0d050f7bad7980bcf187bec142eac853105","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.9.4","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"shasum":"1837d0d050f7bad7980bcf187bec142eac853105","tarball":"https://registry.npmjs.org/0x/-/0x-2.4.1.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/0x-2.4.1.tgz_1489746238625_0.9892406680155545"},"directories":{}},"2.4.2":{"name":"0x","version":"2.4.2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"bd13b456771538a8c240c0e4ee10dd8f18095bd6","_id":"0x@2.4.2","_shasum":"79cd30b8df2863c4009ac4d97d3b280c0602e82a","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.9.4","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"shasum":"79cd30b8df2863c4009ac4d97d3b280c0602e82a","tarball":"https://registry.npmjs.org/0x/-/0x-2.4.2.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/0x-2.4.2.tgz_1491203370127_0.35669002356007695"},"directories":{}},"2.4.3":{"name":"0x","version":"2.4.3","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"0ff5bd399e32bbd15277bb7de0d35d20387e5daa","_id":"0x@2.4.3","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-e4Co9rc2tGgBKemlyiNuh9pPZL0dwPniCay+QBW4zt4KqO3s7WAFKN+HAhq4nhH/CNsem1oE0TyxZNDWp+ygdA==","shasum":"494dc6a8ac60fe152208eadc687ab8aa11f39db0","tarball":"https://registry.npmjs.org/0x/-/0x-2.4.3.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-2.4.3.tgz_1501866466653_0.22759529086761177"},"directories":{}},"2.4.4":{"name":"0x","version":"2.4.4","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"2e0bb1717330f598cd7f8222b42943a14870f674","_id":"0x@2.4.4","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-aiScJ7lBT03oGjC/+m7l0G38nWGqpxNYcRxq0OGYgG1CeVLJILHH/v6+AwnBx70PdiyTUBRiYIJzi2IsLvL3iw==","shasum":"5b2ed515e9a14e3712a5133bb36fa47ae457c8f1","tarball":"https://registry.npmjs.org/0x/-/0x-2.4.4.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-2.4.4.tgz_1502215296907_0.06422564364038408"},"directories":{}},"2.5.0":{"name":"0x","version":"2.5.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","open":"0.0.5","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"fe7575058aa79faf1d7d731535ccd236748338cc","_id":"0x@2.5.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-GKlBymdAQgqvICL0aINBprvjTHShcJX/tpxy7LeeQvabdk4XKILfWL8V1vxyKe7jvEz73i2xzhmRGeZN/h8OIA==","shasum":"78dfd96a094134b44e733d7db29d6f9335b9d8cf","tarball":"https://registry.npmjs.org/0x/-/0x-2.5.0.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-2.5.0.tgz_1506579093955_0.5877351872622967"},"directories":{}},"2.5.1":{"name":"0x","version":"2.5.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","open":"0.0.5","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"0ed6d6e62e698fa2e9c0bc99167467de5df417f2","_id":"0x@2.5.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-4tFJXxNOUBWAJSoIbgKr6d1U2jU12RaRZXoeB8pHz0rSGk0ZxMo9BF75Da8EIyC0r7erceEAEHxJZxsJCHA8Fw==","shasum":"d7598f3f561d29f07ab5e863a976622925755ac5","tarball":"https://registry.npmjs.org/0x/-/0x-2.5.1.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-2.5.1.tgz_1507069437980_0.3409953056834638"},"directories":{}},"2.5.2":{"name":"0x","version":"2.5.2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","open":"0.0.5","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"0c4d0efe1eb490f1ca5658c76a8bec765696c6de","_id":"0x@2.5.2","_npmVersion":"5.4.2","_nodeVersion":"8.6.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-rJF+pycQ/1ihliI7KTG7BQBptxEekvTIMe6jTuTjbMGqGR2qVna022U9Ts4njMnsSZ0BDs5oBDNqZK3EUxC4Fg==","shasum":"6844f5002d730699c18e720f3634d29f804a007d","tarball":"https://registry.npmjs.org/0x/-/0x-2.5.2.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-2.5.2.tgz_1507140942320_0.5785304727032781"},"directories":{}},"2.5.3":{"name":"0x","version":"2.5.3","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","open":"0.0.5","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"be4f4574d6c64baa2a00e5a0d870e4cff3404908","_id":"0x@2.5.3","_npmVersion":"5.4.2","_nodeVersion":"8.6.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-Vd8yrL1AOJjMzog5sAQ0D/btfvszkII0fOhqMao0yjUbPIr5O4NupyHlaP/gOBnVaxkSAqmog6MJ84sP4ojQDA==","shasum":"52decb2db1727ea9312b466eadd243a9925a01de","tarball":"https://registry.npmjs.org/0x/-/0x-2.5.3.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-2.5.3.tgz_1507394154068_0.40794065478257835"},"directories":{}},"3.0.0-rc1":{"name":"0x","version":"3.0.0-rc1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","open":"0.0.5","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"ff343140d0825f27b404e4ce0e3f0a160c5cb0fe","_id":"0x@3.0.0-rc1","_shasum":"344aa31e8a64901d862dc87d5c176853964477d5","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.12.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"344aa31e8a64901d862dc87d5c176853964477d5","tarball":"https://registry.npmjs.org/0x/-/0x-3.0.0-rc1.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-3.0.0-rc1.tgz_1516284963133_0.6114490220788866"},"directories":{}},"3.0.0-rc2":{"name":"0x","version":"3.0.0-rc2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","open":"0.0.5","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"b16288bffc2c8dad4b12a0e76d9eaac0c1b835cf","_id":"0x@3.0.0-rc2","_shasum":"995e636b639ad42503f97eae40c169be070207e8","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.12.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"995e636b639ad42503f97eae40c169be070207e8","tarball":"https://registry.npmjs.org/0x/-/0x-3.0.0-rc2.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-3.0.0-rc2.tgz_1516305089767_0.20678357616998255"},"directories":{}},"3.0.0-rc3":{"name":"0x","version":"3.0.0-rc3","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","open":"0.0.5","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"baed20dded3834be826a9d00f1fffb6822cda318","_id":"0x@3.0.0-rc3","_shasum":"5f7464397b4e1a76ade9d900a27eef65265992b3","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.12.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"5f7464397b4e1a76ade9d900a27eef65265992b3","tarball":"https://registry.npmjs.org/0x/-/0x-3.0.0-rc3.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-3.0.0-rc3.tgz_1516306447309_0.07033931650221348"},"directories":{}},"3.0.0":{"name":"0x","version":"3.0.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","open":"0.0.5","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"1cdec867a3f5c664b005e6f61a2d77eafb423677","_id":"0x@3.0.0","_shasum":"f90c70be6d0f726d9ceaaff90ecc485127a9af4f","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.12.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"f90c70be6d0f726d9ceaaff90ecc485127a9af4f","tarball":"https://registry.npmjs.org/0x/-/0x-3.0.0.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-3.0.0.tgz_1516403781749_0.30825854325667024"},"directories":{}},"3.0.1":{"name":"0x","version":"3.0.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"740307d3d774be88a1aad4b7aba8c331c2728d26","_id":"0x@3.0.1","_shasum":"09080d26cb0bc324164a6471c1b948fe9e65b1eb","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.12.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"shasum":"09080d26cb0bc324164a6471c1b948fe9e65b1eb","tarball":"https://registry.npmjs.org/0x/-/0x-3.0.1.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-3.0.1.tgz_1516633686378_0.5818374739028513"},"directories":{}},"3.0.2":{"name":"0x","version":"3.0.2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"54deb412f19de760f3048fcc2aefb9c2166a47b3","_id":"0x@3.0.2","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-z6yTd1L92RejzInHBGnbbPlf+MvB4e+0b+hTHCX/+K7GsJLAEmTBVqJhpHYxpCiJ/6klDQMFZ//toMOYC8XU9w==","shasum":"37421fa15de95d424992a26ff249c428ac849223","tarball":"https://registry.npmjs.org/0x/-/0x-3.0.2.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-3.0.2.tgz_1516637791723_0.7683417645748705"},"directories":{}},"3.1.0":{"name":"0x","version":"3.1.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"c9bfa0c8ec4bcc1316d49cda3dc9f554ec073cf2","_id":"0x@3.1.0","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-u4Q0QgmkshX4iiFgaxklV2NiVjYKyDBONcGdDNxloa2La3GprJdANb3+DBzJ7hRDa+tR26Ot/lWga2MdKJRcIg==","shasum":"4770679f9d1000d1cdfd5ae3b30a1a30abe085a6","tarball":"https://registry.npmjs.org/0x/-/0x-3.1.0.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-3.1.0.tgz_1516651005395_0.5211932412348688"},"directories":{}},"3.1.1":{"name":"0x","version":"3.1.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"5ecc08329df561731f3fb12b5c076d5296fa143e","_id":"0x@3.1.1","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-LkTwQAHaTk9Ia4At7wEUPAG0nuuLdoIRghFwyZL/Zn6HGJGB9WD4913vrPa3U9tVydFF53rwEl0KEqjlgeeQWQ==","shasum":"9be470d642d9310549061365914542123e0aa58a","tarball":"https://registry.npmjs.org/0x/-/0x-3.1.1.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-3.1.1.tgz_1517509635224_0.8860266914125532"},"directories":{}},"3.1.2":{"name":"0x","version":"3.1.2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"d1da5d9dc61251771a365b17b844109d3e6b5129","_id":"0x@3.1.2","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-fv667nZ9tQQFor6LJrVCBjoUyOlNgS356CKNVG3C2AqcvBausl9V3isxj+1LPKF0wS5jmpa9a080gPw3s55aKg==","shasum":"946f37295f3aacf19ea72fb8ea665f2783fa9356","tarball":"https://registry.npmjs.org/0x/-/0x-3.1.2.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-3.1.2.tgz_1517844180068_0.9699322376400232"},"directories":{}},"3.2.0":{"name":"0x","version":"3.2.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"06dca4454e4a9af40ee9ceec5fb1cde1e823f1f5","_id":"0x@3.2.0","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-jmT7hxc+5mRxB8IKGCm/LXz5AUMe16R8yJRbbkZlYZcTKEQOKQWj3TSXWwoaAdIKTAY+NOPfuHkcckpq24cExw==","shasum":"3d009669130c9b76fd54c387a99f8cbace675e00","tarball":"https://registry.npmjs.org/0x/-/0x-3.2.0.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x-3.2.0.tgz_1517925928894_0.3153284848667681"},"directories":{}},"3.3.0-rc1":{"name":"0x","version":"3.3.0-rc1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"readme":"# <img alt=0x src=assets/0x-logo.png width=350>\n\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process in a single command, on both Linux *and* OS X. Whilst this seems trivial... it's not. Well it wasn't before `0x`.\n\n## Demo\n\n![](assets/demo.gif)\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/>\n\n## Support\n\n* Node v6+\n\n* OS\n  * Linux\n    * requires [perf](https://en.wikipedia.org/wiki/Perf_(Linux))\n  * OS X\n    * Up-to-date XCode\n  * SmartOS\n  * *not* Windows (PR's welcome)\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Basic Usage\n\nPrefix the usual command for starting a process with 0x:\n\n```sh\n0x my-app.js\n```\n\nYou can make the flamegraph automatically open in your browser with:\n\n```sh\n0x -o my-app.js\n```\n\nUsing a custom Node.js executable:\n\n```sh\n0x -- /path/to/node my-app.js\n```\n\nPassing custom arguments to node:\n\n```sh\n0x -- node --trace-opt --trace-deopt my-app.js\n```\n\n## Generating\n\nOnce we're ready to generate a flamegraph we send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder (`<pid>.flamegraph`), containing `flamegraph.html`\n\n\n## Docker\nDue to security reasons Docker containers tend to result in the following error:\n\n```bash\nCannot read kernel map\nperf_event_open(..., PERF_FLAG_FD_CLOEXEC) failed with unexpected error 1 (Operation not permitted)\nperf_event_open(..., 0) failed unexpectedly with error 1 (Operation not permitted)\nError:\nYou may not have permission to collect stats.\n[...]\n```\nWe can work around this problem by running our container with the `--privileged` option\nor add `privileged: true` in your `docker-compose.yml` file.\nSee the [Docker's doc](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) for more info.\n\n\n## Production Servers\n\nGenerating a flamegraph can be quite intense on CPU and memory,\nif we have restricted resources we should generate the flamegraph\nin two pieces.\n\nFirst we can use the `--collect-only` flag to purely capture stacks.\n\n```sh\n0x --collect-only my-app.js  #0x on the server\n```\n\nPress ctrl+c when ready, this will create the usual profile folder,\nholding one file, that `stacks.$PID.out` file.\n\nNow we need to transfer the stacks file from our production server\nto our local dev machine.\n\nLet's say the pid was 7777, we can generate the flamegraph locally with\n\n```sh\n0x --gen stacks.7777.out # 0x locally\n```\n\nNow the hard work is done away from production, ensuring we avoid any service-level problems.\n\nAlternatively if we transfer the entire folder (containing the stacks file),\nwe can pass the folder to `--visualize-only`:\n\n```sh\n0x --visualize-only 7777.flamegraph # create a flamegraph.html in 7777.flamegraph\n```\n\n## Memory Issues\n\nAs your stack grows you may have memory issues with both Node and your browser.\n\nFor Node, run with the following flag\n```\n--stack-size=8024\n```\n\nFor Chrome, run with the following flag\n```\n--js-flags=\"--stack-size 8024\"\n```\n\nWhere 8024 is the megabytes of RAM required to run load stack. Adjust this as needed and confirm you have it to spare.\n\n## Empty Output Stacks\n\nIf you are getting empty output stacks, you may have to run with `sudo`:\n```sh\nsudo 0x my-app.js\n```\n\n## Command nesting\n\nUse `--` to set the `node` executable and/or set node flags\n\n```sh\n0x [0xFlags] -- node [nodeFlags] script.js [scriptFlags]\n```\n\nFor instance\n\n```sh\n0x --open -- node --zero-fill-buffers script.js --my-own-arg\n```\n\n## 0x Flags\n\n### --help | -h\n\nPrint usage info\n\n### --open | -o\n\nOpen the flamegraph on your browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --name\n\nThe name of the HTML file, without the .html extension\nCan be set to - to write HTML to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--name=-`).\n\nIf either this flag or `--output-html-file` is set to `-` \nthen the HTML will go to STDOUT.\n\nDefault: flamegraph\n\n### ---title \n\nSet the title to display in the flamegraph UI.\n\n### --output-dir | -D\n\nSpecify artifact output directory. This can be specified in template\nform with possible variables being `{pid}`, `{timestamp}`, `{name}` \n(based on the `--name` flag) and `{outputDir}`(variables\nmust be specified without whitespace, e.g. `{ pid }` is not supported).\n\nDefault: `{pid}.flamegraph`\n\n### --output-html | -F\n\nSpecify destination of the generated flamegraph HTML file. \nThis can be specified in template form with possible variables \nbeing `{pid}`, `{timestamp}`, `{name}` (based on the `--name` flag) and \n`{outputDir}` (variables must be specified without whitespace, \ne.g. `{ pid }` is not supported). It can also be set to `-` to \nsend the HTML output to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--output-html=-`).\n\nIf either this flag or --name is set to - \nthen the HTML will go to STDOUT.\n\nDefault: `{outputDir}/{name}.html`\n\n\n### --gen | -g\n\nGenerate the flamegraph from a specified stacks.out file.\nThe `--tiers` and `--langs` flags can also be combined with this flag.\nOutputs to STDOUT unless the `--name` flag is set, in which case \noutputs to a file `{name}.html` in the current folder.\n\n### --svg\n\nGenerates an `flamegraph.svg` file in the artifact output directory,\nin addition to the `flamegraph.html` file.\n\n### --prof-viz\n\nExperimental. Create an additional flame graph using\nlog output when from the V8 `--prof`. This will create \nan additional flamegraph named according to the \n`--name` flag, prefixed with `v8-prof-`. If `--name` \nis set to - then flamegraph HTML will be streamed to STDOUT.\n\nDefault: false \n\n### --phase\n\nStage in initialization to begin aggregating stacks. \n\n**Phase 0** visualizes from the very start, this includes bootstrapping \nstacks and loading the application module tree (these can dominate the flamegraph). \n\n**Phase 1** excludes core bootstrapping stacks, except the end of the boostrapping process \nwhere the application module tree is loaded from the entry point. \n\n**Phase 2** excludes all initialization, this renders the most pragmatic flamegraph for most \nuse cases.\n\nDefault: 2\n\n### --delay | -d\n\nMilliseconds. Delay before tracing begins (or before stacks are processed in the Linux case), allows us to ignore\ninitialisation stacks (e.g. module loading).\n\nExample: `0x -d 2000 my-app.js`\n\nDefault: 0\n\n### --langs | -l\n\nColor code the stacks by JS and C\n\nExample: `0x -l my-app.js`\n\nDefault: false\n\n### --tiers | -t\n\nA comma separated list\n\nOverrides langs, Color code frames by type\n\nExamples: `0x -t my-app.js`\n\nDefault: false\n\n### --exclude | -x\n\nExclude tiers or langs, comma seperated list\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExamples:\n`0x -x v8,nativeC,core my-app.js`\n`0x -x c my-app.js`\n\nDefault: v8\n\n### --include\n\nInclude tiers, Overwrites exclude. Really only useful\nfor including the v8 tier (which is excluded by default).\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExample: `0x --include v8 my-app.js`\n\nDefault: false\n\n### --theme\n\nDark or Light theme\n\nOptions: dark | light\n\nExample: `0x --theme light my-app.js`\n\nDefault: dark\n\n### --quiet | -q \n\nLimit output, the only output will be fatal errors or \nthe path to the `flamegraph.html` upon successful generation.\n\nDefault: false\n\n### --silent | -s\n\nSuppress all output, except fatal errors.\n\nDefault: false\n\n### --json-stacks\n\nSave the intermediate JSON tree representation of the stacks.\n\nDefault: false\n\n### --collect-only\n\nDon't generate the flamegraph, only create the stacks\noutput. \n\nDefault: false\n\n### --visualize-only \n\nSupply a path to a profile folder to build or rebuild visualization \nfrom original stacks. Similar to --gen flag, except specify containing folder\ninstead of stacks file.\n\nDefault: ''  \n\n### --log-output \n\nSpecify `stdout` or `stderr` as 0x's output stream.\n\nDefault: stderr\n\n### --trace-info\n\nShow output from dtrace or perf tools\n\nDefault: false\n\n#### --timestamp-profiles\n\nPrefixes the current timestamp to the Profile Folder's name minimizing collisions\nin containerized environments\n\nExample: `1516395452110-3866.flamegraph`\n\n## The Profile Folder\n\nBy default, a profile folder will be created and named after the PID, e.g.\n`3866.flamegraph` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder can contain the following files\n\n* flamegraph.svg - an SVG rendering of the flamegraph\n* stacks.3866.out - the traced stacks (run through [perf-sym](http://npmjs.com/perf-sym) on OS X)\n* flamegraph.html - the interactive flamegraph\n* stacks.3866.json - a JSON tree generated from the stacks, enabled with `--json-stacks`\n* isolate-0x103000600-3866-v8.log - a v8 profiling log file, only included when `--prof-viz` is enabled \n* isolate-0x103000600-3866-v8.log.json - v8 profiling log file processed into JSON using v8s internal tick processor, only included when `--prof-viz` is enabled\n* v8-prof-stacks.77801.out - a generated stacks file based on v8 profiling data, only included when `--prof-viz` is enabled\n* v8-prof-flamegraph.html - an alternartive flamegraph that only shows JS stacks based on v8's profiling data, only included when `--prof-viz` is enabled \n\n\nThe is helpful, because there's other things you can do with\nstacks output. For instance, checkout [cpuprofilify](http://npmjs.com/cpuprofilify) and [traceviewify](http://npmjs.com/traceviewify).\n\n## Example\n\nWant to try it out? Clone this repo, run `npm i -g` and\nfrom the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\nNow try some other options, e.g.\n\n```sh\n0x -t examples/rest-api\n```\n\nBabel (ES6 Transpile) Examples\n-------\n\nSee `./examples/babel` for an example. Note the babel require hook is not currently supported. Notes on using the babel-cli instead can be found in the babel example readme.\n\n## Programmatic API \n\n0x can also be required as a Node module and scripted:\n\n```js\nconst zeroEks = require('0x')\nconst path = require('path')\nzeroEks({\n  argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n  workingDir: __dirname\n})\n```\n\n### `require('0x')(opts, binary, cb)`\n\nThe `cb` option is a error first callback which is invoked after a \nprofile folder has been created and populated.\n\nThe `binary` option can be `false` (to default to the `node` executed resolved\naccording to environment `PATH`) or a string holding the path to any \nnode binary executable.\n\nThe `opts` argument is an object, with the following properties:\n\n#### `argv` (array) – required\n\nPass the arguments that the spawned Node process should receive. \n\n#### `workingDir` (string)\n\nThe base directory where profile folders will be placed. \n\nDefault: process.cwd()\n\n#### `name` (string) \n\nThe name of the flamegraph HTML output file, without the extension.\n\nDefault: flamegraph \n\n#### `open` (boolean)\n\nSee [`--open`](#--open---o)\n\n#### `quiet` (boolean)\n\nSee [`--quiet`](#--quiet---q)\n\n#### `silent` (boolean)\n\nSee [`--silent`](#--silent---s)\n\n#### `jsonStacks` (boolean)\n\nSee [`--json-stacks`](#--json-stacks)\n\n#### `svg` (boolean)\n\nSee [`--svg`](#--svg)\n\n#### `logOutput` (boolean)\n\nSee [`--log-output`](#--log-output)\n\n#### `timestampProfiles` (boolean)\n\nSee [`--timestamp-profiles`](#--timestamp-profiles)\n\n#### `traceInfo` (boolean)\n\nSee [`--trace-info`](#--trace-info)\n\n#### `theme` (string)\n\nSee [`--theme`](#--theme)\n\n#### `include` (string)\n\nSee [`--include`](#--include)\n\n#### `exclude` (string)\n\nSee [`--exlude`](#--exlude---x)\n\n#### `langs` (string)\n\nSee [`--langs`](#--langs---l)\n\n#### `tiers` (string)\n\nSee [`--tiers`](#--tiers---t)\n\n#### `gen` (string)\n\nSee [`--gen`](#--gen---g)\n\n#### `outputDir` (string)\n\nSee [`--output-dir`](#--output-dir---d)\n\n#### `outputHtml` (string)\n\nSee [`--output-html`](#--output-html---f)\n\n#### `title` (string)\n\nSee [`--title`](#--title)\n\n### `profViz`\n\nSee [`--prof-viz`](#--prof-viz)\n\n#### `phase` (number)\n\nSee [`--phase`](#--phase)\n\n#### `mapFrames` (function)\n\nWill override phase. A custom mapping function that receives \nan array of frames and an instance of the Profiler (see `stack-convert.js`).\n\nTakes the form `(frames, profiler) => Array|false`. Return false to remove \nthe whole stack from the output, or return a modified array to change \nthe output. \n\n#### `delay` (number)\n\nSee [`--delay`](#--delay---d)\n\n#### `visualizeOnly` (string)\n\nSee [`--visualize-only`](#--visualize-only)\n\n#### `collectOnly` (boolean)\n\nSee [`--collect-only`](#--collect-only)\n\n### `require('0x').stacksToFlamegraph(opts, binary, cb)`\n\nThis method will take a captured stacks input file \nand generate a flamegraph HTML file.\n\nIt takes the same arguments as the main function, but the \n`gen` argument (which should hold a path to the source \nstacks file) and the `name` argument (which should specify a\ndestination out file) is required. \n\n## v2\n\nIf you still need support for Node v4, use [0x v2.x.x](https://github.com/davidmarkclements/0x/tree/v2)\n\n## v1\n\nDon't use v1, it was an experiment and is  non functional\nShould have be v0...\n\n## Contributions\n\nYes please!\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\n0x is generously sponsored by [nearForm](http://nearform.com)\n\nThis tool is essentially a mashup from various info and code\nsources, and therefore would have taken much longer without\nthe following people and their Open Source/Info Sharing efforts\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT and Apache (depending on the code, see LICENSE.md)\n","readmeFilename":"readme.md","gitHead":"7ced286c1a32a060cbfd8799a3ccbec1204a21d0","_id":"0x@3.3.0-rc1","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-DHviyF6+LoXm1dvdzLv2rANhdB+JZPjjJ8wNzbPNoxH7bzDm7+mplEX7pk2/HhAVnAVvvInQhbnufhwgEQbJqw==","shasum":"be88e306342260475bb470f9b7f63206ba3ed4e9","tarball":"https://registry.npmjs.org/0x/-/0x-3.3.0-rc1.tgz","fileCount":18,"unpackedSize":90347},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_3.3.0-rc1_1518031043253_0.03303328569777153"},"_hasShrinkwrap":false},"3.3.0-rc2":{"name":"0x","version":"3.3.0-rc2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"readme":"# <img alt=0x src=assets/0x-logo.png width=350>\n\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process in a single command, on both Linux *and* OS X. Whilst this seems trivial... it's not. Well it wasn't before `0x`.\n\n## Demo\n\n![](assets/demo.gif)\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/>\n\n## Support\n\n* Node v6+\n\n* OS\n  * Linux\n    * requires [perf](https://en.wikipedia.org/wiki/Perf_(Linux))\n  * OS X\n    * Up-to-date XCode\n  * SmartOS\n  * *not* Windows (PR's welcome)\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Basic Usage\n\nPrefix the usual command for starting a process with 0x:\n\n```sh\n0x my-app.js\n```\n\nYou can make the flamegraph automatically open in your browser with:\n\n```sh\n0x -o my-app.js\n```\n\nUsing a custom Node.js executable:\n\n```sh\n0x -- /path/to/node my-app.js\n```\n\nPassing custom arguments to node:\n\n```sh\n0x -- node --trace-opt --trace-deopt my-app.js\n```\n\n## Generating\n\nOnce we're ready to generate a flamegraph we send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder (`<pid>.flamegraph`), containing `flamegraph.html`\n\n\n## Docker\nDue to security reasons Docker containers tend to result in the following error:\n\n```bash\nCannot read kernel map\nperf_event_open(..., PERF_FLAG_FD_CLOEXEC) failed with unexpected error 1 (Operation not permitted)\nperf_event_open(..., 0) failed unexpectedly with error 1 (Operation not permitted)\nError:\nYou may not have permission to collect stats.\n[...]\n```\nWe can work around this problem by running our container with the `--privileged` option\nor add `privileged: true` in your `docker-compose.yml` file.\nSee the [Docker's doc](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) for more info.\n\n\n## Production Servers\n\nGenerating a flamegraph can be quite intense on CPU and memory,\nif we have restricted resources we should generate the flamegraph\nin two pieces.\n\nFirst we can use the `--collect-only` flag to purely capture stacks.\n\n```sh\n0x --collect-only my-app.js  #0x on the server\n```\n\nPress ctrl+c when ready, this will create the usual profile folder,\nholding one file, that `stacks.$PID.out` file.\n\nNow we need to transfer the stacks file from our production server\nto our local dev machine.\n\nLet's say the pid was 7777, we can generate the flamegraph locally with\n\n```sh\n0x --gen stacks.7777.out # 0x locally\n```\n\nNow the hard work is done away from production, ensuring we avoid any service-level problems.\n\nAlternatively if we transfer the entire folder (containing the stacks file),\nwe can pass the folder to `--visualize-only`:\n\n```sh\n0x --visualize-only 7777.flamegraph # create a flamegraph.html in 7777.flamegraph\n```\n\n## Memory Issues\n\nAs your stack grows you may have memory issues with both Node and your browser.\n\nFor Node, run with the following flag\n```\n--stack-size=8024\n```\n\nFor Chrome, run with the following flag\n```\n--js-flags=\"--stack-size 8024\"\n```\n\nWhere 8024 is the megabytes of RAM required to run load stack. Adjust this as needed and confirm you have it to spare.\n\n## Empty Output Stacks\n\nIf you are getting empty output stacks, you may have to run with `sudo`:\n```sh\nsudo 0x my-app.js\n```\n\n## Command nesting\n\nUse `--` to set the `node` executable and/or set node flags\n\n```sh\n0x [0xFlags] -- node [nodeFlags] script.js [scriptFlags]\n```\n\nFor instance\n\n```sh\n0x --open -- node --zero-fill-buffers script.js --my-own-arg\n```\n\n## 0x Flags\n\n### --help | -h\n\nPrint usage info\n\n### --open | -o\n\nOpen the flamegraph on your browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --name\n\nThe name of the HTML file, without the .html extension\nCan be set to - to write HTML to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--name=-`).\n\nIf either this flag or `--output-html-file` is set to `-` \nthen the HTML will go to STDOUT.\n\nDefault: flamegraph\n\n### ---title \n\nSet the title to display in the flamegraph UI.\n\n### --output-dir | -D\n\nSpecify artifact output directory. This can be specified in template\nform with possible variables being `{pid}`, `{timestamp}`, `{name}` \n(based on the `--name` flag) and `{outputDir}`(variables\nmust be specified without whitespace, e.g. `{ pid }` is not supported).\n\nDefault: `{pid}.flamegraph`\n\n### --output-html | -F\n\nSpecify destination of the generated flamegraph HTML file. \nThis can be specified in template form with possible variables \nbeing `{pid}`, `{timestamp}`, `{name}` (based on the `--name` flag) and \n`{outputDir}` (variables must be specified without whitespace, \ne.g. `{ pid }` is not supported). It can also be set to `-` to \nsend the HTML output to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--output-html=-`).\n\nIf either this flag or --name is set to - \nthen the HTML will go to STDOUT.\n\nDefault: `{outputDir}/{name}.html`\n\n\n### --gen | -g\n\nGenerate the flamegraph from a specified stacks.out file.\nThe `--tiers` and `--langs` flags can also be combined with this flag.\nOutputs to STDOUT unless the `--name` flag is set, in which case \noutputs to a file `{name}.html` in the current folder.\n\n### --svg\n\nGenerates an `flamegraph.svg` file in the artifact output directory,\nin addition to the `flamegraph.html` file.\n\n### --prof-viz\n\nExperimental. Create an additional flame graph using\nlog output when from the V8 `--prof`. This will create \nan additional flamegraph named according to the \n`--name` flag, prefixed with `v8-prof-`. If `--name` \nis set to - then flamegraph HTML will be streamed to STDOUT.\n\nDefault: false \n\n### --phase\n\nStage in initialization to begin aggregating stacks. \n\n**Phase 0** visualizes from the very start, this includes bootstrapping \nstacks and loading the application module tree (these can dominate the flamegraph). \n\n**Phase 1** excludes core bootstrapping stacks, except the end of the boostrapping process \nwhere the application module tree is loaded from the entry point. \n\n**Phase 2** excludes all initialization, this renders the most pragmatic flamegraph for most \nuse cases.\n\nDefault: 2\n\n### --delay | -d\n\nMilliseconds. Delay before tracing begins (or before stacks are processed in the Linux case), allows us to ignore\ninitialisation stacks (e.g. module loading).\n\nExample: `0x -d 2000 my-app.js`\n\nDefault: 0\n\n### --langs | -l\n\nColor code the stacks by JS and C\n\nExample: `0x -l my-app.js`\n\nDefault: false\n\n### --tiers | -t\n\nA comma separated list\n\nOverrides langs, Color code frames by type\n\nExamples: `0x -t my-app.js`\n\nDefault: false\n\n### --exclude | -x\n\nExclude tiers or langs, comma seperated list\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExamples:\n`0x -x v8,nativeC,core my-app.js`\n`0x -x c my-app.js`\n\nDefault: v8\n\n### --include\n\nInclude tiers, Overwrites exclude. Really only useful\nfor including the v8 tier (which is excluded by default).\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExample: `0x --include v8 my-app.js`\n\nDefault: false\n\n### --theme\n\nDark or Light theme\n\nOptions: dark | light\n\nExample: `0x --theme light my-app.js`\n\nDefault: dark\n\n### --quiet | -q \n\nLimit output, the only output will be fatal errors or \nthe path to the `flamegraph.html` upon successful generation.\n\nDefault: false\n\n### --silent | -s\n\nSuppress all output, except fatal errors.\n\nDefault: false\n\n### --json-stacks\n\nSave the intermediate JSON tree representation of the stacks.\n\nDefault: false\n\n### --collect-only\n\nDon't generate the flamegraph, only create the stacks\noutput. \n\nDefault: false\n\n### --visualize-only \n\nSupply a path to a profile folder to build or rebuild visualization \nfrom original stacks. Similar to --gen flag, except specify containing folder\ninstead of stacks file.\n\nDefault: ''  \n\n### --log-output \n\nSpecify `stdout` or `stderr` as 0x's output stream.\n\nDefault: stderr\n\n### --trace-info\n\nShow output from dtrace or perf tools\n\nDefault: false\n\n#### --timestamp-profiles\n\nPrefixes the current timestamp to the Profile Folder's name minimizing collisions\nin containerized environments\n\nExample: `1516395452110-3866.flamegraph`\n\n## The Profile Folder\n\nBy default, a profile folder will be created and named after the PID, e.g.\n`3866.flamegraph` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder can contain the following files\n\n* flamegraph.svg - an SVG rendering of the flamegraph\n* stacks.3866.out - the traced stacks (run through [perf-sym](http://npmjs.com/perf-sym) on OS X)\n* flamegraph.html - the interactive flamegraph\n* stacks.3866.json - a JSON tree generated from the stacks, enabled with `--json-stacks`\n* isolate-0x103000600-3866-v8.log - a v8 profiling log file, only included when `--prof-viz` is enabled \n* isolate-0x103000600-3866-v8.log.json - v8 profiling log file processed into JSON using v8s internal tick processor, only included when `--prof-viz` is enabled\n* v8-prof-stacks.77801.out - a generated stacks file based on v8 profiling data, only included when `--prof-viz` is enabled\n* v8-prof-flamegraph.html - an alternartive flamegraph that only shows JS stacks based on v8's profiling data, only included when `--prof-viz` is enabled \n\n\nThe is helpful, because there's other things you can do with\nstacks output. For instance, checkout [cpuprofilify](http://npmjs.com/cpuprofilify) and [traceviewify](http://npmjs.com/traceviewify).\n\n## Example\n\nWant to try it out? Clone this repo, run `npm i -g` and\nfrom the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\nNow try some other options, e.g.\n\n```sh\n0x -t examples/rest-api\n```\n\nBabel (ES6 Transpile) Examples\n-------\n\nSee `./examples/babel` for an example. Note the babel require hook is not currently supported. Notes on using the babel-cli instead can be found in the babel example readme.\n\n## Programmatic API \n\n0x can also be required as a Node module and scripted:\n\n```js\nconst zeroEks = require('0x')\nconst path = require('path')\nzeroEks({\n  argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n  workingDir: __dirname\n})\n```\n\n### `require('0x')(opts, binary, cb)`\n\nThe `cb` option is a error first callback which is invoked after a \nprofile folder has been created and populated.\n\nThe `binary` option can be `false` (to default to the `node` executed resolved\naccording to environment `PATH`) or a string holding the path to any \nnode binary executable.\n\nThe `opts` argument is an object, with the following properties:\n\n#### `argv` (array) – required\n\nPass the arguments that the spawned Node process should receive. \n\n#### `workingDir` (string)\n\nThe base directory where profile folders will be placed. \n\nDefault: process.cwd()\n\n#### `name` (string) \n\nThe name of the flamegraph HTML output file, without the extension.\n\nDefault: flamegraph \n\n#### `open` (boolean)\n\nSee [`--open`](#--open---o)\n\n#### `quiet` (boolean)\n\nSee [`--quiet`](#--quiet---q)\n\n#### `silent` (boolean)\n\nSee [`--silent`](#--silent---s)\n\n#### `jsonStacks` (boolean)\n\nSee [`--json-stacks`](#--json-stacks)\n\n#### `svg` (boolean)\n\nSee [`--svg`](#--svg)\n\n#### `logOutput` (boolean)\n\nSee [`--log-output`](#--log-output)\n\n#### `timestampProfiles` (boolean)\n\nSee [`--timestamp-profiles`](#--timestamp-profiles)\n\n#### `traceInfo` (boolean)\n\nSee [`--trace-info`](#--trace-info)\n\n#### `theme` (string)\n\nSee [`--theme`](#--theme)\n\n#### `include` (string)\n\nSee [`--include`](#--include)\n\n#### `exclude` (string)\n\nSee [`--exlude`](#--exlude---x)\n\n#### `langs` (string)\n\nSee [`--langs`](#--langs---l)\n\n#### `tiers` (string)\n\nSee [`--tiers`](#--tiers---t)\n\n#### `gen` (string)\n\nSee [`--gen`](#--gen---g)\n\n#### `outputDir` (string)\n\nSee [`--output-dir`](#--output-dir---d)\n\n#### `outputHtml` (string)\n\nSee [`--output-html`](#--output-html---f)\n\n#### `title` (string)\n\nSee [`--title`](#--title)\n\n### `profViz`\n\nSee [`--prof-viz`](#--prof-viz)\n\n#### `phase` (number)\n\nSee [`--phase`](#--phase)\n\n#### `mapFrames` (function)\n\nWill override phase. A custom mapping function that receives \nan array of frames and an instance of the Profiler (see `stack-convert.js`).\n\nTakes the form `(frames, profiler) => Array|false`. Return false to remove \nthe whole stack from the output, or return a modified array to change \nthe output. \n\n#### `delay` (number)\n\nSee [`--delay`](#--delay---d)\n\n#### `visualizeOnly` (string)\n\nSee [`--visualize-only`](#--visualize-only)\n\n#### `collectOnly` (boolean)\n\nSee [`--collect-only`](#--collect-only)\n\n### `require('0x').stacksToFlamegraph(opts, binary, cb)`\n\nThis method will take a captured stacks input file \nand generate a flamegraph HTML file.\n\nIt takes the same arguments as the main function, but the \n`gen` argument (which should hold a path to the source \nstacks file) and the `name` argument (which should specify a\ndestination out file) is required. \n\n## v2\n\nIf you still need support for Node v4, use [0x v2.x.x](https://github.com/davidmarkclements/0x/tree/v2)\n\n## v1\n\nDon't use v1, it was an experiment and is  non functional\nShould have be v0...\n\n## Contributions\n\nYes please!\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\n0x is generously sponsored by [nearForm](http://nearform.com)\n\nThis tool is essentially a mashup from various info and code\nsources, and therefore would have taken much longer without\nthe following people and their Open Source/Info Sharing efforts\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT and Apache (depending on the code, see LICENSE.md)\n","readmeFilename":"readme.md","gitHead":"97c444e1acdebfa7633a485e35188dc00b764ff5","_id":"0x@3.3.0-rc2","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-0/TdAx+qljHVdhNqeUrdUD/I59+uWO79En+1ruPJWoxaIAjgdjvhQcuRYraozr4KPJLK85Rz4IBXq9CPbimS1A==","shasum":"f86370107e76919a7c3d5605fdec27b94f9a642c","tarball":"https://registry.npmjs.org/0x/-/0x-3.3.0-rc2.tgz","fileCount":18,"unpackedSize":90872},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_3.3.0-rc2_1518049173506_0.4212447387644267"},"_hasShrinkwrap":false},"3.3.0-rc3":{"name":"0x","version":"3.3.0-rc3","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"readme":"# <img alt=0x src=assets/0x-logo.png width=350>\n\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process in a single command, on both Linux *and* OS X. Whilst this seems trivial... it's not. Well it wasn't before `0x`.\n\n## Demo\n\n![](assets/demo.gif)\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/>\n\n## Support\n\n* Node v6+\n\n* OS\n  * Linux\n    * requires [perf](https://en.wikipedia.org/wiki/Perf_(Linux))\n  * OS X\n    * Up-to-date XCode\n  * SmartOS\n  * *not* Windows (PR's welcome)\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Basic Usage\n\nPrefix the usual command for starting a process with 0x:\n\n```sh\n0x my-app.js\n```\n\nYou can make the flamegraph automatically open in your browser with:\n\n```sh\n0x -o my-app.js\n```\n\nUsing a custom Node.js executable:\n\n```sh\n0x -- /path/to/node my-app.js\n```\n\nPassing custom arguments to node:\n\n```sh\n0x -- node --trace-opt --trace-deopt my-app.js\n```\n\n## Generating\n\nOnce we're ready to generate a flamegraph we send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder (`<pid>.flamegraph`), containing `flamegraph.html`\n\n\n## Docker\nDue to security reasons Docker containers tend to result in the following error:\n\n```bash\nCannot read kernel map\nperf_event_open(..., PERF_FLAG_FD_CLOEXEC) failed with unexpected error 1 (Operation not permitted)\nperf_event_open(..., 0) failed unexpectedly with error 1 (Operation not permitted)\nError:\nYou may not have permission to collect stats.\n[...]\n```\nWe can work around this problem by running our container with the `--privileged` option\nor add `privileged: true` in your `docker-compose.yml` file.\nSee the [Docker's doc](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) for more info.\n\n\n## Production Servers\n\nGenerating a flamegraph can be quite intense on CPU and memory,\nif we have restricted resources we should generate the flamegraph\nin two pieces.\n\nFirst we can use the `--collect-only` flag to purely capture stacks.\n\n```sh\n0x --collect-only my-app.js  #0x on the server\n```\n\nPress ctrl+c when ready, this will create the usual profile folder,\nholding one file, that `stacks.$PID.out` file.\n\nNow we need to transfer the stacks file from our production server\nto our local dev machine.\n\nLet's say the pid was 7777, we can generate the flamegraph locally with\n\n```sh\n0x --gen stacks.7777.out # 0x locally\n```\n\nNow the hard work is done away from production, ensuring we avoid any service-level problems.\n\nAlternatively if we transfer the entire folder (containing the stacks file),\nwe can pass the folder to `--visualize-only`:\n\n```sh\n0x --visualize-only 7777.flamegraph # create a flamegraph.html in 7777.flamegraph\n```\n\n## Memory Issues\n\nAs your stack grows you may have memory issues with both Node and your browser.\n\nFor Node, run with the following flag\n```\n--stack-size=8024\n```\n\nFor Chrome, run with the following flag\n```\n--js-flags=\"--stack-size 8024\"\n```\n\nWhere 8024 is the megabytes of RAM required to run load stack. Adjust this as needed and confirm you have it to spare.\n\n## Empty Output Stacks\n\nIf you are getting empty output stacks, you may have to run with `sudo`:\n```sh\nsudo 0x my-app.js\n```\n\n## Command nesting\n\nUse `--` to set the `node` executable and/or set node flags\n\n```sh\n0x [0xFlags] -- node [nodeFlags] script.js [scriptFlags]\n```\n\nFor instance\n\n```sh\n0x --open -- node --zero-fill-buffers script.js --my-own-arg\n```\n\n## 0x Flags\n\n### --help | -h\n\nPrint usage info\n\n### --open | -o\n\nOpen the flamegraph on your browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --name\n\nThe name of the HTML file, without the .html extension\nCan be set to - to write HTML to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--name=-`).\n\nIf either this flag or `--output-html-file` is set to `-` \nthen the HTML will go to STDOUT.\n\nDefault: flamegraph\n\n### ---title \n\nSet the title to display in the flamegraph UI.\n\n### --output-dir | -D\n\nSpecify artifact output directory. This can be specified in template\nform with possible variables being `{pid}`, `{timestamp}`, `{name}` \n(based on the `--name` flag) and `{outputDir}`(variables\nmust be specified without whitespace, e.g. `{ pid }` is not supported).\n\nDefault: `{pid}.flamegraph`\n\n### --output-html | -F\n\nSpecify destination of the generated flamegraph HTML file. \nThis can be specified in template form with possible variables \nbeing `{pid}`, `{timestamp}`, `{name}` (based on the `--name` flag) and \n`{outputDir}` (variables must be specified without whitespace, \ne.g. `{ pid }` is not supported). It can also be set to `-` to \nsend the HTML output to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--output-html=-`).\n\nIf either this flag or --name is set to - \nthen the HTML will go to STDOUT.\n\nDefault: `{outputDir}/{name}.html`\n\n\n### --gen | -g\n\nGenerate the flamegraph from a specified stacks.out file.\nThe `--tiers` and `--langs` flags can also be combined with this flag.\nOutputs to STDOUT unless the `--name` flag is set, in which case \noutputs to a file `{name}.html` in the current folder.\n\n### --svg\n\nGenerates an `flamegraph.svg` file in the artifact output directory,\nin addition to the `flamegraph.html` file.\n\n### --prof-viz\n\nExperimental. Create an additional flame graph using\nlog output when from the V8 `--prof`. This will create \nan additional flamegraph named according to the \n`--name` flag, prefixed with `v8-prof-`. If `--name` \nis set to - then flamegraph HTML will be streamed to STDOUT.\n\nDefault: false \n\n### --phase\n\nStage in initialization to begin aggregating stacks. \n\n**Phase 0** visualizes from the very start, this includes bootstrapping \nstacks and loading the application module tree (these can dominate the flamegraph). \n\n**Phase 1** excludes core bootstrapping stacks, except the end of the boostrapping process \nwhere the application module tree is loaded from the entry point. \n\n**Phase 2** excludes all initialization, this renders the most pragmatic flamegraph for most \nuse cases.\n\nDefault: 2\n\n### --delay | -d\n\nMilliseconds. Delay before tracing begins (or before stacks are processed in the Linux case), allows us to ignore\ninitialisation stacks (e.g. module loading).\n\nExample: `0x -d 2000 my-app.js`\n\nDefault: 0\n\n### --langs | -l\n\nColor code the stacks by JS and C\n\nExample: `0x -l my-app.js`\n\nDefault: false\n\n### --tiers | -t\n\nA comma separated list\n\nOverrides langs, Color code frames by type\n\nExamples: `0x -t my-app.js`\n\nDefault: false\n\n### --exclude | -x\n\nExclude tiers or langs, comma seperated list\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExamples:\n`0x -x v8,nativeC,core my-app.js`\n`0x -x c my-app.js`\n\nDefault: v8\n\n### --include\n\nInclude tiers, Overwrites exclude. Really only useful\nfor including the v8 tier (which is excluded by default).\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExample: `0x --include v8 my-app.js`\n\nDefault: false\n\n### --theme\n\nDark or Light theme\n\nOptions: dark | light\n\nExample: `0x --theme light my-app.js`\n\nDefault: dark\n\n### --quiet | -q \n\nLimit output, the only output will be fatal errors or \nthe path to the `flamegraph.html` upon successful generation.\n\nDefault: false\n\n### --silent | -s\n\nSuppress all output, except fatal errors.\n\nDefault: false\n\n### --json-stacks\n\nSave the intermediate JSON tree representation of the stacks.\n\nDefault: false\n\n### --collect-only\n\nDon't generate the flamegraph, only create the stacks\noutput. \n\nDefault: false\n\n### --visualize-only \n\nSupply a path to a profile folder to build or rebuild visualization \nfrom original stacks. Similar to --gen flag, except specify containing folder\ninstead of stacks file.\n\nDefault: ''  \n\n### --log-output \n\nSpecify `stdout` or `stderr` as 0x's output stream.\n\nDefault: stderr\n\n### --trace-info\n\nShow output from dtrace or perf tools\n\nDefault: false\n\n#### --timestamp-profiles\n\nPrefixes the current timestamp to the Profile Folder's name minimizing collisions\nin containerized environments\n\nExample: `1516395452110-3866.flamegraph`\n\n## The Profile Folder\n\nBy default, a profile folder will be created and named after the PID, e.g.\n`3866.flamegraph` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder can contain the following files\n\n* flamegraph.svg - an SVG rendering of the flamegraph\n* stacks.3866.out - the traced stacks (run through [perf-sym](http://npmjs.com/perf-sym) on OS X)\n* flamegraph.html - the interactive flamegraph\n* stacks.3866.json - a JSON tree generated from the stacks, enabled with `--json-stacks`\n* isolate-0x103000600-3866-v8.log - a v8 profiling log file, only included when `--prof-viz` is enabled \n* isolate-0x103000600-3866-v8.log.json - v8 profiling log file processed into JSON using v8s internal tick processor, only included when `--prof-viz` is enabled\n* v8-prof-stacks.77801.out - a generated stacks file based on v8 profiling data, only included when `--prof-viz` is enabled\n* v8-prof-flamegraph.html - an alternartive flamegraph that only shows JS stacks based on v8's profiling data, only included when `--prof-viz` is enabled \n\n\nThe is helpful, because there's other things you can do with\nstacks output. For instance, checkout [cpuprofilify](http://npmjs.com/cpuprofilify) and [traceviewify](http://npmjs.com/traceviewify).\n\n## Example\n\nWant to try it out? Clone this repo, run `npm i -g` and\nfrom the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\nNow try some other options, e.g.\n\n```sh\n0x -t examples/rest-api\n```\n\nBabel (ES6 Transpile) Examples\n-------\n\nSee `./examples/babel` for an example. Note the babel require hook is not currently supported. Notes on using the babel-cli instead can be found in the babel example readme.\n\n## Programmatic API \n\n0x can also be required as a Node module and scripted:\n\n```js\nconst zeroEks = require('0x')\nconst path = require('path')\nzeroEks({\n  argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n  workingDir: __dirname\n})\n```\n\n### `require('0x')(opts, binary, cb)`\n\nThe `cb` option is a error first callback which is invoked after a \nprofile folder has been created and populated.\n\nThe `binary` option can be `false` (to default to the `node` executed resolved\naccording to environment `PATH`) or a string holding the path to any \nnode binary executable.\n\nThe `opts` argument is an object, with the following properties:\n\n#### `argv` (array) – required\n\nPass the arguments that the spawned Node process should receive. \n\n#### `workingDir` (string)\n\nThe base directory where profile folders will be placed. \n\nDefault: process.cwd()\n\n#### `name` (string) \n\nThe name of the flamegraph HTML output file, without the extension.\n\nDefault: flamegraph \n\n#### `open` (boolean)\n\nSee [`--open`](#--open---o)\n\n#### `quiet` (boolean)\n\nSee [`--quiet`](#--quiet---q)\n\n#### `silent` (boolean)\n\nSee [`--silent`](#--silent---s)\n\n#### `jsonStacks` (boolean)\n\nSee [`--json-stacks`](#--json-stacks)\n\n#### `svg` (boolean)\n\nSee [`--svg`](#--svg)\n\n#### `logOutput` (boolean)\n\nSee [`--log-output`](#--log-output)\n\n#### `timestampProfiles` (boolean)\n\nSee [`--timestamp-profiles`](#--timestamp-profiles)\n\n#### `traceInfo` (boolean)\n\nSee [`--trace-info`](#--trace-info)\n\n#### `theme` (string)\n\nSee [`--theme`](#--theme)\n\n#### `include` (string)\n\nSee [`--include`](#--include)\n\n#### `exclude` (string)\n\nSee [`--exlude`](#--exlude---x)\n\n#### `langs` (string)\n\nSee [`--langs`](#--langs---l)\n\n#### `tiers` (string)\n\nSee [`--tiers`](#--tiers---t)\n\n#### `gen` (string)\n\nSee [`--gen`](#--gen---g)\n\n#### `outputDir` (string)\n\nSee [`--output-dir`](#--output-dir---d)\n\n#### `outputHtml` (string)\n\nSee [`--output-html`](#--output-html---f)\n\n#### `title` (string)\n\nSee [`--title`](#--title)\n\n### `profViz`\n\nSee [`--prof-viz`](#--prof-viz)\n\n#### `phase` (number)\n\nSee [`--phase`](#--phase)\n\n#### `mapFrames` (function)\n\nWill override phase. A custom mapping function that receives \nan array of frames and an instance of the Profiler (see `stack-convert.js`).\n\nTakes the form `(frames, profiler) => Array|false`. Return false to remove \nthe whole stack from the output, or return a modified array to change \nthe output. \n\n#### `delay` (number)\n\nSee [`--delay`](#--delay---d)\n\n#### `visualizeOnly` (string)\n\nSee [`--visualize-only`](#--visualize-only)\n\n#### `collectOnly` (boolean)\n\nSee [`--collect-only`](#--collect-only)\n\n### `require('0x').stacksToFlamegraph(opts, binary, cb)`\n\nThis method will take a captured stacks input file \nand generate a flamegraph HTML file.\n\nIt takes the same arguments as the main function, but the \n`gen` argument (which should hold a path to the source \nstacks file) and the `name` argument (which should specify a\ndestination out file) is required. \n\n## v2\n\nIf you still need support for Node v4, use [0x v2.x.x](https://github.com/davidmarkclements/0x/tree/v2)\n\n## v1\n\nDon't use v1, it was an experiment and is  non functional\nShould have be v0...\n\n## Contributions\n\nYes please!\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\n0x is generously sponsored by [nearForm](http://nearform.com)\n\nThis tool is essentially a mashup from various info and code\nsources, and therefore would have taken much longer without\nthe following people and their Open Source/Info Sharing efforts\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT and Apache (depending on the code, see LICENSE.md)\n","readmeFilename":"readme.md","gitHead":"febb108be8779ee89b4ae1f0424153735aa83422","_id":"0x@3.3.0-rc3","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-aHzj7CxDAPPEAGH40Y7t29d5BlannrD98FMNfzHWxgw+iiVXNWmD5XU1MdcXyXcFwYsWnOo0lKZBbyaNj3NnKw==","shasum":"3cde37b9867b8c10422ba7071c3992ef2c5b8f7c","tarball":"https://registry.npmjs.org/0x/-/0x-3.3.0-rc3.tgz","fileCount":18,"unpackedSize":90855},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_3.3.0-rc3_1518049487169_0.8649875376763625"},"_hasShrinkwrap":false},"3.3.0-rc4":{"name":"0x","version":"3.3.0-rc4","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"readme":"# <img alt=0x src=assets/0x-logo.png width=350>\n\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process in a single command, on both Linux *and* OS X. Whilst this seems trivial... it's not. Well it wasn't before `0x`.\n\n## Demo\n\n![](assets/demo.gif)\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/>\n\n## Support\n\n* Node v6+\n\n* OS\n  * Linux\n    * requires [perf](https://en.wikipedia.org/wiki/Perf_(Linux))\n  * OS X\n    * Up-to-date XCode\n  * SmartOS\n  * *not* Windows (PR's welcome)\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Basic Usage\n\nPrefix the usual command for starting a process with 0x:\n\n```sh\n0x my-app.js\n```\n\nYou can make the flamegraph automatically open in your browser with:\n\n```sh\n0x -o my-app.js\n```\n\nUsing a custom Node.js executable:\n\n```sh\n0x -- /path/to/node my-app.js\n```\n\nPassing custom arguments to node:\n\n```sh\n0x -- node --trace-opt --trace-deopt my-app.js\n```\n\n## Generating\n\nOnce we're ready to generate a flamegraph we send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder (`<pid>.flamegraph`), containing `flamegraph.html`\n\n\n## Docker\nDue to security reasons Docker containers tend to result in the following error:\n\n```bash\nCannot read kernel map\nperf_event_open(..., PERF_FLAG_FD_CLOEXEC) failed with unexpected error 1 (Operation not permitted)\nperf_event_open(..., 0) failed unexpectedly with error 1 (Operation not permitted)\nError:\nYou may not have permission to collect stats.\n[...]\n```\nWe can work around this problem by running our container with the `--privileged` option\nor add `privileged: true` in your `docker-compose.yml` file.\nSee the [Docker's doc](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) for more info.\n\n\n## Production Servers\n\nGenerating a flamegraph can be quite intense on CPU and memory,\nif we have restricted resources we should generate the flamegraph\nin two pieces.\n\nFirst we can use the `--collect-only` flag to purely capture stacks.\n\n```sh\n0x --collect-only my-app.js  #0x on the server\n```\n\nPress ctrl+c when ready, this will create the usual profile folder,\nholding one file, that `stacks.$PID.out` file.\n\nNow we need to transfer the stacks file from our production server\nto our local dev machine.\n\nLet's say the pid was 7777, we can generate the flamegraph locally with\n\n```sh\n0x --gen stacks.7777.out # 0x locally\n```\n\nNow the hard work is done away from production, ensuring we avoid any service-level problems.\n\nAlternatively if we transfer the entire folder (containing the stacks file),\nwe can pass the folder to `--visualize-only`:\n\n```sh\n0x --visualize-only 7777.flamegraph # create a flamegraph.html in 7777.flamegraph\n```\n\n## Memory Issues\n\nAs your stack grows you may have memory issues with both Node and your browser.\n\nFor Node, run with the following flag\n```\n--stack-size=8024\n```\n\nFor Chrome, run with the following flag\n```\n--js-flags=\"--stack-size 8024\"\n```\n\nWhere 8024 is the megabytes of RAM required to run load stack. Adjust this as needed and confirm you have it to spare.\n\n## Empty Output Stacks\n\nIf you are getting empty output stacks, you may have to run with `sudo`:\n```sh\nsudo 0x my-app.js\n```\n\n## Command nesting\n\nUse `--` to set the `node` executable and/or set node flags\n\n```sh\n0x [0xFlags] -- node [nodeFlags] script.js [scriptFlags]\n```\n\nFor instance\n\n```sh\n0x --open -- node --zero-fill-buffers script.js --my-own-arg\n```\n\n## 0x Flags\n\n### --help | -h\n\nPrint usage info\n\n### --open | -o\n\nOpen the flamegraph on your browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --name\n\nThe name of the HTML file, without the .html extension\nCan be set to - to write HTML to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--name=-`).\n\nIf either this flag or `--output-html-file` is set to `-` \nthen the HTML will go to STDOUT.\n\nDefault: flamegraph\n\n### ---title \n\nSet the title to display in the flamegraph UI.\n\n### --output-dir | -D\n\nSpecify artifact output directory. This can be specified in template\nform with possible variables being `{pid}`, `{timestamp}`, `{name}` \n(based on the `--name` flag) and `{outputDir}`(variables\nmust be specified without whitespace, e.g. `{ pid }` is not supported).\n\nDefault: `{pid}.flamegraph`\n\n### --output-html | -F\n\nSpecify destination of the generated flamegraph HTML file. \nThis can be specified in template form with possible variables \nbeing `{pid}`, `{timestamp}`, `{name}` (based on the `--name` flag) and \n`{outputDir}` (variables must be specified without whitespace, \ne.g. `{ pid }` is not supported). It can also be set to `-` to \nsend the HTML output to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--output-html=-`).\n\nIf either this flag or --name is set to - \nthen the HTML will go to STDOUT.\n\nDefault: `{outputDir}/{name}.html`\n\n\n### --gen | -g\n\nGenerate the flamegraph from a specified stacks.out file.\nThe `--tiers` and `--langs` flags can also be combined with this flag.\nOutputs to STDOUT unless the `--name` flag is set, in which case \noutputs to a file `{name}.html` in the current folder.\n\n### --svg\n\nGenerates an `flamegraph.svg` file in the artifact output directory,\nin addition to the `flamegraph.html` file.\n\n### --prof-viz\n\nExperimental. Create an additional flame graph using\nlog output when from the V8 `--prof`. This will create \nan additional flamegraph named according to the \n`--name` flag, prefixed with `v8-prof-`. If `--name` \nis set to - then flamegraph HTML will be streamed to STDOUT.\n\nDefault: false \n\n### --phase\n\nStage in initialization to begin aggregating stacks. \n\n**Phase 0** visualizes from the very start, this includes bootstrapping \nstacks and loading the application module tree (these can dominate the flamegraph). \n\n**Phase 1** excludes core bootstrapping stacks, except the end of the boostrapping process \nwhere the application module tree is loaded from the entry point. \n\n**Phase 2** excludes all initialization, this renders the most pragmatic flamegraph for most \nuse cases.\n\nDefault: 2\n\n### --delay | -d\n\nMilliseconds. Delay before tracing begins (or before stacks are processed in the Linux case), allows us to ignore\ninitialisation stacks (e.g. module loading).\n\nExample: `0x -d 2000 my-app.js`\n\nDefault: 0\n\n### --langs | -l\n\nColor code the stacks by JS and C\n\nExample: `0x -l my-app.js`\n\nDefault: false\n\n### --tiers | -t\n\nA comma separated list\n\nOverrides langs, Color code frames by type\n\nExamples: `0x -t my-app.js`\n\nDefault: false\n\n### --exclude | -x\n\nExclude tiers or langs, comma seperated list\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExamples:\n`0x -x v8,nativeC,core my-app.js`\n`0x -x c my-app.js`\n\nDefault: v8\n\n### --include\n\nInclude tiers, Overwrites exclude. Really only useful\nfor including the v8 tier (which is excluded by default).\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExample: `0x --include v8 my-app.js`\n\nDefault: false\n\n### --theme\n\nDark or Light theme\n\nOptions: dark | light\n\nExample: `0x --theme light my-app.js`\n\nDefault: dark\n\n### --quiet | -q \n\nLimit output, the only output will be fatal errors or \nthe path to the `flamegraph.html` upon successful generation.\n\nDefault: false\n\n### --silent | -s\n\nSuppress all output, except fatal errors.\n\nDefault: false\n\n### --json-stacks\n\nSave the intermediate JSON tree representation of the stacks.\n\nDefault: false\n\n### --collect-only\n\nDon't generate the flamegraph, only create the stacks\noutput. \n\nDefault: false\n\n### --visualize-only \n\nSupply a path to a profile folder to build or rebuild visualization \nfrom original stacks. Similar to --gen flag, except specify containing folder\ninstead of stacks file.\n\nDefault: ''  \n\n### --log-output \n\nSpecify `stdout` or `stderr` as 0x's output stream.\n\nDefault: stderr\n\n### --trace-info\n\nShow output from dtrace or perf tools\n\nDefault: false\n\n#### --timestamp-profiles\n\nPrefixes the current timestamp to the Profile Folder's name minimizing collisions\nin containerized environments\n\nExample: `1516395452110-3866.flamegraph`\n\n## The Profile Folder\n\nBy default, a profile folder will be created and named after the PID, e.g.\n`3866.flamegraph` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder can contain the following files\n\n* flamegraph.svg - an SVG rendering of the flamegraph\n* stacks.3866.out - the traced stacks (run through [perf-sym](http://npmjs.com/perf-sym) on OS X)\n* flamegraph.html - the interactive flamegraph\n* stacks.3866.json - a JSON tree generated from the stacks, enabled with `--json-stacks`\n* isolate-0x103000600-3866-v8.log - a v8 profiling log file, only included when `--prof-viz` is enabled \n* isolate-0x103000600-3866-v8.log.json - v8 profiling log file processed into JSON using v8s internal tick processor, only included when `--prof-viz` is enabled\n* v8-prof-stacks.77801.out - a generated stacks file based on v8 profiling data, only included when `--prof-viz` is enabled\n* v8-prof-flamegraph.html - an alternartive flamegraph that only shows JS stacks based on v8's profiling data, only included when `--prof-viz` is enabled \n\n\nThe is helpful, because there's other things you can do with\nstacks output. For instance, checkout [cpuprofilify](http://npmjs.com/cpuprofilify) and [traceviewify](http://npmjs.com/traceviewify).\n\n## Example\n\nWant to try it out? Clone this repo, run `npm i -g` and\nfrom the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\nNow try some other options, e.g.\n\n```sh\n0x -t examples/rest-api\n```\n\nBabel (ES6 Transpile) Examples\n-------\n\nSee `./examples/babel` for an example. Note the babel require hook is not currently supported. Notes on using the babel-cli instead can be found in the babel example readme.\n\n## Programmatic API \n\n0x can also be required as a Node module and scripted:\n\n```js\nconst zeroEks = require('0x')\nconst path = require('path')\nzeroEks({\n  argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n  workingDir: __dirname\n})\n```\n\n### `require('0x')(opts, binary, cb)`\n\nThe `cb` option is a error first callback which is invoked after a \nprofile folder has been created and populated.\n\nThe `binary` option can be `false` (to default to the `node` executed resolved\naccording to environment `PATH`) or a string holding the path to any \nnode binary executable.\n\nThe `opts` argument is an object, with the following properties:\n\n#### `argv` (array) – required\n\nPass the arguments that the spawned Node process should receive. \n\n#### `workingDir` (string)\n\nThe base directory where profile folders will be placed. \n\nDefault: process.cwd()\n\n#### `name` (string) \n\nThe name of the flamegraph HTML output file, without the extension.\n\nDefault: flamegraph \n\n#### `open` (boolean)\n\nSee [`--open`](#--open---o)\n\n#### `quiet` (boolean)\n\nSee [`--quiet`](#--quiet---q)\n\n#### `silent` (boolean)\n\nSee [`--silent`](#--silent---s)\n\n#### `jsonStacks` (boolean)\n\nSee [`--json-stacks`](#--json-stacks)\n\n#### `svg` (boolean)\n\nSee [`--svg`](#--svg)\n\n#### `logOutput` (boolean)\n\nSee [`--log-output`](#--log-output)\n\n#### `timestampProfiles` (boolean)\n\nSee [`--timestamp-profiles`](#--timestamp-profiles)\n\n#### `traceInfo` (boolean)\n\nSee [`--trace-info`](#--trace-info)\n\n#### `theme` (string)\n\nSee [`--theme`](#--theme)\n\n#### `include` (string)\n\nSee [`--include`](#--include)\n\n#### `exclude` (string)\n\nSee [`--exlude`](#--exlude---x)\n\n#### `langs` (string)\n\nSee [`--langs`](#--langs---l)\n\n#### `tiers` (string)\n\nSee [`--tiers`](#--tiers---t)\n\n#### `gen` (string)\n\nSee [`--gen`](#--gen---g)\n\n#### `outputDir` (string)\n\nSee [`--output-dir`](#--output-dir---d)\n\n#### `outputHtml` (string)\n\nSee [`--output-html`](#--output-html---f)\n\n#### `title` (string)\n\nSee [`--title`](#--title)\n\n### `profViz`\n\nSee [`--prof-viz`](#--prof-viz)\n\n#### `phase` (number)\n\nSee [`--phase`](#--phase)\n\n#### `mapFrames` (function)\n\nWill override phase. A custom mapping function that receives \nan array of frames and an instance of the Profiler (see `stack-convert.js`).\n\nTakes the form `(frames, profiler) => Array|false`. Return false to remove \nthe whole stack from the output, or return a modified array to change \nthe output. \n\n#### `delay` (number)\n\nSee [`--delay`](#--delay---d)\n\n#### `visualizeOnly` (string)\n\nSee [`--visualize-only`](#--visualize-only)\n\n#### `collectOnly` (boolean)\n\nSee [`--collect-only`](#--collect-only)\n\n### `require('0x').stacksToFlamegraph(opts, binary, cb)`\n\nThis method will take a captured stacks input file \nand generate a flamegraph HTML file.\n\nIt takes the same arguments as the main function, but the \n`gen` argument (which should hold a path to the source \nstacks file) and the `name` argument (which should specify a\ndestination out file) is required. \n\n## v2\n\nIf you still need support for Node v4, use [0x v2.x.x](https://github.com/davidmarkclements/0x/tree/v2)\n\n## v1\n\nDon't use v1, it was an experiment and is  non functional\nShould have be v0...\n\n## Contributions\n\nYes please!\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\n0x is generously sponsored by [nearForm](http://nearform.com)\n\nThis tool is essentially a mashup from various info and code\nsources, and therefore would have taken much longer without\nthe following people and their Open Source/Info Sharing efforts\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT and Apache (depending on the code, see LICENSE.md)\n","readmeFilename":"readme.md","gitHead":"f2d8d249daad83f6578c8fd50a25909173c91380","_id":"0x@3.3.0-rc4","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-9SsI5rV2ugd+9M5LlxMDliLzL0VI6Y5iyA51qleaklQsqCDss7EjUEBth56gi55/TazGOZs63uE4zaaZvwl+OA==","shasum":"be62487160b395a197c566e351d700d13074c8ed","tarball":"https://registry.npmjs.org/0x/-/0x-3.3.0-rc4.tgz","fileCount":18,"unpackedSize":90855},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_3.3.0-rc4_1518050912041_0.7008860423349823"},"_hasShrinkwrap":false},"3.3.0-rc5":{"name":"0x","version":"3.3.0-rc5","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"readme":"# <img alt=0x src=assets/0x-logo.png width=350>\n\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process in a single command, on both Linux *and* OS X. Whilst this seems trivial... it's not. Well it wasn't before `0x`.\n\n## Demo\n\n![](assets/demo.gif)\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/>\n\n## Support\n\n* Node v6+\n\n* OS\n  * Linux\n    * requires [perf](https://en.wikipedia.org/wiki/Perf_(Linux))\n  * OS X\n    * Up-to-date XCode\n  * SmartOS\n  * *not* Windows (PR's welcome)\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Basic Usage\n\nPrefix the usual command for starting a process with 0x:\n\n```sh\n0x my-app.js\n```\n\nYou can make the flamegraph automatically open in your browser with:\n\n```sh\n0x -o my-app.js\n```\n\nUsing a custom Node.js executable:\n\n```sh\n0x -- /path/to/node my-app.js\n```\n\nPassing custom arguments to node:\n\n```sh\n0x -- node --trace-opt --trace-deopt my-app.js\n```\n\n## Generating\n\nOnce we're ready to generate a flamegraph we send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder (`<pid>.flamegraph`), containing `flamegraph.html`\n\n\n## Docker\nDue to security reasons Docker containers tend to result in the following error:\n\n```bash\nCannot read kernel map\nperf_event_open(..., PERF_FLAG_FD_CLOEXEC) failed with unexpected error 1 (Operation not permitted)\nperf_event_open(..., 0) failed unexpectedly with error 1 (Operation not permitted)\nError:\nYou may not have permission to collect stats.\n[...]\n```\nWe can work around this problem by running our container with the `--privileged` option\nor add `privileged: true` in your `docker-compose.yml` file.\nSee the [Docker's doc](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) for more info.\n\n\n## Production Servers\n\nGenerating a flamegraph can be quite intense on CPU and memory,\nif we have restricted resources we should generate the flamegraph\nin two pieces.\n\nFirst we can use the `--collect-only` flag to purely capture stacks.\n\n```sh\n0x --collect-only my-app.js  #0x on the server\n```\n\nPress ctrl+c when ready, this will create the usual profile folder,\nholding one file, that `stacks.$PID.out` file.\n\nNow we need to transfer the stacks file from our production server\nto our local dev machine.\n\nLet's say the pid was 7777, we can generate the flamegraph locally with\n\n```sh\n0x --gen stacks.7777.out # 0x locally\n```\n\nNow the hard work is done away from production, ensuring we avoid any service-level problems.\n\nAlternatively if we transfer the entire folder (containing the stacks file),\nwe can pass the folder to `--visualize-only`:\n\n```sh\n0x --visualize-only 7777.flamegraph # create a flamegraph.html in 7777.flamegraph\n```\n\n## Memory Issues\n\nAs your stack grows you may have memory issues with both Node and your browser.\n\nFor Node, run with the following flag\n```\n--stack-size=8024\n```\n\nFor Chrome, run with the following flag\n```\n--js-flags=\"--stack-size 8024\"\n```\n\nWhere 8024 is the megabytes of RAM required to run load stack. Adjust this as needed and confirm you have it to spare.\n\n## Empty Output Stacks\n\nIf you are getting empty output stacks, you may have to run with `sudo`:\n```sh\nsudo 0x my-app.js\n```\n\n## Command nesting\n\nUse `--` to set the `node` executable and/or set node flags\n\n```sh\n0x [0xFlags] -- node [nodeFlags] script.js [scriptFlags]\n```\n\nFor instance\n\n```sh\n0x --open -- node --zero-fill-buffers script.js --my-own-arg\n```\n\n## 0x Flags\n\n### --help | -h\n\nPrint usage info\n\n### --open | -o\n\nOpen the flamegraph on your browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --name\n\nThe name of the HTML file, without the .html extension\nCan be set to - to write HTML to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--name=-`).\n\nIf either this flag or `--output-html-file` is set to `-` \nthen the HTML will go to STDOUT.\n\nDefault: flamegraph\n\n### ---title \n\nSet the title to display in the flamegraph UI.\n\n### --output-dir | -D\n\nSpecify artifact output directory. This can be specified in template\nform with possible variables being `{pid}`, `{timestamp}`, `{name}` \n(based on the `--name` flag) and `{outputDir}`(variables\nmust be specified without whitespace, e.g. `{ pid }` is not supported).\n\nDefault: `{pid}.flamegraph`\n\n### --output-html | -F\n\nSpecify destination of the generated flamegraph HTML file. \nThis can be specified in template form with possible variables \nbeing `{pid}`, `{timestamp}`, `{name}` (based on the `--name` flag) and \n`{outputDir}` (variables must be specified without whitespace, \ne.g. `{ pid }` is not supported). It can also be set to `-` to \nsend the HTML output to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--output-html=-`).\n\nIf either this flag or --name is set to - \nthen the HTML will go to STDOUT.\n\nDefault: `{outputDir}/{name}.html`\n\n\n### --gen | -g\n\nGenerate the flamegraph from a specified stacks.out file.\nThe `--tiers` and `--langs` flags can also be combined with this flag.\nOutputs to STDOUT unless the `--name` flag is set, in which case \noutputs to a file `{name}.html` in the current folder.\n\n### --svg\n\nGenerates an `flamegraph.svg` file in the artifact output directory,\nin addition to the `flamegraph.html` file.\n\n### --prof-viz\n\nExperimental. Create an additional flame graph using\nlog output when from the V8 `--prof`. This will create \nan additional flamegraph named according to the \n`--name` flag, prefixed with `v8-prof-`. If `--name` \nis set to - then flamegraph HTML will be streamed to STDOUT.\n\nDefault: false \n\n### --phase\n\nStage in initialization to begin aggregating stacks. \n\n**Phase 0** visualizes from the very start, this includes bootstrapping \nstacks and loading the application module tree (these can dominate the flamegraph). \n\n**Phase 1** excludes core bootstrapping stacks, except the end of the boostrapping process \nwhere the application module tree is loaded from the entry point. \n\n**Phase 2** excludes all initialization, this renders the most pragmatic flamegraph for most \nuse cases.\n\nDefault: 2\n\n### --delay | -d\n\nMilliseconds. Delay before tracing begins (or before stacks are processed in the Linux case), allows us to ignore\ninitialisation stacks (e.g. module loading).\n\nExample: `0x -d 2000 my-app.js`\n\nDefault: 0\n\n### --langs | -l\n\nColor code the stacks by JS and C\n\nExample: `0x -l my-app.js`\n\nDefault: false\n\n### --tiers | -t\n\nA comma separated list\n\nOverrides langs, Color code frames by type\n\nExamples: `0x -t my-app.js`\n\nDefault: false\n\n### --exclude | -x\n\nExclude tiers or langs, comma seperated list\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExamples:\n`0x -x v8,nativeC,core my-app.js`\n`0x -x c my-app.js`\n\nDefault: v8\n\n### --include\n\nInclude tiers, Overwrites exclude. Really only useful\nfor including the v8 tier (which is excluded by default).\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExample: `0x --include v8 my-app.js`\n\nDefault: false\n\n### --theme\n\nDark or Light theme\n\nOptions: dark | light\n\nExample: `0x --theme light my-app.js`\n\nDefault: dark\n\n### --quiet | -q \n\nLimit output, the only output will be fatal errors or \nthe path to the `flamegraph.html` upon successful generation.\n\nDefault: false\n\n### --silent | -s\n\nSuppress all output, except fatal errors.\n\nDefault: false\n\n### --json-stacks\n\nSave the intermediate JSON tree representation of the stacks.\n\nDefault: false\n\n### --collect-only\n\nDon't generate the flamegraph, only create the stacks\noutput. \n\nDefault: false\n\n### --visualize-only \n\nSupply a path to a profile folder to build or rebuild visualization \nfrom original stacks. Similar to --gen flag, except specify containing folder\ninstead of stacks file.\n\nDefault: ''  \n\n### --log-output \n\nSpecify `stdout` or `stderr` as 0x's output stream.\n\nDefault: stderr\n\n### --trace-info\n\nShow output from dtrace or perf tools\n\nDefault: false\n\n#### --timestamp-profiles\n\nPrefixes the current timestamp to the Profile Folder's name minimizing collisions\nin containerized environments\n\nExample: `1516395452110-3866.flamegraph`\n\n## The Profile Folder\n\nBy default, a profile folder will be created and named after the PID, e.g.\n`3866.flamegraph` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder can contain the following files\n\n* flamegraph.svg - an SVG rendering of the flamegraph\n* stacks.3866.out - the traced stacks (run through [perf-sym](http://npmjs.com/perf-sym) on OS X)\n* flamegraph.html - the interactive flamegraph\n* stacks.3866.json - a JSON tree generated from the stacks, enabled with `--json-stacks`\n* isolate-0x103000600-3866-v8.log - a v8 profiling log file, only included when `--prof-viz` is enabled \n* isolate-0x103000600-3866-v8.log.json - v8 profiling log file processed into JSON using v8s internal tick processor, only included when `--prof-viz` is enabled\n* v8-prof-stacks.77801.out - a generated stacks file based on v8 profiling data, only included when `--prof-viz` is enabled\n* v8-prof-flamegraph.html - an alternartive flamegraph that only shows JS stacks based on v8's profiling data, only included when `--prof-viz` is enabled \n\n\nThe is helpful, because there's other things you can do with\nstacks output. For instance, checkout [cpuprofilify](http://npmjs.com/cpuprofilify) and [traceviewify](http://npmjs.com/traceviewify).\n\n## Example\n\nWant to try it out? Clone this repo, run `npm i -g` and\nfrom the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\nNow try some other options, e.g.\n\n```sh\n0x -t examples/rest-api\n```\n\nBabel (ES6 Transpile) Examples\n-------\n\nSee `./examples/babel` for an example. Note the babel require hook is not currently supported. Notes on using the babel-cli instead can be found in the babel example readme.\n\n## Programmatic API \n\n0x can also be required as a Node module and scripted:\n\n```js\nconst zeroEks = require('0x')\nconst path = require('path')\nzeroEks({\n  argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n  workingDir: __dirname\n})\n```\n\n### `require('0x')(opts, binary, cb)`\n\nThe `cb` option is a error first callback which is invoked after a \nprofile folder has been created and populated.\n\nThe `binary` option can be `false` (to default to the `node` executed resolved\naccording to environment `PATH`) or a string holding the path to any \nnode binary executable.\n\nThe `opts` argument is an object, with the following properties:\n\n#### `argv` (array) – required\n\nPass the arguments that the spawned Node process should receive. \n\n#### `workingDir` (string)\n\nThe base directory where profile folders will be placed. \n\nDefault: process.cwd()\n\n#### `name` (string) \n\nThe name of the flamegraph HTML output file, without the extension.\n\nDefault: flamegraph \n\n#### `open` (boolean)\n\nSee [`--open`](#--open---o)\n\n#### `quiet` (boolean)\n\nSee [`--quiet`](#--quiet---q)\n\n#### `silent` (boolean)\n\nSee [`--silent`](#--silent---s)\n\n#### `jsonStacks` (boolean)\n\nSee [`--json-stacks`](#--json-stacks)\n\n#### `svg` (boolean)\n\nSee [`--svg`](#--svg)\n\n#### `logOutput` (boolean)\n\nSee [`--log-output`](#--log-output)\n\n#### `timestampProfiles` (boolean)\n\nSee [`--timestamp-profiles`](#--timestamp-profiles)\n\n#### `traceInfo` (boolean)\n\nSee [`--trace-info`](#--trace-info)\n\n#### `theme` (string)\n\nSee [`--theme`](#--theme)\n\n#### `include` (string)\n\nSee [`--include`](#--include)\n\n#### `exclude` (string)\n\nSee [`--exlude`](#--exlude---x)\n\n#### `langs` (string)\n\nSee [`--langs`](#--langs---l)\n\n#### `tiers` (string)\n\nSee [`--tiers`](#--tiers---t)\n\n#### `gen` (string)\n\nSee [`--gen`](#--gen---g)\n\n#### `outputDir` (string)\n\nSee [`--output-dir`](#--output-dir---d)\n\n#### `outputHtml` (string)\n\nSee [`--output-html`](#--output-html---f)\n\n#### `title` (string)\n\nSee [`--title`](#--title)\n\n### `profViz`\n\nSee [`--prof-viz`](#--prof-viz)\n\n#### `phase` (number)\n\nSee [`--phase`](#--phase)\n\n#### `mapFrames` (function)\n\nWill override phase. A custom mapping function that receives \nan array of frames and an instance of the Profiler (see `stack-convert.js`).\n\nTakes the form `(frames, profiler) => Array|false`. Return false to remove \nthe whole stack from the output, or return a modified array to change \nthe output. \n\n#### `delay` (number)\n\nSee [`--delay`](#--delay---d)\n\n#### `visualizeOnly` (string)\n\nSee [`--visualize-only`](#--visualize-only)\n\n#### `collectOnly` (boolean)\n\nSee [`--collect-only`](#--collect-only)\n\n### `require('0x').stacksToFlamegraph(opts, binary, cb)`\n\nThis method will take a captured stacks input file \nand generate a flamegraph HTML file.\n\nIt takes the same arguments as the main function, but the \n`gen` argument (which should hold a path to the source \nstacks file) and the `name` argument (which should specify a\ndestination out file) is required. \n\n## v2\n\nIf you still need support for Node v4, use [0x v2.x.x](https://github.com/davidmarkclements/0x/tree/v2)\n\n## v1\n\nDon't use v1, it was an experiment and is  non functional\nShould have be v0...\n\n## Contributions\n\nYes please!\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\n0x is generously sponsored by [nearForm](http://nearform.com)\n\nThis tool is essentially a mashup from various info and code\nsources, and therefore would have taken much longer without\nthe following people and their Open Source/Info Sharing efforts\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT and Apache (depending on the code, see LICENSE.md)\n","readmeFilename":"readme.md","gitHead":"662b7d199ddf3e7052399126cb9c3fc0723d2637","_id":"0x@3.3.0-rc5","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-/jxnfZ5YNJxD8gGb4pCG++9W8DARE22zbHlNH02CVPZ0kKINTPQk3e5d3PCQJQ6PrXidOYE64fO1BAoZidKDuA==","shasum":"f9abeae8416badee392e7195bae0babdffba962b","tarball":"https://registry.npmjs.org/0x/-/0x-3.3.0-rc5.tgz","fileCount":18,"unpackedSize":90857},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_3.3.0-rc5_1518051537614_0.8418350317077883"},"_hasShrinkwrap":false},"3.3.0":{"name":"0x","version":"3.3.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"8355e976758812a2ae2751ebfeeaf465cab26871","_id":"0x@3.3.0","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-lX3SC0ZEsnwaHV1B+LhE2hAHruBsYFgDuFVchnB39BEti1BZpYWs7J0sokOfMsOquHi+uwCECkcCLVHupRESUg==","shasum":"8855cf2466570afe110ac58ac0ac17ba7d1e4078","tarball":"https://registry.npmjs.org/0x/-/0x-3.3.0.tgz","fileCount":18,"unpackedSize":91251},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_3.3.0_1518144900044_0.6177914752757134"},"_hasShrinkwrap":false},"3.4.0":{"name":"0x","version":"3.4.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"906bdb180dd220dc70aaafb9c7fbad41680bb1cc","_id":"0x@3.4.0","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-6DrjqNLua5QT8/+Eekyxryws8rG9bDwp/qY1KnyYuhA3ylFc+T1ZjoQCRMfvcg2ZoXQR943V804EGUYCnV+whA==","shasum":"276f458004fafde41e8291d70cdb3d7e670e6dd1","tarball":"https://registry.npmjs.org/0x/-/0x-3.4.0.tgz","fileCount":19,"unpackedSize":95155},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_3.4.0_1518454638765_0.3079162714238701"},"_hasShrinkwrap":false},"3.4.1":{"name":"0x","version":"3.4.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","d3-fg":"^1.0.0","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","stacks-to-json-stack-tree":"^1.0.2","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"f59e790fa32ced057ea037b048c5710b20fbcac0","_id":"0x@3.4.1","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-u97iPe9Q+NsNObooTZsUpaqseixso301YypT1kcV4phkXuOchVSCbqwNarAhKcOrplWtwyHut4rPC+hwLY/LLA==","shasum":"1c9c7b71e893cf7aea615ed6e8c512528b2e5241","tarball":"https://registry.npmjs.org/0x/-/0x-3.4.1.tgz","fileCount":17,"unpackedSize":68973},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_3.4.1_1519684140432_0.6435242605287717"},"_hasShrinkwrap":false},"3.4.2":{"name":"0x","version":"3.4.2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","d3-fg":"^1.0.0","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^8.0.4","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","stacks-to-json-stack-tree":"^1.0.2","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"gitHead":"23fa8e0ae914a93361452f92a257ad51f4e4fa0a","_id":"0x@3.4.2","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-jAtxe/YqOrDlkqZJ5ncRyykBCqrFtHWzUqjJquuA++OsuhPmO9mOHcTIQhkEu77urFnNAh0CSeYrWFNcukCdqg==","shasum":"2fac1e14134f158d6cfee38745a4b41618872e94","tarball":"https://registry.npmjs.org/0x/-/0x-3.4.2.tgz","fileCount":17,"unpackedSize":69086},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_3.4.2_1519684247594_0.12068675603727463"},"_hasShrinkwrap":false},"4.0.0-rc1":{"name":"0x","version":"4.0.0-rc1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^4.1.2","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"readme":"# <img alt=0x src=assets/0x-logo.png width=350>\n\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process in a single command, on both Linux *and* OS X. Whilst this seems trivial... it's not. Well it wasn't before `0x`.\n\n## Demo\n\n![](assets/demo.gif)\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/>\n\n## Support\n\n* Node v6+\n\n* OS\n  * Linux\n    * requires [perf](https://en.wikipedia.org/wiki/Perf_(Linux))\n  * OS X\n    * Up-to-date XCode\n  * SmartOS\n  * *not* Windows (PR's welcome)\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Basic Usage\n\nPrefix the usual command for starting a process with 0x:\n\n```sh\n0x my-app.js\n```\n\nYou can make the flamegraph automatically open in your browser with:\n\n```sh\n0x -o my-app.js\n```\n\nUsing a custom Node.js executable:\n\n```sh\n0x -- /path/to/node my-app.js\n```\n\nPassing custom arguments to node:\n\n```sh\n0x -- node --trace-opt --trace-deopt my-app.js\n```\n\n## Generating\n\nOnce we're ready to generate a flamegraph we send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder (`<pid>.0x`), containing `flamegraph.html`\n\n\n## Docker\nDue to security reasons Docker containers tend to result in the following error:\n\n```bash\nCannot read kernel map\nperf_event_open(..., PERF_FLAG_FD_CLOEXEC) failed with unexpected error 1 (Operation not permitted)\nperf_event_open(..., 0) failed unexpectedly with error 1 (Operation not permitted)\nError:\nYou may not have permission to collect stats.\n[...]\n```\nWe can work around this problem by running our container with the `--privileged` option\nor add `privileged: true` in your `docker-compose.yml` file.\nSee the [Docker's doc](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) for more info.\n\n\n## Production Servers\n\nGenerating a flamegraph can be quite intense on CPU and memory,\nif we have restricted resources we should generate the flamegraph\nin two pieces.\n\nFirst we can use the `--collect-only` flag to purely capture stacks.\n\n```sh\n0x --collect-only my-app.js  #0x on the server\n```\n\nPress ctrl+c when ready, this will create the usual profile folder,\nholding one file, that `stacks.$PID.out` file.\n\nNow we need to transfer the stacks file from our production server\nto our local dev machine.\n\nLet's say the pid was 7777, we can generate the flamegraph locally with\n\n```sh\n0x --gen stacks.7777.out # 0x locally\n```\n\nNow the hard work is done away from production, ensuring we avoid any service-level problems.\n\nAlternatively if we transfer the entire folder (containing the stacks file),\nwe can pass the folder to `--visualize-only`:\n\n```sh\n0x --visualize-only 7777.0x # create a flamegraph.html in 7777.0x\n```\n\n## Memory Issues\n\nAs your stack grows you may have memory issues with both Node and your browser.\n\nFor Node, run with the following flag\n```\n--stack-size=8024\n```\n\nFor Chrome, run with the following flag\n```\n--js-flags=\"--stack-size 8024\"\n```\n\nWhere 8024 is the megabytes of RAM required to run load stack. Adjust this as needed and confirm you have it to spare.\n\n## Empty Output Stacks\n\nIf you are getting empty output stacks, you may have to run with `sudo`:\n```sh\nsudo 0x my-app.js\n```\n\n## Command nesting\n\nUse `--` to set the `node` executable and/or set node flags\n\n```sh\n0x [0xFlags] -- node [nodeFlags] script.js [scriptFlags]\n```\n\nFor instance\n\n```sh\n0x --open -- node --zero-fill-buffers script.js --my-own-arg\n```\n\n## 0x Flags\n\n### --help | -h\n\nPrint usage info\n\n### --open | -o\n\nOpen the flamegraph on your browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --name\n\nThe name of the HTML file, without the .html extension\nCan be set to - to write HTML to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--name=-`).\n\nIf either this flag or `--output-html-file` is set to `-` \nthen the HTML will go to STDOUT.\n\nDefault: flamegraph\n\n### ---title \n\nSet the title to display in the flamegraph UI.\n\n### --output-dir | -D\n\nSpecify artifact output directory. This can be specified in template\nform with possible variables being `{pid}`, `{timestamp}`, `{name}` \n(based on the `--name` flag) and `{outputDir}`(variables\nmust be specified without whitespace, e.g. `{ pid }` is not supported).\n\nDefault: `{pid}.0x`\n\n### --output-html | -F\n\nSpecify destination of the generated flamegraph HTML file. \nThis can be specified in template form with possible variables \nbeing `{pid}`, `{timestamp}`, `{name}` (based on the `--name` flag) and \n`{outputDir}` (variables must be specified without whitespace, \ne.g. `{ pid }` is not supported). It can also be set to `-` to \nsend the HTML output to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--output-html=-`).\n\nIf either this flag or --name is set to - \nthen the HTML will go to STDOUT.\n\nDefault: `{outputDir}/{name}.html`\n\n\n### --gen | -g\n\nGenerate the flamegraph from a specified stacks.out file.\nThe `--tiers` and `--langs` flags can also be combined with this flag.\nOutputs to STDOUT unless the `--name` flag is set, in which case \noutputs to a file `{name}.html` in the current folder.\n\n### --kernel-tracing\n\nUse an OS kernel tracing tool (perf on Linux or \ndtrace on macOs and Solaris). This will capture \nnative stack frames (C++ modules and Libuv I/O), \nbut may result in missing stacks on Node 8.\n\nThis is due to the version of V8 used in the Node 8+\nwhich does not expose unoptimized call frames to \nkernel tracing tools (hence these functions will not\nappear in the flamegraph). It's possible to cause\nall functions to appear in the flamegraph with the `--kernel-tracing`\nflag when the `--always-opt` flag is passed to the `node` binary \n(e.g. `0x --kernel-tracing node --always-opt app.js`). This can be\nuseful, but it's important to bear in mind this will change\nthe performance characterstics of the process so may lead to false\npositives when it comes to identifying bottlenecks.\n\nDefault: false \n\n### --phase\n\nStage in initialization to begin aggregating stacks. \n\n**Phase 0** visualizes from the very start, this includes bootstrapping \nstacks and loading the application module tree (these can dominate the flamegraph). \n\n**Phase 1** excludes core bootstrapping stacks, except the end of the boostrapping process \nwhere the application module tree is loaded from the entry point. \n\n**Phase 2** excludes all initialization, this renders the most pragmatic flamegraph for most \nuse cases.\n\nDefault: 2\n\n### --delay | -d\n\nMilliseconds. Delay before tracing begins (or before stacks are processed in the Linux case), allows us to ignore\ninitialisation stacks (e.g. module loading).\n\nExample: `0x -d 2000 my-app.js`\n\nDefault: 0\n\n### --langs | -l\n\nColor code the stacks by JS and C\n\nExample: `0x -l my-app.js`\n\nDefault: false\n\n### --tiers | -t\n\nA comma separated list\n\nOverrides langs, Color code frames by type\n\nExamples: `0x -t my-app.js`\n\nDefault: false\n\n### --exclude | -x\n\nExclude tiers or langs, comma seperated list\n\nOptions: v8, regexp, cpp, native, core, deps, app, js, c\n\nExamples:\n`0x -x v8,cpp,core my-app.js`\n`0x -x c my-app.js`\n\nDefault: v8\n\n### --include\n\nInclude tiers, Overwrites exclude. Really only useful\nfor including the v8 tier (which is excluded by default).\n\nOptions: v8, regexp, cpp, native, core, deps, app, js, c\n\nExample: `0x --include v8 my-app.js`\n\nDefault: false\n\n### --theme\n\nDark or Light theme\n\nOptions: dark | light\n\nExample: `0x --theme light my-app.js`\n\nDefault: dark\n\n### --quiet | -q \n\nLimit output, the only output will be fatal errors or \nthe path to the `flamegraph.html` upon successful generation.\n\nDefault: false\n\n### --silent | -s\n\nSuppress all output, except fatal errors.\n\nDefault: false\n\n### --json-stacks\n\nSave the intermediate JSON tree representation of the stacks.\n\nDefault: false\n\n### --collect-only\n\nDon't generate the flamegraph, only create the stacks\noutput. \n\nDefault: false\n\n### --visualize-only \n\nSupply a path to a profile folder to build or rebuild visualization \nfrom original stacks. Similar to --gen flag, except specify containing folder\ninstead of stacks file.\n\nDefault: ''  \n\n### --logging-output \n\nSpecify `stdout` or `stderr` as 0x's output stream.\n\nDefault: stderr\n\n### --trace-info\n\nShow output from dtrace or perf tools\n\nDefault: false\n\n#### --timestamp-profiles\n\nPrefixes the current timestamp to the Profile Folder's name minimizing collisions\nin containerized environments\n\nExample: `1516395452110-3866.0x`\n\n## The Profile Folder\n\nBy default, a profile folder will be created and named after the PID, e.g.\n`3866.0x` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder can contain the following files\n\n\n* flamegraph.html - the interactive flamegraph\n* isolate-0x103000600-3866-v8.log - a v8 profiling log file\n* stacks.3866.json - with `--json-stacks` flag: a JSON tree representing the captured stacks\n* stacks.3866.out - in `--kernel-tracing` mode: the traced stacks \n\nThe is helpful, because there's other things you can do with\nstacks output. For instance, checkout [cpuprofilify](http://npmjs.com/cpuprofilify) and [traceviewify](http://npmjs.com/traceviewify).\n\n## Example\n\nWant to try it out? Clone this repo, run `npm i -g` and\nfrom the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\nNow try some other options, e.g.\n\n```sh\n0x -t examples/rest-api\n```\n\nBabel (ES6 Transpile) Examples\n-------\n\nSee `./examples/babel` for an example. Note the babel require hook is not currently supported. Notes on using the babel-cli instead can be found in the babel example readme.\n\n## Programmatic API \n\n0x can also be required as a Node module and scripted:\n\n```js\nconst zeroEks = require('0x')\nconst path = require('path')\nzeroEks({\n  argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n  workingDir: __dirname\n})\n```\n\n### `require('0x')(opts, binary, cb)`\n\nThe `cb` option is a error first callback which is invoked after a \nprofile folder has been created and populated.\n\nThe `binary` option can be `false` (to default to the `node` executed resolved\naccording to environment `PATH`) or a string holding the path to any \nnode binary executable.\n\nThe `opts` argument is an object, with the following properties:\n\n#### `argv` (array) – required\n\nPass the arguments that the spawned Node process should receive. \n\n#### `workingDir` (string)\n\nThe base directory where profile folders will be placed. \n\nDefault: process.cwd()\n\n#### `name` (string) \n\nThe name of the flamegraph HTML output file, without the extension.\n\nDefault: flamegraph \n\n#### `open` (boolean)\n\nSee [`--open`](#--open---o)\n\n#### `quiet` (boolean)\n\nSee [`--quiet`](#--quiet---q)\n\n#### `silent` (boolean)\n\nSee [`--silent`](#--silent---s)\n\n#### `jsonStacks` (boolean)\n\nSee [`--json-stacks`](#--json-stacks)\n\n#### `loggingOutput` (boolean)\n\nSee [`--logging-output`](#--logging-output)\n\n#### `timestampProfiles` (boolean)\n\nSee [`--timestamp-profiles`](#--timestamp-profiles)\n\n#### `traceInfo` (boolean)\n\nSee [`--trace-info`](#--trace-info)\n\n#### `theme` (string)\n\nSee [`--theme`](#--theme)\n\n#### `include` (string)\n\nSee [`--include`](#--include)\n\n#### `exclude` (string)\n\nSee [`--exlude`](#--exlude---x)\n\n#### `langs` (string)\n\nSee [`--langs`](#--langs---l)\n\n#### `tiers` (string)\n\nSee [`--tiers`](#--tiers---t)\n\n#### `gen` (string)\n\nSee [`--gen`](#--gen---g)\n\n#### `outputDir` (string)\n\nSee [`--output-dir`](#--output-dir---d)\n\n#### `outputHtml` (string)\n\nSee [`--output-html`](#--output-html---f)\n\n#### `title` (string)\n\nSee [`--title`](#--title)\n\n### `kernelTracing`\n\nSee [`--kernel-tracing`](#--kernel-tracing)\n\n#### `phase` (number)\n\nSee [`--phase`](#--phase)\n\n#### `mapFrames` (function)\n\nWill override phase. A custom mapping function that receives \nan array of frames and an instance of the Profiler (see [stacks-to-json-stack-tree](http://github.com/davidmarkclements/stacks-to-json-stack-tree)).\n\nTakes the form `(frames, profiler) => Array|false`. Return false to remove \nthe whole stack from the output, or return a modified array to change \nthe output. \n\n#### `delay` (number)\n\nSee [`--delay`](#--delay---d)\n\n#### `visualizeOnly` (string)\n\nSee [`--visualize-only`](#--visualize-only)\n\n#### `collectOnly` (boolean)\n\nSee [`--collect-only`](#--collect-only)\n\n### `require('0x').stacksToFlamegraph(opts, binary, cb)`\n\nThis method will take a captured stacks input file \nand generate a flamegraph HTML file.\n\nIt takes the same arguments as the main function, but the \n`gen` argument (which should hold a path to the source \nstacks file) and the `name` argument (which should specify a\ndestination out file) is required. \n\n## v2\n\nIf you still need support for Node v4, use [0x v2.x.x](https://github.com/davidmarkclements/0x/tree/v2)\n\n## v1\n\nDon't use v1, it was an experiment and is  non functional\nShould have be v0...\n\n## Contributions\n\nYes please!\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\nSponsored by [nearForm](http://nearform.com)\n\nThis tool is inspired from various info and code sources\nand would have taken much longer without the following people and \ntheir Open Source/Info Sharing efforts:\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT\n","readmeFilename":"readme.md","gitHead":"1277744cba95685be82c50f00dc1a9679a4fc316","_id":"0x@4.0.0-rc1","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-afsWf4nZgJWBPH1Yg6egHT479ry+vNdzGrqo7fQwikGA0wYuyT6502cNPa6pR9J91TQmeohIA84I7h6kwBkeYg==","shasum":"6795be470426b69d555ab2b284fbf9600fca86db","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.0-rc1.tgz","fileCount":35,"unpackedSize":70785},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.0-rc1_1520987403738_0.6037245139455027"},"_hasShrinkwrap":false},"4.0.0-rc2":{"name":"0x","version":"4.0.0-rc2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^4.1.2","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"readme":"# <img alt=0x src=assets/0x-logo.png width=350>\n\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process in a single command, on both Linux *and* OS X. Whilst this seems trivial... it's not. Well it wasn't before `0x`.\n\n## Demo\n\n![](assets/demo.gif)\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/>\n\n## Support\n\n* Node v6+\n\n* OS\n  * Linux\n    * requires [perf](https://en.wikipedia.org/wiki/Perf_(Linux))\n  * OS X\n    * Up-to-date XCode\n  * SmartOS\n  * *not* Windows (PR's welcome)\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Basic Usage\n\nPrefix the usual command for starting a process with 0x:\n\n```sh\n0x my-app.js\n```\n\nYou can make the flamegraph automatically open in your browser with:\n\n```sh\n0x -o my-app.js\n```\n\nUsing a custom Node.js executable:\n\n```sh\n0x -- /path/to/node my-app.js\n```\n\nPassing custom arguments to node:\n\n```sh\n0x -- node --trace-opt --trace-deopt my-app.js\n```\n\n## Generating\n\nOnce we're ready to generate a flamegraph we send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder (`<pid>.0x`), containing `flamegraph.html`\n\n\n## Docker\nDue to security reasons Docker containers tend to result in the following error:\n\n```bash\nCannot read kernel map\nperf_event_open(..., PERF_FLAG_FD_CLOEXEC) failed with unexpected error 1 (Operation not permitted)\nperf_event_open(..., 0) failed unexpectedly with error 1 (Operation not permitted)\nError:\nYou may not have permission to collect stats.\n[...]\n```\nWe can work around this problem by running our container with the `--privileged` option\nor add `privileged: true` in your `docker-compose.yml` file.\nSee the [Docker's doc](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) for more info.\n\n\n## Production Servers\n\nGenerating a flamegraph can be quite intense on CPU and memory,\nif we have restricted resources we should generate the flamegraph\nin two pieces.\n\nFirst we can use the `--collect-only` flag to purely capture stacks.\n\n```sh\n0x --collect-only my-app.js  #0x on the server\n```\n\nPress ctrl+c when ready, this will create the usual profile folder,\nholding one file, that `stacks.$PID.out` file.\n\nNow we need to transfer the stacks file from our production server\nto our local dev machine.\n\nLet's say the pid was 7777, we can generate the flamegraph locally with\n\n```sh\n0x --gen stacks.7777.out # 0x locally\n```\n\nNow the hard work is done away from production, ensuring we avoid any service-level problems.\n\nAlternatively if we transfer the entire folder (containing the stacks file),\nwe can pass the folder to `--visualize-only`:\n\n```sh\n0x --visualize-only 7777.0x # create a flamegraph.html in 7777.0x\n```\n\n## Memory Issues\n\nAs your stack grows you may have memory issues with both Node and your browser.\n\nFor Node, run with the following flag\n```\n--stack-size=8024\n```\n\nFor Chrome, run with the following flag\n```\n--js-flags=\"--stack-size 8024\"\n```\n\nWhere 8024 is the megabytes of RAM required to run load stack. Adjust this as needed and confirm you have it to spare.\n\n## Empty Output Stacks\n\nIf you are getting empty output stacks, you may have to run with `sudo`:\n```sh\nsudo 0x my-app.js\n```\n\n## Command nesting\n\nUse `--` to set the `node` executable and/or set node flags\n\n```sh\n0x [0xFlags] -- node [nodeFlags] script.js [scriptFlags]\n```\n\nFor instance\n\n```sh\n0x --open -- node --zero-fill-buffers script.js --my-own-arg\n```\n\n## 0x Flags\n\n### --help | -h\n\nPrint usage info\n\n### --open | -o\n\nOpen the flamegraph on your browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --name\n\nThe name of the HTML file, without the .html extension\nCan be set to - to write HTML to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--name=-`).\n\nIf either this flag or `--output-html-file` is set to `-` \nthen the HTML will go to STDOUT.\n\nDefault: flamegraph\n\n### ---title \n\nSet the title to display in the flamegraph UI.\n\n### --output-dir | -D\n\nSpecify artifact output directory. This can be specified in template\nform with possible variables being `{pid}`, `{timestamp}`, `{name}` \n(based on the `--name` flag) and `{outputDir}`(variables\nmust be specified without whitespace, e.g. `{ pid }` is not supported).\n\nDefault: `{pid}.0x`\n\n### --output-html | -F\n\nSpecify destination of the generated flamegraph HTML file. \nThis can be specified in template form with possible variables \nbeing `{pid}`, `{timestamp}`, `{name}` (based on the `--name` flag) and \n`{outputDir}` (variables must be specified without whitespace, \ne.g. `{ pid }` is not supported). It can also be set to `-` to \nsend the HTML output to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--output-html=-`).\n\nIf either this flag or --name is set to - \nthen the HTML will go to STDOUT.\n\nDefault: `{outputDir}/{name}.html`\n\n\n### --gen | -g\n\nGenerate the flamegraph from a specified stacks.out file.\nThe `--tiers` and `--langs` flags can also be combined with this flag.\nOutputs to STDOUT unless the `--name` flag is set, in which case \noutputs to a file `{name}.html` in the current folder.\n\n### --kernel-tracing\n\nUse an OS kernel tracing tool (perf on Linux or \ndtrace on macOs and Solaris). This will capture \nnative stack frames (C++ modules and Libuv I/O), \nbut may result in missing stacks on Node 8.\n\nThis is due to the version of V8 used in the Node 8+\nwhich does not expose unoptimized call frames to \nkernel tracing tools (hence these functions will not\nappear in the flamegraph). It's possible to cause\nall functions to appear in the flamegraph with the `--kernel-tracing`\nflag when the `--always-opt` flag is passed to the `node` binary \n(e.g. `0x --kernel-tracing node --always-opt app.js`). This can be\nuseful, but it's important to bear in mind this will change\nthe performance characterstics of the process so may lead to false\npositives when it comes to identifying bottlenecks.\n\nDefault: false \n\n### --phase\n\nStage in initialization to begin aggregating stacks. \n\n**Phase 0** visualizes from the very start, this includes bootstrapping \nstacks and loading the application module tree (these can dominate the flamegraph). \n\n**Phase 1** excludes core bootstrapping stacks, except the end of the boostrapping process \nwhere the application module tree is loaded from the entry point. \n\n**Phase 2** excludes all initialization, this renders the most pragmatic flamegraph for most \nuse cases.\n\nDefault: 2\n\n### --delay | -d\n\nMilliseconds. Delay before tracing begins (or before stacks are processed in the Linux case), allows us to ignore\ninitialisation stacks (e.g. module loading).\n\nExample: `0x -d 2000 my-app.js`\n\nDefault: 0\n\n### --langs | -l\n\nColor code the stacks by JS and C\n\nExample: `0x -l my-app.js`\n\nDefault: false\n\n### --tiers | -t\n\nA comma separated list\n\nOverrides langs, Color code frames by type\n\nExamples: `0x -t my-app.js`\n\nDefault: false\n\n### --exclude | -x\n\nExclude tiers or langs, comma seperated list\n\nOptions: v8, regexp, cpp, native, core, deps, app, js, c\n\nExamples:\n`0x -x v8,cpp,core my-app.js`\n`0x -x c my-app.js`\n\nDefault: v8\n\n### --include\n\nInclude tiers, Overwrites exclude. Really only useful\nfor including the v8 tier (which is excluded by default).\n\nOptions: v8, regexp, cpp, native, core, deps, app, js, c\n\nExample: `0x --include v8 my-app.js`\n\nDefault: false\n\n### --theme\n\nDark or Light theme\n\nOptions: dark | light\n\nExample: `0x --theme light my-app.js`\n\nDefault: dark\n\n### --quiet | -q \n\nLimit output, the only output will be fatal errors or \nthe path to the `flamegraph.html` upon successful generation.\n\nDefault: false\n\n### --silent | -s\n\nSuppress all output, except fatal errors.\n\nDefault: false\n\n### --json-stacks\n\nSave the intermediate JSON tree representation of the stacks.\n\nDefault: false\n\n### --collect-only\n\nDon't generate the flamegraph, only create the stacks\noutput. \n\nDefault: false\n\n### --visualize-only \n\nSupply a path to a profile folder to build or rebuild visualization \nfrom original stacks. Similar to --gen flag, except specify containing folder\ninstead of stacks file.\n\nDefault: ''  \n\n### --logging-output \n\nSpecify `stdout` or `stderr` as 0x's output stream.\n\nDefault: stderr\n\n### --trace-info\n\nShow output from dtrace or perf tools\n\nDefault: false\n\n#### --timestamp-profiles\n\nPrefixes the current timestamp to the Profile Folder's name minimizing collisions\nin containerized environments\n\nExample: `1516395452110-3866.0x`\n\n## The Profile Folder\n\nBy default, a profile folder will be created and named after the PID, e.g.\n`3866.0x` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder can contain the following files\n\n\n* flamegraph.html - the interactive flamegraph\n* isolate-0x103000600-3866-v8.log - a v8 profiling log file\n* stacks.3866.json - with `--json-stacks` flag: a JSON tree representing the captured stacks\n* stacks.3866.out - in `--kernel-tracing` mode: the traced stacks \n\nThe is helpful, because there's other things you can do with\nstacks output. For instance, checkout [cpuprofilify](http://npmjs.com/cpuprofilify) and [traceviewify](http://npmjs.com/traceviewify).\n\n## Example\n\nWant to try it out? Clone this repo, run `npm i -g` and\nfrom the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\nNow try some other options, e.g.\n\n```sh\n0x -t examples/rest-api\n```\n\nBabel (ES6 Transpile) Examples\n-------\n\nSee `./examples/babel` for an example. Note the babel require hook is not currently supported. Notes on using the babel-cli instead can be found in the babel example readme.\n\n## Programmatic API \n\n0x can also be required as a Node module and scripted:\n\n```js\nconst zeroEks = require('0x')\nconst path = require('path')\nzeroEks({\n  argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n  workingDir: __dirname\n})\n```\n\n### `require('0x')(opts, binary, cb)`\n\nThe `cb` option is a error first callback which is invoked after a \nprofile folder has been created and populated.\n\nThe `binary` option can be `false` (to default to the `node` executed resolved\naccording to environment `PATH`) or a string holding the path to any \nnode binary executable.\n\nThe `opts` argument is an object, with the following properties:\n\n#### `argv` (array) – required\n\nPass the arguments that the spawned Node process should receive. \n\n#### `workingDir` (string)\n\nThe base directory where profile folders will be placed. \n\nDefault: process.cwd()\n\n#### `name` (string) \n\nThe name of the flamegraph HTML output file, without the extension.\n\nDefault: flamegraph \n\n#### `open` (boolean)\n\nSee [`--open`](#--open---o)\n\n#### `quiet` (boolean)\n\nSee [`--quiet`](#--quiet---q)\n\n#### `silent` (boolean)\n\nSee [`--silent`](#--silent---s)\n\n#### `jsonStacks` (boolean)\n\nSee [`--json-stacks`](#--json-stacks)\n\n#### `loggingOutput` (boolean)\n\nSee [`--logging-output`](#--logging-output)\n\n#### `timestampProfiles` (boolean)\n\nSee [`--timestamp-profiles`](#--timestamp-profiles)\n\n#### `traceInfo` (boolean)\n\nSee [`--trace-info`](#--trace-info)\n\n#### `theme` (string)\n\nSee [`--theme`](#--theme)\n\n#### `include` (string)\n\nSee [`--include`](#--include)\n\n#### `exclude` (string)\n\nSee [`--exlude`](#--exlude---x)\n\n#### `langs` (string)\n\nSee [`--langs`](#--langs---l)\n\n#### `tiers` (string)\n\nSee [`--tiers`](#--tiers---t)\n\n#### `gen` (string)\n\nSee [`--gen`](#--gen---g)\n\n#### `outputDir` (string)\n\nSee [`--output-dir`](#--output-dir---d)\n\n#### `outputHtml` (string)\n\nSee [`--output-html`](#--output-html---f)\n\n#### `title` (string)\n\nSee [`--title`](#--title)\n\n### `kernelTracing`\n\nSee [`--kernel-tracing`](#--kernel-tracing)\n\n#### `phase` (number)\n\nSee [`--phase`](#--phase)\n\n#### `mapFrames` (function)\n\nWill override phase. A custom mapping function that receives \nan array of frames and an instance of the Profiler (see [stacks-to-json-stack-tree](http://github.com/davidmarkclements/stacks-to-json-stack-tree)).\n\nTakes the form `(frames, profiler) => Array|false`. Return false to remove \nthe whole stack from the output, or return a modified array to change \nthe output. \n\n#### `delay` (number)\n\nSee [`--delay`](#--delay---d)\n\n#### `visualizeOnly` (string)\n\nSee [`--visualize-only`](#--visualize-only)\n\n#### `collectOnly` (boolean)\n\nSee [`--collect-only`](#--collect-only)\n\n### `require('0x').stacksToFlamegraph(opts, binary, cb)`\n\nThis method will take a captured stacks input file \nand generate a flamegraph HTML file.\n\nIt takes the same arguments as the main function, but the \n`gen` argument (which should hold a path to the source \nstacks file) and the `name` argument (which should specify a\ndestination out file) is required. \n\n## v2\n\nIf you still need support for Node v4, use [0x v2.x.x](https://github.com/davidmarkclements/0x/tree/v2)\n\n## v1\n\nDon't use v1, it was an experiment and is  non functional\nShould have be v0...\n\n## Contributions\n\nYes please!\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\nSponsored by [nearForm](http://nearform.com)\n\nThis tool is inspired from various info and code sources\nand would have taken much longer without the following people and \ntheir Open Source/Info Sharing efforts:\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT\n","readmeFilename":"readme.md","gitHead":"8f3d7a7fc233fed3fd045c4c7c2fac7aaa1e78b1","_id":"0x@4.0.0-rc2","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-fBg2RVkTvC1AmN4BOZQAJMSSf5+0s01UBihFlYklQqw7eNunEq8MWJKcfnao6EBz7HEhElXI7hNRd6HJiW/GmQ==","shasum":"d433f7ee9b900e3ef5b9adca118ba82ddecec08b","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.0-rc2.tgz","fileCount":35,"unpackedSize":69729},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.0-rc2_1521017656092_0.1008671614616019"},"_hasShrinkwrap":false},"4.0.0-rc3":{"name":"0x","version":"4.0.0-rc3","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^4.2.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"406ca16b0786958e416e899a02759f36aacec77c","_id":"0x@4.0.0-rc3","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-8VvPS8IWPraMK3YpUJsw/s4EJO0GCq+NS/Av6nVbAHZ07jlmwV4kLzqsInAsj/kQyypm+n1wrJLC2cU5tdWhrw==","shasum":"28494d3ed13da17056bcb38e9c3bbe70ec3eced7","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.0-rc3.tgz","fileCount":35,"unpackedSize":70688},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.0-rc3_1521041537264_0.7291041265409142"},"_hasShrinkwrap":false},"4.0.0-rc4":{"name":"0x","version":"4.0.0-rc4","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^4.2.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"readme":"# <img alt=0x src=assets/0x-logo.png width=350>\n\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process in a single command, on both Linux *and* OS X. Whilst this seems trivial... it's not. Well it wasn't before `0x`.\n\n## Demo\n\n![](assets/demo.gif)\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/>\n\n## Support\n\n* Node v6+\n\n* OS\n  * Linux\n    * requires [perf](https://en.wikipedia.org/wiki/Perf_(Linux))\n  * OS X\n    * Up-to-date XCode\n  * SmartOS\n  * *not* Windows (PR's welcome)\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Basic Usage\n\nPrefix the usual command for starting a process with 0x:\n\n```sh\n0x my-app.js\n```\n\nYou can make the flamegraph automatically open in your browser with:\n\n```sh\n0x -o my-app.js\n```\n\nUsing a custom Node.js executable:\n\n```sh\n0x -- /path/to/node my-app.js\n```\n\nPassing custom arguments to node:\n\n```sh\n0x -- node --trace-opt --trace-deopt my-app.js\n```\n\n## Generating\n\nOnce we're ready to generate a flamegraph we send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder (`<pid>.0x`), containing `flamegraph.html`\n\n\n## Docker\nDue to security reasons Docker containers tend to result in the following error:\n\n```bash\nCannot read kernel map\nperf_event_open(..., PERF_FLAG_FD_CLOEXEC) failed with unexpected error 1 (Operation not permitted)\nperf_event_open(..., 0) failed unexpectedly with error 1 (Operation not permitted)\nError:\nYou may not have permission to collect stats.\n[...]\n```\nWe can work around this problem by running our container with the `--privileged` option\nor add `privileged: true` in your `docker-compose.yml` file.\nSee the [Docker's doc](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) for more info.\n\n\n## Production Servers\n\nGenerating a flamegraph can be quite intense on CPU and memory,\nif we have restricted resources we should generate the flamegraph\nin two pieces.\n\nFirst we can use the `--collect-only` flag to purely capture stacks.\n\n```sh\n0x --collect-only my-app.js  #0x on the server\n```\n\nPress ctrl+c when ready, this will create the usual profile folder,\nholding one file, that `stacks.$PID.out` file.\n\nNow we need to transfer the stacks file from our production server\nto our local dev machine.\n\nLet's say the pid was 7777, we can generate the flamegraph locally with\n\n```sh\n0x --gen stacks.7777.out # 0x locally\n```\n\nNow the hard work is done away from production, ensuring we avoid any service-level problems.\n\nAlternatively if we transfer the entire folder (containing the stacks file),\nwe can pass the folder to `--visualize-only`:\n\n```sh\n0x --visualize-only 7777.0x # create a flamegraph.html in 7777.0x\n```\n\n## Memory Issues\n\nAs your stack grows you may have memory issues with both Node and your browser.\n\nFor Node, run with the following flag\n```\n--stack-size=8024\n```\n\nFor Chrome, run with the following flag\n```\n--js-flags=\"--stack-size 8024\"\n```\n\nWhere 8024 is the megabytes of RAM required to run load stack. Adjust this as needed and confirm you have it to spare.\n\n## Empty Output Stacks\n\nIf you are getting empty output stacks, you may have to run with `sudo`:\n```sh\nsudo 0x my-app.js\n```\n\n## Command nesting\n\nUse `--` to set the `node` executable and/or set node flags\n\n```sh\n0x [0xFlags] -- node [nodeFlags] script.js [scriptFlags]\n```\n\nFor instance\n\n```sh\n0x --open -- node --zero-fill-buffers script.js --my-own-arg\n```\n\n## 0x Flags\n\n### --help | -h\n\nPrint usage info\n\n### --open | -o\n\nOpen the flamegraph on your browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --name\n\nThe name of the HTML file, without the .html extension\nCan be set to - to write HTML to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--name=-`).\n\nIf either this flag or `--output-html-file` is set to `-` \nthen the HTML will go to STDOUT.\n\nDefault: flamegraph\n\n### ---title \n\nSet the title to display in the flamegraph UI.\n\n### --output-dir | -D\n\nSpecify artifact output directory. This can be specified in template\nform with possible variables being `{pid}`, `{timestamp}`, `{name}` \n(based on the `--name` flag) and `{outputDir}`(variables\nmust be specified without whitespace, e.g. `{ pid }` is not supported).\n\nDefault: `{pid}.0x`\n\n### --output-html | -F\n\nSpecify destination of the generated flamegraph HTML file. \nThis can be specified in template form with possible variables \nbeing `{pid}`, `{timestamp}`, `{name}` (based on the `--name` flag) and \n`{outputDir}` (variables must be specified without whitespace, \ne.g. `{ pid }` is not supported). It can also be set to `-` to \nsend the HTML output to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--output-html=-`).\n\nIf either this flag or --name is set to - \nthen the HTML will go to STDOUT.\n\nDefault: `{outputDir}/{name}.html`\n\n\n### --gen | -g\n\nGenerate the flamegraph from a specified stacks.out file.\nThe `--tiers` and `--langs` flags can also be combined with this flag.\nOutputs to STDOUT unless the `--name` flag is set, in which case \noutputs to a file `{name}.html` in the current folder.\n\n### --kernel-tracing\n\nUse an OS kernel tracing tool (perf on Linux or \ndtrace on macOs and Solaris). This will capture \nnative stack frames (C++ modules and Libuv I/O), \nbut may result in missing stacks on Node 8.\n\nThis is due to the version of V8 used in the Node 8+\nwhich does not expose unoptimized call frames to \nkernel tracing tools (hence these functions will not\nappear in the flamegraph). It's possible to cause\nall functions to appear in the flamegraph with the `--kernel-tracing`\nflag when the `--always-opt` flag is passed to the `node` binary \n(e.g. `0x --kernel-tracing node --always-opt app.js`). This can be\nuseful, but it's important to bear in mind this will change\nthe performance characterstics of the process so may lead to false\npositives when it comes to identifying bottlenecks.\n\nDefault: false \n\n### --phase\n\nStage in initialization to begin aggregating stacks. \n\n**Phase 0** visualizes from the very start, this includes bootstrapping \nstacks and loading the application module tree (these can dominate the flamegraph). \n\n**Phase 1** excludes core bootstrapping stacks, except the end of the boostrapping process \nwhere the application module tree is loaded from the entry point. \n\n**Phase 2** excludes all initialization, this renders the most pragmatic flamegraph for most \nuse cases.\n\nDefault: 2\n\n### --delay | -d\n\nMilliseconds. Delay before tracing begins (or before stacks are processed in the Linux case), allows us to ignore\ninitialisation stacks (e.g. module loading).\n\nExample: `0x -d 2000 my-app.js`\n\nDefault: 0\n\n### --langs | -l\n\nColor code the stacks by JS and C\n\nExample: `0x -l my-app.js`\n\nDefault: false\n\n### --tiers | -t\n\nA comma separated list\n\nOverrides langs, Color code frames by type\n\nExamples: `0x -t my-app.js`\n\nDefault: false\n\n### --exclude | -x\n\nExclude tiers or langs, comma seperated list\n\nOptions: v8, regexp, cpp, native, core, deps, app, js, c\n\nExamples:\n`0x -x v8,cpp,core my-app.js`\n`0x -x c my-app.js`\n\nDefault: v8\n\n### --include\n\nInclude tiers, Overwrites exclude. Really only useful\nfor including the v8 tier (which is excluded by default).\n\nOptions: v8, regexp, cpp, native, core, deps, app, js, c\n\nExample: `0x --include v8 my-app.js`\n\nDefault: false\n\n### --theme\n\nDark or Light theme\n\nOptions: dark | light\n\nExample: `0x --theme light my-app.js`\n\nDefault: dark\n\n### --quiet | -q \n\nLimit output, the only output will be fatal errors or \nthe path to the `flamegraph.html` upon successful generation.\n\nDefault: false\n\n### --silent | -s\n\nSuppress all output, except fatal errors.\n\nDefault: false\n\n### --json-stacks\n\nSave the intermediate JSON tree representation of the stacks.\n\nDefault: false\n\n### --collect-only\n\nDon't generate the flamegraph, only create the stacks\noutput. \n\nDefault: false\n\n### --visualize-only \n\nSupply a path to a profile folder to build or rebuild visualization \nfrom original stacks. Similar to --gen flag, except specify containing folder\ninstead of stacks file.\n\nDefault: ''  \n\n### --logging-output \n\nSpecify `stdout` or `stderr` as 0x's output stream.\n\nDefault: stderr\n\n### --trace-info\n\nShow output from dtrace or perf tools\n\nDefault: false\n\n#### --timestamp-profiles\n\nPrefixes the current timestamp to the Profile Folder's name minimizing collisions\nin containerized environments\n\nExample: `1516395452110-3866.0x`\n\n## The Profile Folder\n\nBy default, a profile folder will be created and named after the PID, e.g.\n`3866.0x` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder can contain the following files\n\n\n* flamegraph.html - the interactive flamegraph\n* isolate-0x103000600-3866-v8.log - a v8 profiling log file\n* stacks.3866.json - with `--json-stacks` flag: a JSON tree representing the captured stacks\n* stacks.3866.out - in `--kernel-tracing` mode: the traced stacks \n\nThe is helpful, because there's other things you can do with\nstacks output. For instance, checkout [cpuprofilify](http://npmjs.com/cpuprofilify) and [traceviewify](http://npmjs.com/traceviewify).\n\n## Example\n\nWant to try it out? Clone this repo, run `npm i -g` and\nfrom the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\nNow try some other options, e.g.\n\n```sh\n0x -t examples/rest-api\n```\n\nBabel (ES6 Transpile) Examples\n-------\n\nSee `./examples/babel` for an example. Note the babel require hook is not currently supported. Notes on using the babel-cli instead can be found in the babel example readme.\n\n## Programmatic API \n\n0x can also be required as a Node module and scripted:\n\n```js\nconst zeroEks = require('0x')\nconst path = require('path')\nzeroEks({\n  argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n  workingDir: __dirname\n})\n```\n\n### `require('0x')(opts, binary, cb)`\n\nThe `cb` option is a error first callback which is invoked after a \nprofile folder has been created and populated.\n\nThe `binary` option can be `false` (to default to the `node` executed resolved\naccording to environment `PATH`) or a string holding the path to any \nnode binary executable.\n\nThe `opts` argument is an object, with the following properties:\n\n#### `argv` (array) – required\n\nPass the arguments that the spawned Node process should receive. \n\n#### `workingDir` (string)\n\nThe base directory where profile folders will be placed. \n\nDefault: process.cwd()\n\n#### `name` (string) \n\nThe name of the flamegraph HTML output file, without the extension.\n\nDefault: flamegraph \n\n#### `open` (boolean)\n\nSee [`--open`](#--open---o)\n\n#### `quiet` (boolean)\n\nSee [`--quiet`](#--quiet---q)\n\n#### `silent` (boolean)\n\nSee [`--silent`](#--silent---s)\n\n#### `jsonStacks` (boolean)\n\nSee [`--json-stacks`](#--json-stacks)\n\n#### `loggingOutput` (boolean)\n\nSee [`--logging-output`](#--logging-output)\n\n#### `timestampProfiles` (boolean)\n\nSee [`--timestamp-profiles`](#--timestamp-profiles)\n\n#### `traceInfo` (boolean)\n\nSee [`--trace-info`](#--trace-info)\n\n#### `theme` (string)\n\nSee [`--theme`](#--theme)\n\n#### `include` (string)\n\nSee [`--include`](#--include)\n\n#### `exclude` (string)\n\nSee [`--exlude`](#--exlude---x)\n\n#### `langs` (string)\n\nSee [`--langs`](#--langs---l)\n\n#### `tiers` (string)\n\nSee [`--tiers`](#--tiers---t)\n\n#### `gen` (string)\n\nSee [`--gen`](#--gen---g)\n\n#### `outputDir` (string)\n\nSee [`--output-dir`](#--output-dir---d)\n\n#### `outputHtml` (string)\n\nSee [`--output-html`](#--output-html---f)\n\n#### `title` (string)\n\nSee [`--title`](#--title)\n\n### `kernelTracing`\n\nSee [`--kernel-tracing`](#--kernel-tracing)\n\n#### `phase` (number)\n\nSee [`--phase`](#--phase)\n\n#### `mapFrames` (function)\n\nWill override phase. A custom mapping function that receives \nan array of frames and an instance of the Profiler (see [stacks-to-json-stack-tree](http://github.com/davidmarkclements/stacks-to-json-stack-tree)).\n\nTakes the form `(frames, profiler) => Array|false`. Return false to remove \nthe whole stack from the output, or return a modified array to change \nthe output. \n\n#### `delay` (number)\n\nSee [`--delay`](#--delay---d)\n\n#### `visualizeOnly` (string)\n\nSee [`--visualize-only`](#--visualize-only)\n\n#### `collectOnly` (boolean)\n\nSee [`--collect-only`](#--collect-only)\n\n### `require('0x').stacksToFlamegraph(opts, binary, cb)`\n\nThis method will take a captured stacks input file \nand generate a flamegraph HTML file.\n\nIt takes the same arguments as the main function, but the \n`gen` argument (which should hold a path to the source \nstacks file) and the `name` argument (which should specify a\ndestination out file) is required. \n\n## v2\n\nIf you still need support for Node v4, use [0x v2.x.x](https://github.com/davidmarkclements/0x/tree/v2)\n\n## v1\n\nDon't use v1, it was an experiment and is  non functional\nShould have be v0...\n\n## Contributions\n\nYes please!\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\nSponsored by [nearForm](http://nearform.com)\n\nThis tool is inspired from various info and code sources\nand would have taken much longer without the following people and \ntheir Open Source/Info Sharing efforts:\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT\n","readmeFilename":"readme.md","gitHead":"74149ecdd5c0424645f929fd184e4deca4f87d93","_id":"0x@4.0.0-rc4","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-7cbWg75lTxxyvWn+cQaJKgo3U6lUlwOUJD08/VL3UWtR4AiNto+ZwvFp1h3jh7UywyfyUEFdsic7ZiZG5XftfQ==","shasum":"7ca1168dfdad502c977b91bbd3b60b1bdf2624fc","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.0-rc4.tgz","fileCount":35,"unpackedSize":70822},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.0-rc4_1521063020119_0.34433632699362393"},"_hasShrinkwrap":false},"4.0.0-rc5":{"name":"0x","version":"4.0.0-rc5","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^4.2.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"readme":"# <img alt=0x src=assets/0x-logo.png width=350>\n\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process in a single command, on both Linux *and* OS X. Whilst this seems trivial... it's not. Well it wasn't before `0x`.\n\n## Demo\n\n![](assets/demo.gif)\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/>\n\n## Support\n\n* Node v6+\n\n* OS\n  * Linux\n    * requires [perf](https://en.wikipedia.org/wiki/Perf_(Linux))\n  * OS X\n    * Up-to-date XCode\n  * SmartOS\n  * *not* Windows (PR's welcome)\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Basic Usage\n\nPrefix the usual command for starting a process with 0x:\n\n```sh\n0x my-app.js\n```\n\nYou can make the flamegraph automatically open in your browser with:\n\n```sh\n0x -o my-app.js\n```\n\nUsing a custom Node.js executable:\n\n```sh\n0x -- /path/to/node my-app.js\n```\n\nPassing custom arguments to node:\n\n```sh\n0x -- node --trace-opt --trace-deopt my-app.js\n```\n\n## Generating\n\nOnce we're ready to generate a flamegraph we send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder (`<pid>.0x`), containing `flamegraph.html`\n\n\n## Docker\nDue to security reasons Docker containers tend to result in the following error:\n\n```bash\nCannot read kernel map\nperf_event_open(..., PERF_FLAG_FD_CLOEXEC) failed with unexpected error 1 (Operation not permitted)\nperf_event_open(..., 0) failed unexpectedly with error 1 (Operation not permitted)\nError:\nYou may not have permission to collect stats.\n[...]\n```\nWe can work around this problem by running our container with the `--privileged` option\nor add `privileged: true` in your `docker-compose.yml` file.\nSee the [Docker's doc](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) for more info.\n\n\n## Production Servers\n\nGenerating a flamegraph can be quite intense on CPU and memory,\nif we have restricted resources we should generate the flamegraph\nin two pieces.\n\nFirst we can use the `--collect-only` flag to purely capture stacks.\n\n```sh\n0x --collect-only my-app.js  #0x on the server\n```\n\nPress ctrl+c when ready, this will create the usual profile folder,\nholding one file, that `stacks.$PID.out` file.\n\nNow we need to transfer the stacks file from our production server\nto our local dev machine.\n\nLet's say the pid was 7777, we can generate the flamegraph locally with\n\n```sh\n0x --gen stacks.7777.out # 0x locally\n```\n\nNow the hard work is done away from production, ensuring we avoid any service-level problems.\n\nAlternatively if we transfer the entire folder (containing the stacks file),\nwe can pass the folder to `--visualize-only`:\n\n```sh\n0x --visualize-only 7777.0x # create a flamegraph.html in 7777.0x\n```\n\n## Memory Issues\n\nAs your stack grows you may have memory issues with both Node and your browser.\n\nFor Node, run with the following flag\n```\n--stack-size=8024\n```\n\nFor Chrome, run with the following flag\n```\n--js-flags=\"--stack-size 8024\"\n```\n\nWhere 8024 is the megabytes of RAM required to run load stack. Adjust this as needed and confirm you have it to spare.\n\n## Empty Output Stacks\n\nIf you are getting empty output stacks, you may have to run with `sudo`:\n```sh\nsudo 0x my-app.js\n```\n\n## Command nesting\n\nUse `--` to set the `node` executable and/or set node flags\n\n```sh\n0x [0xFlags] -- node [nodeFlags] script.js [scriptFlags]\n```\n\nFor instance\n\n```sh\n0x --open -- node --zero-fill-buffers script.js --my-own-arg\n```\n\n## 0x Flags\n\n### --help | -h\n\nPrint usage info\n\n### --open | -o\n\nOpen the flamegraph on your browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --name\n\nThe name of the HTML file, without the .html extension\nCan be set to - to write HTML to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--name=-`).\n\nIf either this flag or `--output-html-file` is set to `-` \nthen the HTML will go to STDOUT.\n\nDefault: flamegraph\n\n### ---title \n\nSet the title to display in the flamegraph UI.\n\n### --output-dir | -D\n\nSpecify artifact output directory. This can be specified in template\nform with possible variables being `{pid}`, `{timestamp}`, `{name}` \n(based on the `--name` flag) and `{outputDir}`(variables\nmust be specified without whitespace, e.g. `{ pid }` is not supported).\n\nDefault: `{pid}.0x`\n\n### --output-html | -F\n\nSpecify destination of the generated flamegraph HTML file. \nThis can be specified in template form with possible variables \nbeing `{pid}`, `{timestamp}`, `{name}` (based on the `--name` flag) and \n`{outputDir}` (variables must be specified without whitespace, \ne.g. `{ pid }` is not supported). It can also be set to `-` to \nsend the HTML output to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--output-html=-`).\n\nIf either this flag or --name is set to - \nthen the HTML will go to STDOUT.\n\nDefault: `{outputDir}/{name}.html`\n\n\n### --gen | -g\n\nGenerate the flamegraph from a specified stacks.out file.\nThe `--tiers` and `--langs` flags can also be combined with this flag.\nOutputs to STDOUT unless the `--name` flag is set, in which case \noutputs to a file `{name}.html` in the current folder.\n\n### --kernel-tracing\n\nUse an OS kernel tracing tool (perf on Linux or \ndtrace on macOs and Solaris). This will capture \nnative stack frames (C++ modules and Libuv I/O), \nbut may result in missing stacks on Node 8.\n\nThis is due to the version of V8 used in the Node 8+\nwhich does not expose unoptimized call frames to \nkernel tracing tools (hence these functions will not\nappear in the flamegraph). It's possible to cause\nall functions to appear in the flamegraph with the `--kernel-tracing`\nflag when the `--always-opt` flag is passed to the `node` binary \n(e.g. `0x --kernel-tracing node --always-opt app.js`). This can be\nuseful, but it's important to bear in mind this will change\nthe performance characterstics of the process so may lead to false\npositives when it comes to identifying bottlenecks.\n\nDefault: false \n\n### --phase\n\nStage in initialization to begin aggregating stacks. \n\n**Phase 0** visualizes from the very start, this includes bootstrapping \nstacks and loading the application module tree (these can dominate the flamegraph). \n\n**Phase 1** excludes core bootstrapping stacks, except the end of the boostrapping process \nwhere the application module tree is loaded from the entry point. \n\n**Phase 2** excludes all initialization, this renders the most pragmatic flamegraph for most \nuse cases.\n\nDefault: 2\n\n### --delay | -d\n\nMilliseconds. Delay before tracing begins (or before stacks are processed in the Linux case), allows us to ignore\ninitialisation stacks (e.g. module loading).\n\nExample: `0x -d 2000 my-app.js`\n\nDefault: 0\n\n### --langs | -l\n\nColor code the stacks by JS and C\n\nExample: `0x -l my-app.js`\n\nDefault: false\n\n### --tiers | -t\n\nA comma separated list\n\nOverrides langs, Color code frames by type\n\nExamples: `0x -t my-app.js`\n\nDefault: false\n\n### --exclude | -x\n\nExclude tiers or langs, comma seperated list\n\nOptions: v8, regexp, cpp, native, core, deps, app, js, c\n\nExamples:\n`0x -x v8,cpp,core my-app.js`\n`0x -x c my-app.js`\n\nDefault: v8\n\n### --include\n\nInclude tiers, Overwrites exclude. Really only useful\nfor including the v8 tier (which is excluded by default).\n\nOptions: v8, regexp, cpp, native, core, deps, app, js, c\n\nExample: `0x --include v8 my-app.js`\n\nDefault: false\n\n### --theme\n\nDark or Light theme\n\nOptions: dark | light\n\nExample: `0x --theme light my-app.js`\n\nDefault: dark\n\n### --quiet | -q \n\nLimit output, the only output will be fatal errors or \nthe path to the `flamegraph.html` upon successful generation.\n\nDefault: false\n\n### --silent | -s\n\nSuppress all output, except fatal errors.\n\nDefault: false\n\n### --json-stacks\n\nSave the intermediate JSON tree representation of the stacks.\n\nDefault: false\n\n### --collect-only\n\nDon't generate the flamegraph, only create the stacks\noutput. \n\nDefault: false\n\n### --visualize-only \n\nSupply a path to a profile folder to build or rebuild visualization \nfrom original stacks. Similar to --gen flag, except specify containing folder\ninstead of stacks file.\n\nDefault: ''  \n\n### --logging-output \n\nSpecify `stdout` or `stderr` as 0x's output stream.\n\nDefault: stderr\n\n### --trace-info\n\nShow output from dtrace or perf tools\n\nDefault: false\n\n#### --timestamp-profiles\n\nPrefixes the current timestamp to the Profile Folder's name minimizing collisions\nin containerized environments\n\nExample: `1516395452110-3866.0x`\n\n## The Profile Folder\n\nBy default, a profile folder will be created and named after the PID, e.g.\n`3866.0x` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder can contain the following files\n\n\n* flamegraph.html - the interactive flamegraph\n* isolate-0x103000600-3866-v8.log - a v8 profiling log file\n* stacks.3866.json - with `--json-stacks` flag: a JSON tree representing the captured stacks\n* stacks.3866.out - in `--kernel-tracing` mode: the traced stacks \n\nThe is helpful, because there's other things you can do with\nstacks output. For instance, checkout [cpuprofilify](http://npmjs.com/cpuprofilify) and [traceviewify](http://npmjs.com/traceviewify).\n\n## Example\n\nWant to try it out? Clone this repo, run `npm i -g` and\nfrom the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\nNow try some other options, e.g.\n\n```sh\n0x -t examples/rest-api\n```\n\nBabel (ES6 Transpile) Examples\n-------\n\nSee `./examples/babel` for an example. Note the babel require hook is not currently supported. Notes on using the babel-cli instead can be found in the babel example readme.\n\n## Programmatic API \n\n0x can also be required as a Node module and scripted:\n\n```js\nconst zeroEks = require('0x')\nconst path = require('path')\nzeroEks({\n  argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n  workingDir: __dirname\n})\n```\n\n### `require('0x')(opts, binary, cb)`\n\nThe `cb` option is a error first callback which is invoked after a \nprofile folder has been created and populated.\n\nThe `binary` option can be `false` (to default to the `node` executed resolved\naccording to environment `PATH`) or a string holding the path to any \nnode binary executable.\n\nThe `opts` argument is an object, with the following properties:\n\n#### `argv` (array) – required\n\nPass the arguments that the spawned Node process should receive. \n\n#### `workingDir` (string)\n\nThe base directory where profile folders will be placed. \n\nDefault: process.cwd()\n\n#### `name` (string) \n\nThe name of the flamegraph HTML output file, without the extension.\n\nDefault: flamegraph \n\n#### `open` (boolean)\n\nSee [`--open`](#--open---o)\n\n#### `quiet` (boolean)\n\nSee [`--quiet`](#--quiet---q)\n\n#### `silent` (boolean)\n\nSee [`--silent`](#--silent---s)\n\n#### `jsonStacks` (boolean)\n\nSee [`--json-stacks`](#--json-stacks)\n\n#### `loggingOutput` (boolean)\n\nSee [`--logging-output`](#--logging-output)\n\n#### `timestampProfiles` (boolean)\n\nSee [`--timestamp-profiles`](#--timestamp-profiles)\n\n#### `traceInfo` (boolean)\n\nSee [`--trace-info`](#--trace-info)\n\n#### `theme` (string)\n\nSee [`--theme`](#--theme)\n\n#### `include` (string)\n\nSee [`--include`](#--include)\n\n#### `exclude` (string)\n\nSee [`--exlude`](#--exlude---x)\n\n#### `langs` (string)\n\nSee [`--langs`](#--langs---l)\n\n#### `tiers` (string)\n\nSee [`--tiers`](#--tiers---t)\n\n#### `gen` (string)\n\nSee [`--gen`](#--gen---g)\n\n#### `outputDir` (string)\n\nSee [`--output-dir`](#--output-dir---d)\n\n#### `outputHtml` (string)\n\nSee [`--output-html`](#--output-html---f)\n\n#### `title` (string)\n\nSee [`--title`](#--title)\n\n### `kernelTracing`\n\nSee [`--kernel-tracing`](#--kernel-tracing)\n\n#### `phase` (number)\n\nSee [`--phase`](#--phase)\n\n#### `mapFrames` (function)\n\nWill override phase. A custom mapping function that receives \nan array of frames and an instance of the Profiler (see [stacks-to-json-stack-tree](http://github.com/davidmarkclements/stacks-to-json-stack-tree)).\n\nTakes the form `(frames, profiler) => Array|false`. Return false to remove \nthe whole stack from the output, or return a modified array to change \nthe output. \n\n#### `delay` (number)\n\nSee [`--delay`](#--delay---d)\n\n#### `visualizeOnly` (string)\n\nSee [`--visualize-only`](#--visualize-only)\n\n#### `collectOnly` (boolean)\n\nSee [`--collect-only`](#--collect-only)\n\n### `require('0x').stacksToFlamegraph(opts, binary, cb)`\n\nThis method will take a captured stacks input file \nand generate a flamegraph HTML file.\n\nIt takes the same arguments as the main function, but the \n`gen` argument (which should hold a path to the source \nstacks file) and the `name` argument (which should specify a\ndestination out file) is required. \n\n## v2\n\nIf you still need support for Node v4, use [0x v2.x.x](https://github.com/davidmarkclements/0x/tree/v2)\n\n## v1\n\nDon't use v1, it was an experiment and is  non functional\nShould have be v0...\n\n## Contributions\n\nYes please!\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\nSponsored by [nearForm](http://nearform.com)\n\nThis tool is inspired from various info and code sources\nand would have taken much longer without the following people and \ntheir Open Source/Info Sharing efforts:\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT\n","readmeFilename":"readme.md","gitHead":"eac1be7e3d1e2239f57aab0263d5bfdfafbf04f6","_id":"0x@4.0.0-rc5","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-d7NUoQLoh2Ebm7JisqDQRfVXCZ0r2SJhnaMEAbZTk/HsZVUz9IzCZCCm4h3kgiX9N09rhIBtXiG6jOoOIQZTUQ==","shasum":"112c379ef6d69f475f14d62b53b471cf74d96224","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.0-rc5.tgz","fileCount":35,"unpackedSize":70822},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.0-rc5_1521066053928_0.7777319744694278"},"_hasShrinkwrap":false},"4.0.0-rc6":{"name":"0x","version":"4.0.0-rc6","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.0.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"c71b339c77b7f3f276d69a73868c499e6142659e","_id":"0x@4.0.0-rc6","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-C+Z5jfzQQHsd1ySqsy36G7hjqVx7TQaXk5sf6C/alGiIUFIJDV9gbrhE25fqVm69NcgkpVf+ID1YS4i5ZzdGzA==","shasum":"e71c6dcde16f2be7cf747f6608c88fbf16ef10db","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.0-rc6.tgz","fileCount":38,"unpackedSize":75214},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.0-rc6_1521234516549_0.6385486681920196"},"_hasShrinkwrap":false},"4.0.0":{"name":"0x","version":"4.0.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"cbe1fcfd58fb872a256ac901dbda58d6a9918c7a","_id":"0x@4.0.0","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-pT9HaWze/Pr41NfAU6CzJ64ruw9t+PwzGCRfROqDdRC3hwvQP7BxmE98JkinBd0i18vxY4TUee9ohCiBId1dKQ==","shasum":"5da84e5346ba59ce6c943277672986c17d02cdb1","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.0.tgz","fileCount":39,"unpackedSize":80051},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.0_1521602420108_0.4922533365212667"},"_hasShrinkwrap":false},"4.0.1":{"name":"0x","version":"4.0.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"934d2a6ef0d1f75ba4e9b5b3da7d149cf37703ec","_id":"0x@4.0.1","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-oqH0p1qB9LgFiJiIxvgoWH0ryFVf5IOU8oMy4yIBYLXneEwuAEoiGTcZfkABYMFBsqQ09vpkE93b/PxXfAjsHg==","shasum":"9b0737654dd95272a9aa0e0a51f66cf986419bc0","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.1.tgz","fileCount":39,"unpackedSize":80242},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.1_1521627929343_0.8907880482471933"},"_hasShrinkwrap":false},"4.0.2":{"name":"0x","version":"4.0.2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"deeccc3935c753a566204df601e068c813b0dcd4","_id":"0x@4.0.2","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-PdO8melPV06nJH0vWWRBd3uGJoAaxpvOIPR3nYZM7YqoVDxtrVX9c5eyJ3ClHsdM5wHKPRWywL+k+0W/sGSg+g==","shasum":"4262d185c221c814b9b509cc28a3589fcf5e9ca8","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.2.tgz","fileCount":39,"unpackedSize":80265},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.2_1521873243851_0.5576917646005579"},"_hasShrinkwrap":false},"4.0.3":{"name":"0x","version":"4.0.3","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"dd772d3fb6cdd0b74ceedf7b5ebc2f68339d97cc","_id":"0x@4.0.3","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-VztknwcO2tnRN4BG7AAygIs6iiA2+1CIwKdo2w5OYSLyycgI0zg8xcs9/UeVi84M/HnwilN/kAtffj3JZUBxog==","shasum":"56875bb3242de923ea89301937e84195079dc6f8","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.3.tgz","fileCount":39,"unpackedSize":81226},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.3_1521899166670_0.34761353386842164"},"_hasShrinkwrap":false},"3.3.1":{"name":"0x","version":"3.3.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=6"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^11.6.2","minimist":"^1.2.0","multistream":"^2.1.0","once":"^1.4.0","opn":"^5.2.0","perf-sym":"^2.0.0","pump":"^1.0.1","pumpify":"^1.4.0","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"readme":"# <img alt=0x src=assets/0x-logo.png width=350>\n\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process in a single command, on both Linux *and* OS X. Whilst this seems trivial... it's not. Well it wasn't before `0x`.\n\n## Demo\n\n![](assets/demo.gif)\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/v3.html>\n\n## Support\n\n* Node v6+\n\n* OS\n  * Linux\n    * requires [perf](https://en.wikipedia.org/wiki/Perf_(Linux))\n  * OS X\n    * Up-to-date XCode\n  * SmartOS\n  * *not* Windows (PR's welcome)\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Basic Usage\n\nPrefix the usual command for starting a process with 0x:\n\n```sh\n0x my-app.js\n```\n\nYou can make the flamegraph automatically open in your browser with:\n\n```sh\n0x -o my-app.js\n```\n\nUsing a custom Node.js executable:\n\n```sh\n0x -- /path/to/node my-app.js\n```\n\nPassing custom arguments to node:\n\n```sh\n0x -- node --trace-opt --trace-deopt my-app.js\n```\n\n## Generating\n\nOnce we're ready to generate a flamegraph we send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder (`<pid>.flamegraph`), containing `flamegraph.html`\n\n\n## Docker\nDue to security reasons Docker containers tend to result in the following error:\n\n```bash\nCannot read kernel map\nperf_event_open(..., PERF_FLAG_FD_CLOEXEC) failed with unexpected error 1 (Operation not permitted)\nperf_event_open(..., 0) failed unexpectedly with error 1 (Operation not permitted)\nError:\nYou may not have permission to collect stats.\n[...]\n```\nWe can work around this problem by running our container with the `--privileged` option\nor add `privileged: true` in your `docker-compose.yml` file.\nSee the [Docker's doc](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) for more info.\n\n\n## Production Servers\n\nGenerating a flamegraph can be quite intense on CPU and memory,\nif we have restricted resources we should generate the flamegraph\nin two pieces.\n\nFirst we can use the `--collect-only` flag to purely capture stacks.\n\n```sh\n0x --collect-only my-app.js  #0x on the server\n```\n\nPress ctrl+c when ready, this will create the usual profile folder,\nholding one file, that `stacks.$PID.out` file.\n\nNow we need to transfer the stacks file from our production server\nto our local dev machine.\n\nLet's say the pid was 7777, we can generate the flamegraph locally with\n\n```sh\n0x --gen stacks.7777.out # 0x locally\n```\n\nNow the hard work is done away from production, ensuring we avoid any service-level problems.\n\nAlternatively if we transfer the entire folder (containing the stacks file),\nwe can pass the folder to `--visualize-only`:\n\n```sh\n0x --visualize-only 7777.flamegraph # create a flamegraph.html in 7777.flamegraph\n```\n\n## Memory Issues\n\nAs your stack grows you may have memory issues with both Node and your browser.\n\nFor Node, run with the following flag\n```\n--stack-size=8024\n```\n\nFor Chrome, run with the following flag\n```\n--js-flags=\"--stack-size 8024\"\n```\n\nWhere 8024 is the megabytes of RAM required to run load stack. Adjust this as needed and confirm you have it to spare.\n\n## Empty Output Stacks\n\nIf you are getting empty output stacks, you may have to run with `sudo`:\n```sh\nsudo 0x my-app.js\n```\n\n## Command nesting\n\nUse `--` to set the `node` executable and/or set node flags\n\n```sh\n0x [0xFlags] -- node [nodeFlags] script.js [scriptFlags]\n```\n\nFor instance\n\n```sh\n0x --open -- node --zero-fill-buffers script.js --my-own-arg\n```\n\n## 0x Flags\n\n### --help | -h\n\nPrint usage info\n\n### --open | -o\n\nOpen the flamegraph on your browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --name\n\nThe name of the HTML file, without the .html extension\nCan be set to - to write HTML to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--name=-`).\n\nIf either this flag or `--output-html-file` is set to `-` \nthen the HTML will go to STDOUT.\n\nDefault: flamegraph\n\n### ---title \n\nSet the title to display in the flamegraph UI.\n\n### --output-dir | -D\n\nSpecify artifact output directory. This can be specified in template\nform with possible variables being `{pid}`, `{timestamp}`, `{name}` \n(based on the `--name` flag) and `{outputDir}`(variables\nmust be specified without whitespace, e.g. `{ pid }` is not supported).\n\nDefault: `{pid}.flamegraph`\n\n### --output-html | -F\n\nSpecify destination of the generated flamegraph HTML file. \nThis can be specified in template form with possible variables \nbeing `{pid}`, `{timestamp}`, `{name}` (based on the `--name` flag) and \n`{outputDir}` (variables must be specified without whitespace, \ne.g. `{ pid }` is not supported). It can also be set to `-` to \nsend the HTML output to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`, \ne.g. `--output-html=-`).\n\nIf either this flag or --name is set to - \nthen the HTML will go to STDOUT.\n\nDefault: `{outputDir}/{name}.html`\n\n\n### --gen | -g\n\nGenerate the flamegraph from a specified stacks.out file.\nThe `--tiers` and `--langs` flags can also be combined with this flag.\nOutputs to STDOUT unless the `--name` flag is set, in which case \noutputs to a file `{name}.html` in the current folder.\n\n### --svg\n\nGenerates an `flamegraph.svg` file in the artifact output directory,\nin addition to the `flamegraph.html` file.\n\n### --prof-viz\n\nExperimental. **Node 8+ only**. Create an additional flame graph using\nlog output when from the V8 `--prof`. This will create \nan additional flamegraph named according to the \n`--name` flag, prefixed with `v8-prof-`. If `--name` \nis set to - then flamegraph HTML will be streamed to STDOUT.\n\nDefault: false \n\n### --prof-only\n  \nExperimental. Only create the prof-viz flamegraph.\n\nDefault: false \n\n### --phase\n\nStage in initialization to begin aggregating stacks. \n\n**Phase 0** visualizes from the very start, this includes bootstrapping \nstacks and loading the application module tree (these can dominate the flamegraph). \n\n**Phase 1** excludes core bootstrapping stacks, except the end of the boostrapping process \nwhere the application module tree is loaded from the entry point. \n\n**Phase 2** excludes all initialization, this renders the most pragmatic flamegraph for most \nuse cases.\n\nDefault: 2\n\n### --delay | -d\n\nMilliseconds. Delay before tracing begins (or before stacks are processed in the Linux case), allows us to ignore\ninitialisation stacks (e.g. module loading).\n\nExample: `0x -d 2000 my-app.js`\n\nDefault: 0\n\n### --langs | -l\n\nColor code the stacks by JS and C\n\nExample: `0x -l my-app.js`\n\nDefault: false\n\n### --tiers | -t\n\nA comma separated list\n\nOverrides langs, Color code frames by type\n\nExamples: `0x -t my-app.js`\n\nDefault: false\n\n### --exclude | -x\n\nExclude tiers or langs, comma seperated list\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExamples:\n`0x -x v8,nativeC,core my-app.js`\n`0x -x c my-app.js`\n\nDefault: v8\n\n### --include\n\nInclude tiers, Overwrites exclude. Really only useful\nfor including the v8 tier (which is excluded by default).\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExample: `0x --include v8 my-app.js`\n\nDefault: false\n\n### --theme\n\nDark or Light theme\n\nOptions: dark | light\n\nExample: `0x --theme light my-app.js`\n\nDefault: dark\n\n### --quiet | -q \n\nLimit output, the only output will be fatal errors or \nthe path to the `flamegraph.html` upon successful generation.\n\nDefault: false\n\n### --silent | -s\n\nSuppress all output, except fatal errors.\n\nDefault: false\n\n### --json-stacks\n\nSave the intermediate JSON tree representation of the stacks.\n\nDefault: false\n\n### --collect-only\n\nDon't generate the flamegraph, only create the stacks\noutput. \n\nDefault: false\n\n### --visualize-only \n\nSupply a path to a profile folder to build or rebuild visualization \nfrom original stacks. Similar to --gen flag, except specify containing folder\ninstead of stacks file.\n\nDefault: ''  \n\n### --log-output \n\nSpecify `stdout` or `stderr` as 0x's output stream.\n\nDefault: stderr\n\n### --trace-info\n\nShow output from dtrace or perf tools\n\nDefault: false\n\n#### --timestamp-profiles\n\nPrefixes the current timestamp to the Profile Folder's name minimizing collisions\nin containerized environments\n\nExample: `1516395452110-3866.flamegraph`\n\n## The Profile Folder\n\nBy default, a profile folder will be created and named after the PID, e.g.\n`3866.flamegraph` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder can contain the following files\n\n* flamegraph.svg - an SVG rendering of the flamegraph\n* stacks.3866.out - the traced stacks (run through [perf-sym](http://npmjs.com/perf-sym) on OS X)\n* flamegraph.html - the interactive flamegraph\n* stacks.3866.json - a JSON tree generated from the stacks, enabled with `--json-stacks`\n* isolate-0x103000600-3866-v8.log - a v8 profiling log file, only included when `--prof-viz` is enabled \n* isolate-0x103000600-3866-v8.log.json - v8 profiling log file processed into JSON using v8s internal tick processor, only included when `--prof-viz` is enabled\n* v8-prof-stacks.3866.out - a generated stacks file based on v8 profiling data, only included when `--prof-viz` is enabled (on linux the file name will have a generated uid instead of the PID in it)\n* v8-prof-flamegraph.html - an alternartive flamegraph that only shows JS stacks based on v8's profiling data, only included when `--prof-viz` is enabled \n\n\nThe is helpful, because there's other things you can do with\nstacks output. For instance, checkout [cpuprofilify](http://npmjs.com/cpuprofilify) and [traceviewify](http://npmjs.com/traceviewify).\n\n## Example\n\nWant to try it out? Clone this repo, run `npm i -g` and\nfrom the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\nNow try some other options, e.g.\n\n```sh\n0x -t examples/rest-api\n```\n\nBabel (ES6 Transpile) Examples\n-------\n\nSee `./examples/babel` for an example. Note the babel require hook is not currently supported. Notes on using the babel-cli instead can be found in the babel example readme.\n\n## Programmatic API \n\n0x can also be required as a Node module and scripted:\n\n```js\nconst zeroEks = require('0x')\nconst path = require('path')\nzeroEks({\n  argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n  workingDir: __dirname\n})\n```\n\n### `require('0x')(opts, binary, cb)`\n\nThe `cb` option is a error first callback which is invoked after a \nprofile folder has been created and populated.\n\nThe `binary` option can be `false` (to default to the `node` executed resolved\naccording to environment `PATH`) or a string holding the path to any \nnode binary executable.\n\nThe `opts` argument is an object, with the following properties:\n\n#### `argv` (array) – required\n\nPass the arguments that the spawned Node process should receive. \n\n#### `workingDir` (string)\n\nThe base directory where profile folders will be placed. \n\nDefault: process.cwd()\n\n#### `name` (string) \n\nThe name of the flamegraph HTML output file, without the extension.\n\nDefault: flamegraph \n\n#### `open` (boolean)\n\nSee [`--open`](#--open---o)\n\n#### `quiet` (boolean)\n\nSee [`--quiet`](#--quiet---q)\n\n#### `silent` (boolean)\n\nSee [`--silent`](#--silent---s)\n\n#### `jsonStacks` (boolean)\n\nSee [`--json-stacks`](#--json-stacks)\n\n#### `svg` (boolean)\n\nSee [`--svg`](#--svg)\n\n#### `logOutput` (boolean)\n\nSee [`--log-output`](#--log-output)\n\n#### `timestampProfiles` (boolean)\n\nSee [`--timestamp-profiles`](#--timestamp-profiles)\n\n#### `traceInfo` (boolean)\n\nSee [`--trace-info`](#--trace-info)\n\n#### `theme` (string)\n\nSee [`--theme`](#--theme)\n\n#### `include` (string)\n\nSee [`--include`](#--include)\n\n#### `exclude` (string)\n\nSee [`--exlude`](#--exlude---x)\n\n#### `langs` (string)\n\nSee [`--langs`](#--langs---l)\n\n#### `tiers` (string)\n\nSee [`--tiers`](#--tiers---t)\n\n#### `gen` (string)\n\nSee [`--gen`](#--gen---g)\n\n#### `outputDir` (string)\n\nSee [`--output-dir`](#--output-dir---d)\n\n#### `outputHtml` (string)\n\nSee [`--output-html`](#--output-html---f)\n\n#### `title` (string)\n\nSee [`--title`](#--title)\n\n### `profViz`\n\nSee [`--prof-viz`](#--prof-viz)\n\n### `profOnly`\n\nSee [`--prof-only`](#--prof-only)\n\n#### `phase` (number)\n\nSee [`--phase`](#--phase)\n\n#### `mapFrames` (function)\n\nWill override phase. A custom mapping function that receives \nan array of frames and an instance of the Profiler (see `stack-convert.js`).\n\nTakes the form `(frames, profiler) => Array|false`. Return false to remove \nthe whole stack from the output, or return a modified array to change \nthe output. \n\n#### `delay` (number)\n\nSee [`--delay`](#--delay---d)\n\n#### `visualizeOnly` (string)\n\nSee [`--visualize-only`](#--visualize-only)\n\n#### `collectOnly` (boolean)\n\nSee [`--collect-only`](#--collect-only)\n\n### `require('0x').stacksToFlamegraph(opts, binary, cb)`\n\nThis method will take a captured stacks input file \nand generate a flamegraph HTML file.\n\nIt takes the same arguments as the main function, but the \n`gen` argument (which should hold a path to the source \nstacks file) and the `name` argument (which should specify a\ndestination out file) is required. \n\n## v2\n\nIf you still need support for Node v4, use [0x v2.x.x](https://github.com/davidmarkclements/0x/tree/v2)\n\n## v1\n\nDon't use v1, it was an experiment and is  non functional\nShould have be v0...\n\n## Contributions\n\nYes please!\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\n0x is generously sponsored by [nearForm](http://nearform.com)\n\nThis tool is essentially a mashup from various info and code\nsources, and therefore would have taken much longer without\nthe following people and their Open Source/Info Sharing efforts\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT and Apache (depending on the code, see LICENSE.md)\n","readmeFilename":"readme.md","gitHead":"300085e2aba5b9d1c74f03467ba4f96d052e7257","_id":"0x@3.3.1","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-yed5mD3qI1wN8jZP5R1azQe8Yv6Tn6t0tn/vVFC+9ZDUyMx4UEHxEGKaKSqZ5/2lDXr37oPU29MY73NacS34oA==","shasum":"93979b0cccbc69b6121684fb2e8949891815d6ae","tarball":"https://registry.npmjs.org/0x/-/0x-3.3.1.tgz","fileCount":19,"unpackedSize":95163},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_3.3.1_1521900145792_0.5267495040269976"},"_hasShrinkwrap":false},"2.5.4":{"name":"0x","version":"2.5.4","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"browserify":"^13.0.0","concat-stream":"^1.5.2","d3":"^3.5.16","debug":"^2.2.0","end-of-stream":"^1.1.0","hsl-to-rgb-for-reals":"^1.1.0","jsdom":"^11.6.2","minimist":"^1.2.0","multistream":"^2.1.0","open":"0.0.5","perf-sym":"^2.0.0","pump":"^1.0.1","single-line-log":"^1.0.1","split2":"^2.0.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"deep-diff":"^0.3.3","standard":"^6.0.7"},"browserify-shim":{},"readme":"# <img alt=0x src=0x-logo.png width=350>\n\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process in a single command, on both Linux *and* OS X. Whilst this seems trivial... it's not. Well it wasn't before `0x`.\n\n## Demo\n\n![](demo.gif)\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/>\n\nThis demo shows a terminal preview, the default behaviour\nis *not* to show a preview, you can use `-p` to turn it on.\n\n## Support\n\n* Node v4+\n\n* OS\n  * Linux\n    * requires [perf](https://en.wikipedia.org/wiki/Perf_(Linux))\n  * OS X\n    * Up-to-date XCode\n  * SmartOS\n  * *not* Windows (PR's welcome)\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Basic Usage\n\nPrefix the usual command for starting a process with 0x:\n\n```sh\n0x my-app.js\n```\n\nYou can make the flamegraph automatically open in your browser with:\n\n```sh\n0x -o my-app.js\n```\n\nUse a custom Node.js executable:\n\n```sh\n0x --node=/path/to/node my-app.js\n```\n\nYou can pass custom arguments to node, for instance:\n\n```sh\n0x --node-options=\"--trace-opt --trace-deopt\" my-app.js\n```\n\n## Generating\n\nOnce we're ready to generate a flamegraph we send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder, containing flamegraph.html\n\n\n## Docker\nDue to security reasons Docker containers tend to result in the following error:\n\n```bash\nCannot read kernel map\nperf_event_open(..., PERF_FLAG_FD_CLOEXEC) failed with unexpected error 1 (Operation not permitted)\nperf_event_open(..., 0) failed unexpectedly with error 1 (Operation not permitted)\nError:\nYou may not have permission to collect stats.\n[...]\n```\nWe can work around this problem by running our container with the `--privileged` option\nor add `privileged: true` in your `docker-compose.yml` file.\nSee the [Docker's doc](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) for more info.\n\n\n## Production Servers\n\nGenerating a flamegraph can be quite intense on CPU and memory,\nif we have restricted resources we should generate the flamegraph\nin two pieces.\n\nFirst we can use the `--stacks-only` flag to purely capture stacks.\n\n```sh\n0x --stacks-only my-app.js  #0x on the server\n```\n\nPress ctrl+c when ready, this will create the usual profile folder,\nholding one file, that `stacks.$PID.out` file.\n\nNow we need to transfer the stacks file from our production server\nto our local dev machine.\n\nLet's say the pid was 7777, we can generate the flamegraph locally with\n\n```sh\n0x -c gen stacks.7777.out # 0x locally\n```\n\nNow the hard work is done away from production, ensuring we avoid any service-level problems.\n\n## Memory Issues\n\nAs your stack grows you may have memory issues with both Node and your browser.\n\nFor Node, run with the following flag\n```\n--stack-size=8024\n```\n\nFor Chrome, run with the following flag\n```\n--js-flags=\"--stack-size 8024\"\n```\n\nWhere 8024 is the megabytes of RAM required to run load stack. Adjust this as needed and confirm you have it to spare.\n\n## Empty Output Stacks\n\nIf you are getting empty output stacks, you may have to run with `sudo`:\n```sh\nsudo 0x my-app.js\n```\n\n## 0x Flags\n\n### --help | -h\n\nPrint usage info\n\n### --open | -o\n\nOpen the flamegraph on your browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --node\n\nSet a custom node executable\n\n### --node-options\n\nPass in custom options to `node`\n\n### --output-dir | -D\n\nSpecify artifact output directory\nDefault: '${process.cwd()}/profile-${PID}(-${Date.now()})?'\n\n### --svg\n\nGenerates an `flamegraph.svg` file in the artifact output directory,\nin addition to the `flamegraph.html` file.\n\n### --preview\n\nGenerates an SVG file, prerenders SVG inside HTML\nand outputs a PNG to the terminal (if possible)\nDepends on imagemagick (brew install imagemagick)\nIf using iTerm 2.9+ image will be output to terminal\nWarning - depending on the amount of stacks this\noption can take tens of seconds\n\nDefault: false\n\n### --delay | -d\n\nMilliseconds. Delay before tracing begins (or before stacks are processed in the Linux case), allows us to ignore\ninitialisation stacks (e.g. module loading).\n\nExample: `0x -d 2000 my-app.js`\n\nDefault: 300\n\n### --langs | -l\n\nColor code the stacks by JS and C\n\nExample: `0x -l my-app.js`\n\nDefault: false\n\n### --tiers | -t\n\nA comma separated list\n\nOverrides langs, Color code frames by type\n\nExamples: `0x -t my-app.js`\n\nDefault: false\n\n### --exclude | -x\n\nExclude tiers or langs, comma seperated list\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExamples:\n`0x -x v8,nativeC,core my-app.js`\n`0x -x c my-app.js`\n\nDefault: v8\n\n### --include\n\nInclude tiers, Overwrites exclude. Really only useful\nfor including the v8 tier (which is excluded by default).\n\nOptions: v8, regexp, nativeC, nativeJS, core, deps, app, js, c\n\nExample: `0x --include v8 my-app.js`\n\nDefault: false\n\n### --theme\n\nDark or Light theme\n\nOptions: dark | light\n\nExample: `0x --theme light my-app.js`\n\nDefault: dark\n\n### --stacks-only\n\nDon't generate the flamegraph, only create the stacks\noutput. If assigned to '-' stacks output will come through\nstdout. Use this in combination with the `-c gen` argument\nto generate the flamegraph from raw stacks.\n\nOptions: false | true | -\n\nExamples:\n\n`0x --stacks-only my-app.js`\n\n`0x --stacks-only=- my-app.js`\n\nDefault: false\n\n### --trace-info\n\nShow output from dtrace or perf tools\n\nDefault: false\n\n### --cmd | -c\n\nRun a \"0x command\", possible commands are `help` and `gen`.\n\n#### `0x -c help`\noutputs advanced usage (i.e. the commands).\n\n#### `0x -c gen`\n\nThe gen command will generate the flamegraph from\na stacks.out file.\n\nExample: `0x -c gen [flags] profile-$PID/stacks.$PID.out > flamegraph.html`\n\nFlags include all the flags that can be passed to 0x\n\n#### `--timestamp-profiles`\n\nAdds the current timestamp to the Profile Folder's name minimizing collisions\nfor in containerized environments\n\nExample: `profile-3866-`\n\n## The Profile Folder\n\nBy default, a profile folder will be created and named after the PID, e.g.\n`profile-3866` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder can contain the following files\n\n* flamegraph-small.png - the preview image output to terminal\n* flamegraph.svg - an SVG rendering of the flamegraph\n* stacks.3866.out - the traced stacks (run through [perf-sym](http://npmjs.com/perf-sym) on OS X)\n* flamegraph.html - the interactive flamegraph\n* stacks.3866.json - a JSON tree generated from the stacks, this tree is rendered by d3.js in the flamegraph.html\n\nThe is helpful, because there's other things you can do with\nstacks output. For instance, checkout [cpuprofilify](http://npmjs.com/cpuprofilify) and [traceviewify](http://npmjs.com/traceviewify).\n\n## Example\n\nWant to try it out? Clone this repo, run `npm i -g` and\nfrom the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\nNow try some other options, e.g.\n\n```sh\n0x -t examples/rest-api\n```\n\nBabel (ES6 Transpile) Examples\n-------\n\nSee `./examples/babel` for an example. Note the babel require hook is not currently supported. Notes on using the babel-cli instead can be found in the babel example readme.\n\n## v1\n\nDon't use v1, it was an experiment and is  non functional\nShould have be v0...\n\n## Contributions\n\nYes please!\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\n0x is generously sponsored by [nearForm](http://nearform.com)\n\nThis tool is essentially a mashup from various info and code\nsources, and therefore would have taken much longer without\nthe following people and their Open Source/Info Sharing efforts\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT and Apache (depending on the code, see LICENSE.md)\n","readmeFilename":"readme.md","gitHead":"5ee19c8996fca7dd1dcbe90b870d2b2abb44542e","_id":"0x@2.5.4","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-z80iiRfeCE2QeLR+ZYOQUGCmp2XDS86gEgfQtSUdz7cKkJawndoKWqjrIFT4i39GcO1WeZYkFCggW8k8WvtKEA==","shasum":"27fb12f8b8a5efff581735f2252a4a46be09d1c5","tarball":"https://registry.npmjs.org/0x/-/0x-2.5.4.tgz","fileCount":14,"unpackedSize":70939},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_2.5.4_1521900247321_0.8900569638540929"},"_hasShrinkwrap":false},"4.0.4":{"name":"0x","version":"4.0.4","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"835205ad59c3c8394970c0e21c3a80227abfc562","_id":"0x@4.0.4","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-NWBEimOHkB57FYhlrojJiT4ArxQxPHCbVQqHluji5RDjkpaQZ3MZplPk4p8x1dTLTPddjdSKkuwKm+0tvbh/ZQ==","shasum":"e15cdd0e24d2082a62f3f3920b1b2f0f42deef32","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.4.tgz","fileCount":39,"unpackedSize":81322},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.4_1522412471921_0.07739197466469294"},"_hasShrinkwrap":false},"4.0.5":{"name":"0x","version":"4.0.5","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"b36489363d59efce5563a24b96e2233e6ba290da","_id":"0x@4.0.5","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-TVUaxb/yH5dycUfNxEyYrWUNH4xK7NxZ/xv1N6R/TJZWVoT2DnnaXHLHwdCbu1qBIli3YOA7B8d+JvZdF/CI9g==","shasum":"0f6fd47789bea8c2b6cd932cd89c206d939c53c3","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.5.tgz","fileCount":39,"unpackedSize":81862},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.5_1522691043794_0.07064366322253712"},"_hasShrinkwrap":false},"4.0.6":{"name":"0x","version":"4.0.6","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"ec92c023ee664826d7095ec0e83f207ff06a3197","_id":"0x@4.0.6","_npmVersion":"5.6.0","_nodeVersion":"8.11.1","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-SCDWDYQHnJ5vexDOlj8esBsNGgrLXxrZ2/1kk0w9CAkjUucJXC9OycmlwsBnszIwjLbRoZHag/gkL8qH8FWCwA==","shasum":"9678e7ec787278346d9e98a67f74d7c6fe25fc79","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.6.tgz","fileCount":39,"unpackedSize":82044},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.6_1522696531393_0.9256215317730849"},"_hasShrinkwrap":false},"4.0.7":{"name":"0x","version":"4.0.7","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"eab1e9fffaa0a05d582a654bbc7a226d79849d05","_id":"0x@4.0.7","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-1i0qe+6S6hSctPf49sx+qdr60kpENUJYC9Arxc887h9zL2Hw+t+s/GHj04bAzq9DjTJ1vslKwP+8Ladaxamf0g==","shasum":"a7ebbf890accfb827efbad31d5b9dcc6bfb98ad3","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.7.tgz","fileCount":39,"unpackedSize":82166},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.7_1522764645855_0.7965998571782096"},"_hasShrinkwrap":false},"4.0.8":{"name":"0x","version":"4.0.8","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"90ac54065fb9b79c172fd1204a084f93aa0b46dd","_id":"0x@4.0.8","_npmVersion":"5.6.0","_nodeVersion":"8.11.1","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-5W//lpPYzKTXaY2HNWQGcXhmyneuA+axz/f3RVa3kCO6VTmzPc4Dl3KfWotZJdjRDFvtu3sfvHiUHhIeH6Xt8A==","shasum":"d6a48ecdcbfbeea97bda11380ac505cf3e38b7e6","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.8.tgz","fileCount":39,"unpackedSize":82228},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.8_1523223200251_0.5477504162339528"},"_hasShrinkwrap":false},"4.0.9":{"name":"0x","version":"4.0.9","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"f1f40767c442e356a98551bf605d9b98ac2e403c","_id":"0x@4.0.9","_npmVersion":"5.6.0","_nodeVersion":"8.11.1","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-DEbs1bvy7tQ7VgpWtQ8hQ0AOVYnJJhlqTbbkoWmyYEGuZOM6eQM502inOKgJHyS/Ol/XeHWuRviIOcWy9SMMBQ==","shasum":"d8905104fdc3e26305d583c44e62d3b8b65c3526","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.9.tgz","fileCount":39,"unpackedSize":82226},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.9_1523564117665_0.5309562659358888"},"_hasShrinkwrap":false},"4.0.10":{"name":"0x","version":"4.0.10","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"6fd11090655d8d26f6a286a9b05bcf5dac4965f1","_id":"0x@4.0.10","_npmVersion":"5.6.0","_nodeVersion":"8.11.1","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-QubCKH1QScdoNOccdgnnnHwap/mxX3DpHtSwh8jzBzG1cmjPqOVVOJVvwCi12SlTW3zvdEfjdVyNnUAU9tVi6w==","shasum":"993962cf35ac459e63156e007305e41f403392b9","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.10.tgz","fileCount":39,"unpackedSize":83029,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa8vabCRA9TVsSAnZWagAA/l0QAJUlTfBrKKai99fge9bt\ncoZnUTBCRru5lvY+lf7B8bi7EjaQ9+6KYeZgOPiO5RyTr9+T5wySJ+MIWtuP\nTo+IWfAUVnAbg6vNOb4M70X5OjPacWrvEL1LRRrMvB50humokUCNextDXUuo\n+d2V2vmvnP/SPZuQ3RcBprwJGVnCX4Sh665ehcMInGU4wFrQD74ugnBnq0Ww\n7H0y/xSHYFT/KqNAG7rBbEkFRL/4ECbULOD4p31votuPnkX8jVQv4w2eaAhn\nX7iOJe7T8pmmLV4hsYWOBnYxPVFuNX1i4HpgZPjPu3+lgH+iPuU2wHOtxR7A\nHNhupX843rUNJVtdB24j5jfa8xSg8XSk4R7sM2Q+pzyXFTi2si7kn+PCO1/O\nR6s8t+d5YFud4Cw+DNaDVCB2JKioFb7qgHRGXb68kRJ1BKzXth1ADpUr9/PY\nvNpQZHOLt8zB6dVDA9v/epAvp7YZ0zODbdL6CD8s5Jq77aBASvIwBDHGBQdL\nBQvoZxAwyFpwafxpda8+ahjXHwF6gDCunA4TuFbV8cc39OR0mHfNhA1gMXpE\nqBd5euI2tCA6fgoXvAIMMYEFemsWw2u/NjDqmZRh00rpuNXl+eAkFlcg3bSE\nBHq0af/tRY0m2UsEMgMpJ0d7nfC1NQP++uUUmAeaye2L7ZlRdGzAEZHqRZwc\ndYx5\r\n=F4w8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.10_1525872281972_0.4101431210554707"},"_hasShrinkwrap":false},"4.0.11":{"name":"0x","version":"4.0.11","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"1f51b125886761ba89a713545001d8583d696cf2","_id":"0x@4.0.11","_npmVersion":"5.8.0","_nodeVersion":"8.11.1","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-cN6C6ye6q1z/D9ZWEYYHySzWtE7Ef6OlUCNWoBBYh9WqUPT5XKduW02zDNvAzdmR0djucnOZxk5L8X69koUnmA==","shasum":"5841c90095ba776f0172c7b71fc43d0be6287802","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.11.tgz","fileCount":39,"unpackedSize":83353,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa9AAcCRA9TVsSAnZWagAA/BEQAIo2HZjkiNYATGUQO8k/\nreiOgOto6s6bjWc0tDvAsL2sLlqW6sTVttsxgpCg8uJfSPOSAOI/pHuDF5s9\nkryK2v6SbnJMhJ1zksXe635BkkeJIqabNa6mT0c6krSe/w9qynhH6LZ5tjRj\nEeMEsnxQNf1A7lp/gP1UnpfcylstIwdWKlOefQIvkuoiplyR7PjbYBQBeUK5\nXTw4RqMnfxJHfs+nuxcsvJaOn0Zb3392d+gGmDUAhxnLu5aKz6VEjZ7o8e9O\ntvoNYLgwMTxDO4aOXa+fsJNRvNy1vJk/AAnBWQEbYdNTm3ERxwngNsezIGBN\nlKBZ47YcmAMWsuLEBRxvsbQYdi4CKat4WknEzm8t7i8EoD4bexY81eP1mbHt\nbYipyQlRfpXmWO2XWjwVWVkGTGlCcta5Z94PLZxrwq4ilFoDu0LDzfGxJovL\nRi5znFNebT4KP5+o/sL1yyEaEcic9FxPBs5NZtcAAE45bIL8zDH8Oyr5Omk6\nvkHFO/ZTtWJ1J59/o4on8A+bvYvwhLqiQnPQ/6PGhkrOb6WcFMOwG/cBeiF2\noTQNKVdfZJg8xI9sskGCuuZl0uD2dtxEyyDThCgnEYDPbRAgMlXdXEgmOq/a\n9Q9a8RdbW/P8BO7E2+g5Zlhz3JcH9NGzuiRbeABwRMSp7ARqQ4KUnLjLlVDX\nziCf\r\n=3120\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.11_1525940250670_0.7024424820378599"},"_hasShrinkwrap":false},"4.0.12":{"name":"0x","version":"4.0.12","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"5ce5ea0e4d0d20fdba57e24503ee16efe3481514","_id":"0x@4.0.12","_npmVersion":"6.1.0","_nodeVersion":"10.4.1","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-OsVDAQSSEATj0B/gzcuYGhJP8N8wcv13roZQtNkamej3dKEn1f900vYcwKy1OrB+sBm7EZpJaoiYMhIR/bcSUA==","shasum":"a4b13eba07abe20d60dc093570faf15228953961","tarball":"https://registry.npmjs.org/0x/-/0x-4.0.12.tgz","fileCount":43,"unpackedSize":85235,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbPJ3KCRA9TVsSAnZWagAAj80P/2LKYqArOS4AwZgrKEy9\nFUcaJdXiPu60Ue9pHEbcJD8RSEWhvlVAi2HGyoBeijx9l1ssKfF+0lie5VQX\nZBaPAqYkJ0YA8QCFiR20ZeIkcKR/5o5pwoy3M0SwaPq6VOxmVzm0+yPKldDM\nfGDMPSXFfkaf53Gy6TyiV6wxdu85Ddiy2Z7wpNrJXBqGwfEyNMKu9FY2dw8b\nJFb3p4LzJXgJ0pcwXmoLepBISALHFy72vr6RcLPgGgTo7XW3hZTbikL/n7h6\nr9aGwGUh+0u2uNg1xMjxsP7WG2aUQYANkO1s85gn6lGEgCs53cOeS356a7av\no5HV2zdGvTJkFkcq5mxe9YgTvKyhXgCyGQa+RLe9xlhYIWTrCNabtWu0xal2\nwB4AS8Nvnj8zwupDbyoG0m9ivf/v6IJCaQFwThtew7tsOFi/DRtXWHV3hENf\n2oFBzRPIGB/y0toIq4t3m9Ewyn5vX1n4punE3qfvM5gmvY3zrU428NNGL0fI\n2fSLTOEosd25jumnPgxs6uch5FNtNNC+y5oQBPSqfROMLh+TYSmWWw+Ftxfn\nLu5GJIIi5TNRkBY8JY3qcfV2GCr2tungshyBdvy3FuBJQjsYuabVslDXIXFD\nAvU/QxsoOThmDV2phxgDtqszAR06B7wY2H9EgtTD61tZPk3IYvTF7K2QF3ib\njWBV\r\n=NlNK\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.0.12_1530699210097_0.46202927557939133"},"_hasShrinkwrap":false},"4.1.0":{"name":"0x","version":"4.1.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"cbd5c309d0adea0d2cec8d7bf8ccb967670ebd4e","_id":"0x@4.1.0","_npmVersion":"6.1.0","_nodeVersion":"10.4.1","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-+Sopz7WyR1nJaAKHUNLwtBQoxxEj+ewOSrEL87TTBtGmOGqrk5i/YtveD7lmT+MuKqVqhtbUzCDY/L+LqkAvpw==","shasum":"f71fb5b3a83e98526bc42ac025388585a7518425","tarball":"https://registry.npmjs.org/0x/-/0x-4.1.0.tgz","fileCount":39,"unpackedSize":83941,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbTfhFCRA9TVsSAnZWagAAsgAP/RoLlcqk8zR29JEJq2jk\nFsPFU9l6z3W9KsAadvwlTpfk5WOghp0B63ExfajeAcreh2q47lA20j4v63/B\ntXyDJhdD0ogYZslX40HP/xp8A3/SQ2DzSecNf31pp+ZVCpWIhqC47QNcg0l7\nxip4qdBOj7rgCCFppUwj7R5pBXhgV/wTU4/IqhPYf6M96JfhDHdmYSms5SOi\njj1J+x/A5bUfhUEd1n+xIOt7UsSItvwPaYj/cjL9AWbGqvxgPmSxndTueAOJ\nGRROR6LHz7EKaLN1mXD6LyuR86jX/jGz1FES0nYKXqFAguJRCqDBVOu0c3VG\nmZkHItnUgW3oyXud8b03ZIJWRJjvYNG/f/1ez4DwYfuCkmD+bGAAPZ2YwwE1\nUmwaVl/I1+1okHvGsCfM/S6kVPnpvEZuhDurT6ysgwPoj/ULkN23FG73e+yw\nZ1TfK9bCYqYKQEz6Z2puNQScmf2pFOXdKou/twmZXNp/YcqthqbaoveiXp72\noEicQHE5Mq1lW9rSZclXmkZe53h6uLrNySwFNEbImyQhipnK1D6fge7Bqe3v\nGOrO5TAq2sP6D4BDPV3P4jbvHtRm7MpH9n8OiDJRF7w5kMbcjFpSQb94bWzc\nQGhpZHL8/1XPUfvWkIwoETmueXJkuWW8FdaBTotFLP2r3tLy7uDrI8L3el5O\nnAsh\r\n=vbxN\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.1.0_1531836485065_0.17638792373618895"},"_hasShrinkwrap":false},"4.1.1":{"name":"0x","version":"4.1.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"187955ca447f56dae1cbd78c6c564a02104b2546","_id":"0x@4.1.1","_npmVersion":"6.1.0","_nodeVersion":"10.4.1","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-FXRN0TQLSgZ6xJO2JTZ81/l7rLkRonLwIH6ahwmHs3+Gz6jvMzp0kPZ21gfg+AXqTEuQBBIxyJVVdhhC7T0pAQ==","shasum":"43d3463647b7b35edf45c5b175de0a5541b63179","tarball":"https://registry.npmjs.org/0x/-/0x-4.1.1.tgz","fileCount":39,"unpackedSize":83944,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbV3HSCRA9TVsSAnZWagAABpMP/3hmqFoiAoD+z7Vunbgq\nPMqIGhyPtlfFH4QpzV4Mtlf/QPgMb3T9jQfkGOcer9079hP0hp4MRGNG4jw5\nLoHmEp9Q0KysTYsxgyisjrRRaTZBDlhfTLLBp43W/SnhIS8AdgS/Lp5ALPJp\n3bQHQ/eqs1H/ppLYbh/hcsMOd1XYUw1oXoD2PBV3vPO4WX4MWbuUjj2VUSKu\nwlwF3I1Xc44daFMNo9+NG14qM1EvYB/p3D9ZgElyrreiFrpC1PrXcYOMvLDd\nh5KCNfAvjRhkM7CIP055ioE9+4lviwYfVthgN74myKaizXJ3/g4t/EZszfXf\nkDTKRR+XK2mX8szpPuVMxSiTcATskmg2ErEAhKf22AgfVZCjw8+OFYeHT6bT\nuaBOC96Q9l6n+e7T35jGGT2zDjBqkLGRPvZlN0IXFuFo3wfcMdBWcimo2ZxF\nCR18A6wn7qj6qxcLepPZbsu31amMmjtAboECPId1R/mzFsZZ0v791T2x5DGw\nq+JLQVNOEduGUHinWq7atrMRDFS4ENuYboEQugUf1479NFpM7kpObs4JFrXe\n+hJhPOovGw1suA9mRb583v4XoGmC5P2K6+KrbHI2IsgCkwx+qzO5546oPzKo\nYLfFoMcirKQ+SiV4oExKDs6STaKELrKpDO2aiP3KKMxgYPB45MDE4hMLgh2h\nrMH0\r\n=X/Nm\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.1.1_1532457426175_0.3820356868183641"},"_hasShrinkwrap":false},"4.1.2":{"name":"0x","version":"4.1.2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"JSONStream":"^1.3.2","ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"41b5046418684792efd62dd24d4328e313e48388","_id":"0x@4.1.2","_npmVersion":"6.2.0","_nodeVersion":"8.11.3","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-ZCS3LOCKrb5N3xpxxL5yEU17KfJasT7U9MylEwEmex64qixJjnTpsJR2EcYIftsO0eyNkMAgv9cUYnV5emcV6w==","shasum":"14d5ea020412136cb347095403779e2368425733","tarball":"https://registry.npmjs.org/0x/-/0x-4.1.2.tgz","fileCount":39,"unpackedSize":84159,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbV5yWCRA9TVsSAnZWagAA30wP/R/CXaMFXpOYDdpNOLfQ\n/E3zWkLRqHtz+3U3JgrW6Kb5ci6y30lFug//oFCR+ZgmIPcdozjCO31xgEEj\ncl3eSz66a7GMwzXsdNon9TungVZtbxaCaB1X10uC37n3vaB841yMycHPOKui\n1EGhGlXPBYPwGwVn3lL0XXsOY4tRQCQ6bwCmmkoEWjZme4NPwFDSiTprFDjr\nJ75spGCWlxHec0bMieTQMGKqwontVnFZfvRZ4TI1KcgbXm8rtenVw4cXQsUn\nZ6b/PsInzf5TysquC5v86XuGI3fwsULE/cuYfSxFHcOVmEa3dvQ4731DzTjr\nf280XMWUHYDmJdR9aRn2XkCg0CXZBHSO22T4zbFt4YyYbl1QgVzvYB24fdy1\n1r51BTg6vhyqshArR+9o0QhlbhI+n/BKBETk6OIN9s+1Wiue9YoVHDuFIWAx\nLMQrDreLBtMvS7Mo74ngHL5lppuB6p3dAmovfwnklnFqYYSBQmuUR8IJE9dV\nxBttkltT8o9sth4XP1ldAJFi1TcEc5xGCDv09cMR4rShfzyN9uiPsSAY93eM\n7OHHRKRw3pUTWAfa5YLTYgsRgegxTNpojfmNS6QcTpxN9gE37UNNhKrblEg5\ntDpWKIymv29JreVhEIwW1LKBwLkr1bzgz0IEtMyTym8++cHPvDWQsgrec4al\nJkic\r\n=vmdL\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.1.2_1532468373813_0.5342760921149774"},"_hasShrinkwrap":false},"4.1.3":{"name":"0x","version":"4.1.3","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"3611fc7f7c04ee741daeda33c972bb26cd7bdd0b","_id":"0x@4.1.3","_npmVersion":"6.2.0","_nodeVersion":"8.11.3","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-sENUS0qsUoO7Sf/KcnyNru3lY2ZNsRwbkK0C2O4NtQHmgn4yBHhuddZf3vh9rdM2MXJ/C8gfp/VpUQx+SE9q3A==","shasum":"780b3034c8fbf2647692fbb8bd95a299448ef737","tarball":"https://registry.npmjs.org/0x/-/0x-4.1.3.tgz","fileCount":39,"unpackedSize":84131,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbZC0vCRA9TVsSAnZWagAAhaAP/0+DrJIqLAaS4kDCzs4Q\nTRquwHKXvsiVKX1X21A9DNoXqJgfEWuSsKVZfhjFl57HBdnBaXvx78yqZ8Hs\nKuOMgA/ngtlhWfrF8QFLGbAoUFk5uotWnkmIEv5YZ/w3xXgW+z8OM3sEJP45\nJMHLnXugArwfVuOg5Y/59tpapwl3m0Ss59LJoQEGcTLIClpzaYbpKJMx49PI\nVzmmBsGTX1d+9kQHScQB1o+i03gR+295GNo1Y/F9wjx4PW44IH2PKIsU6hHd\nraJbie2Fd6qBUUw74kQBfj6HZeGCHF8fMI9JY7d1+ILirSeBr4japwB0eHoA\nPS9lnXSIqdeLP5w99tpDRRcjZ/ezSIjWIeKjknlrpfKiOZVMWRcOx5+xPGIU\npujYPhIIJWJZCvsqR7bY+EUFnm8fCoejvcHIKno3ZuhlMrrSmdbmFI7l1tFu\nO7bBs2roCBO3dyvTRoPCLSv7oaQxSI4FDdY1xKtbUdEHM7N3RWI1OVNxL8bU\nvVGWdrtdcfDVafZbjqdZI1Iuv/Cq67mWuhYTEznGRQG1INw87AkWg5aVvWtg\nFRZ7uChFD5oMAEzOEIKMnShnZ54VgYfCBzSSG5DXK10Q1aw0zw5ZMNBci0jf\n3k0QZyl1+KohIXGbG0H0tWySbQPtdElzmFquyt16oOTDrhDgx4YhF/o/Vxjk\nXsS0\r\n=Jr67\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.1.3_1533291822854_0.32806546659591374"},"_hasShrinkwrap":false},"4.1.4":{"name":"0x","version":"4.1.4","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.1.0","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","multistream":"^2.1.0","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"a871d7f1db62fda45506c86ea703699bd2e38632","_id":"0x@4.1.4","_npmVersion":"6.3.0","_nodeVersion":"8.11.3","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-dxZm0WcG0jFifdVjuZydhma844riSOfF9hZnAXPYWBniuN3Jg4pfJQSyVHUlh0umWV4v19AL8671lVdywganzA==","shasum":"e5c4c2080ec58b7d3cef214c0b989cbfbd5ba5ef","tarball":"https://registry.npmjs.org/0x/-/0x-4.1.4.tgz","fileCount":39,"unpackedSize":84150,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbbbMPCRA9TVsSAnZWagAAgXgQAJLVKZxY0zx6n7eQHnn1\nJLWIiZ6cBU8xmICPi421QA7u2IMjmEhB+bsFgRgwnYTvVpwizK0EZGv88nR4\n8sUnVM0cOmJY4vbIikUJusedgKmxU0iAzOUx6lZRV6ikX9xIUATKNX5ARcUh\nburP3RDoRhZ1W7+dLM+39eTPayZ1foLM1Wjgbw3dMBL958RrLZmGqMVz7nHL\naGYSxl7/jmZLFG5nZjpgBA5Fezxjai4/+RUcC9ctVBvu/MIy4pEvsP8mnytH\nciXNgmqwFMrA71Zm11nSY0FGOYldcc3ZnI15xBd2SHJup71b1Ha6g9ZlL5Yd\n4k5qBYEtKJ2IOK5jCI1T71mAmPnzKNnRpJd8+bL7Be+VrB2wXpdD81RmjKhj\n7iOMqECWGxqcxw0i1xpxz+i5srb5C/gr492OrbTuGTi9rYqrZI/Vvq0ka+fm\nla7eW/eYk7DdUU2H5iVAi+CjATr2lcdMax8uvu+0Abh+TGQDBa5zeszTYIQN\ncauIySegqFscPpBNv1mqylRHaZLBl6VKgnVINg06iJfpAIJqQ95plgHj/vfN\ny0GoCrgl3lPajczg7zsV826vNZHFeIB2s2a3CXxUYtqQw1lmaLzl41kGAgFV\n5Eg+rPqYfEe3mGZN9JQ215xxUvK2EaRxn/RxLg/+tiDhwFrtnoioKht6chsh\no7tG\r\n=d5Xj\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.1.4_1533915919313_0.8971076103348048"},"_hasShrinkwrap":false},"4.1.5":{"name":"0x","version":"4.1.5","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.0.1","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.2.3","debounce":"^1.1.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.0","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"779e89dd13caad830bf2aeb7c7a00172677664df","_id":"0x@4.1.5","_npmVersion":"6.3.0","_nodeVersion":"8.11.3","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-BEvSBTmz6XGfel19vVzpwRFa37ohp09a5uvaIbkKi5dRdKtT+1KBHszZPhXpbUGu6yKeixibE+gj7H3Lttxgkw==","shasum":"1ea2a1e709b5fcc2dde69cfdf56ed3511ae8666d","tarball":"https://registry.npmjs.org/0x/-/0x-4.1.5.tgz","fileCount":39,"unpackedSize":83813,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbcp+fCRA9TVsSAnZWagAA2G8P/iTSBXGY/dtfHNkDUBC4\nz3Cw5d8uAuBm8ZKwMQb1fkF74EF66AQhu+ywNw7loVjV3bnzcytdY1OnBG7g\nLNS2Voupgmc8h0eFiEa1l/qyf/ruI63EJpIZTYJM4QmbsM4ngVFKQc7ZhAQw\nwsHY9KY/9N26wt+VBeoWbYoXEcmQvDjUmXf6oaD9Zb4UZ0uBB0WC05i0olUK\ncTJE3J+KUpDcFE4t9oyIofX1wZGovsBpEKKJ84VfC4oDIYJU+9ieB4OfdmMQ\np+bpDHCjIpY//eCGCStpLNw4FQ39fjo1UarCffo23OP3ihq4YYYxIHNjiDWa\nKnHaNRnLrQolEJqzDTWfxOoTK0fHXFgg3ZJqx7VNxNHiHCfxwgRfUzHetcgV\nd4y5u27WO78Boo9gxXsuQqhl3+TrVfj5x+/hk0RnLCIZdKQxqlF3sq9mYbTC\ntJFRRfKduzpojnQa36tCCTt/9jPwAPWbRvOD6a/0v1zyit7gN3bxavZLGFbo\n1kuuMdzMisFDlpZX0B8pgGBsD38nioPUUEo1kLOccSx7X7FS4c6asQqNqD6O\nCCwTbKNE7bY4OzC+0BCI1VRNmO4nNsAfasvns3dn5GDIiNbBBTNBt486c6Z2\nFMJsBmGqK/2e3eNegJ4Yxp+FdREHK9q8Vk+ugJrGnlJAIHwxfmZCwGqthXPc\ncHuk\r\n=ZgQU\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.1.5_1534238622993_0.3917085110540359"},"_hasShrinkwrap":false},"4.1.6":{"name":"0x","version":"4.1.6","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.3","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"17a20d2d75747dd88d3f4f6173f9e4797a855c56","_id":"0x@4.1.6","_npmVersion":"6.4.0","_nodeVersion":"8.11.3","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-05yyOtJophI2/tDo+HZAiU3F++tAD5pDneN3xHr6sJiqssJZhF6notj4r1lIw8p/qCrd9NH4T+2Xn0zafz/CeQ==","shasum":"4ae282d02734829419468c40848845361b8361a0","tarball":"https://registry.npmjs.org/0x/-/0x-4.1.6.tgz","fileCount":39,"unpackedSize":84511,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbfX2MCRA9TVsSAnZWagAA0DgP/j6Uq6vZXX5gTvgCGdqh\n89YpViMuF4j1IGlhkfCb1pSwIwyckY2X2LXWlf/n0bDY0lAjG9DZrIG6flEm\n2WnG7zy3pbEej6ZJh+MVICpk8Ns0gku8xTVK/t/zg2p+E9eufm0fN+oa265z\n7VynKSCeEhqpNuzcbz/pU7q7XQ2hbCC/L+Hyt1kcV29G4SKmuU0a6ORg8ChI\nPf5g25MSbocK4EXEJlO537CWmxuIIgoEFsxVMOcaK3u6xInDU3t1V2Q6KRx+\nbVNHUTkSFjHOXCMMbmnudmpkK7ajZ49kFNxJdbMrizjw9E5M5vYhLrmYnXMc\nWwlcZr1EzsdKIi9cZ/vyKpmZpGpbU79LXnIfJeMfgQzxz9OEWseOXMwCftW+\nNUv+nnDl4Q+1b7n/R1mDvePt+dujjS1OacL6W4TmkNtva9+r3knXec6Ih9DV\np4nAHAROrvf2FwO3lnPoaUJp/q3cC+IUZkaSoniaRnZIMBCSk+0de6cUq2xB\nzXBa7Hh/XnTOI/PxcG/di61ZqKL0WPK01SQ0P5CMifrJK9fuiU5ltANwPjid\n/JuZb6cnGiny6h3rGmVkDPEen7v7pzU1RSV73QYdQSWEh0NyjHi9sXI2VgZG\nLS4a6sPG3dTdBjgHjEZVrtHHY065zX1OKx0EDr8UE8VdZIGYzFd0jhpcCW5D\nL45p\r\n=2kuK\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.1.6_1534950795963_0.3103115151693663"},"_hasShrinkwrap":false},"4.2.0":{"name":"0x","version":"4.2.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.3","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"cdbf0f298023e93a9f6fe87d9e003533ae5e77e2","_id":"0x@4.2.0","_npmVersion":"6.4.0","_nodeVersion":"8.11.4","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-u0eTHpwyjRmELL9MmWZr9CxZT/DQUAukn/vr0WovlenXC6CFhNi+P9993OqrFv8WrGSevjRsbQEOFWbi9O4REA==","shasum":"6af4dd92ff1ba9dabcad965bf7945d605236e98f","tarball":"https://registry.npmjs.org/0x/-/0x-4.2.0.tgz","fileCount":40,"unpackedSize":85534,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbgA7QCRA9TVsSAnZWagAAJKUP/3ZeNBJT5DjxLWh1jLdm\nEjP0gtXffnP/uItgioWr1Ye230Yge0n7udYbG874FQNFl/g2M2UfTCVK6B2V\n4WiWQVuLv8N0BhSN29jsQ1uphsq5ae1Ez4ycJBSBE1wp9OYVkh9i6Y7vzIia\nRPl4b5+BPEva/0ppydNGrDnuHOnEB1XP0Z/36bWm8gou0ig519I1fFGG1uW9\n3GOBOjRCwtJInCOM3XyTuK+o1mf5dUphHnEIcmbwNTXUo/tPLKr9WuPmXBxV\n2X0E/gfvTiThXCD1tlSsRWRQ3ztGBDsOsQk5DJRbUjeuU12TO6lkxx23/uOS\npsIuFsOxHnCMYvXFPkqrgHcK7EAKaffzzdQ+VMJIUArwxkmi7v/2Ngd+cCva\n2KTDvqjvXzkJ83DV/CF3wXevhgSdUQta6iUIeqBfvbJN0VaHGNDjlCvNyRbC\nm3pSTVVVkaKmxBrr7x+3oRUTgwnXONOIcYsV9amhT8sSuE0RAfSMpa5d5Ehs\nLobfqmeiqqmxRyAEQ9hG4wKQhaIVx8KxnBvz/7JMO9fRMorKpyoMrarfHYBR\njiklFCpP98MJ/L+YJDHUXX4uoqO2/b837+g5REAly3LDQAUQFXHkOJo9NNm+\nHhQEGPLDmqrQD7AKNX157QRUu+Bmgg5Fkf8q+exxdcHvxutB57GAwUh/66nz\n5jdg\r\n=GMiK\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.2.0_1535119055218_0.43489558502173153"},"_hasShrinkwrap":false},"4.3.0":{"name":"0x","version":"4.3.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.3","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"2bbc814beeee89693f2a55764a5c41ce22d54a61","_id":"0x@4.3.0","_npmVersion":"6.4.0","_nodeVersion":"8.11.4","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-/POiFn6qtLJ2wnWXmzS7AmS7mOcjkiH9dHuIDUs/xsxjcmgF7TtbXUU89LCIaimuzXA6cWaffcMh4MpRzSGRrg==","shasum":"20e48f12add6aea7f9ad58cb91ada8d53a15e023","tarball":"https://registry.npmjs.org/0x/-/0x-4.3.0.tgz","fileCount":39,"unpackedSize":87555,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbhWbwCRA9TVsSAnZWagAA+2AP/Ro6mk/+zaGQ2mqTSLZh\noCl9oa403hEdfeSRsJ9HG3DR5Bg82ulft7hnXD4GktrlXTqmQMi486ztZj77\n/kqqdveBMAETmgAo7Fk9T1hgrKtSlCIoHrYjffL36Nrup/miL9vVJMWFx512\nb1ScyEfZ92AEfm5fbZCHBnIMNcohs5dt/sPFWddvOmrrqN8CEuXfqajhWey1\nOPG+zbrGUP6y5eI0OkjyHgKjes64xceTOfNngv5kYzJG4VCgDY6uEdrLtuOb\nM2UtO9MQH71JOA5iCTYhP9pMl+dlk1P3niX+7WUTHsBuBOAlaTxDg4D5Ftc/\npCvwlSyL4/4J3CVewE2L2glhiOLEDTo9IxCVl2Nukc/uszfR8mYDVnwCQsUR\n1HrPpH8AA/JsVil1/Pab28VdoY3jNhajFDo16korNIzH2AmO6bgrsngauvX+\nrpghVYG15m9QVFz24R8sxZ6GTuKuUoqgKYCvp2qmz8izOTACE6TyOghIpeES\n5eUm+GhSySJNHaLH3ZeE7l0nPG7nfDSd+J54YOk3n+7UemT/F6QgZe5wjf3e\nDjC0OKfZ+Qq47oYqd/fiFboVQxAorOhJTG9vHkmfw2Mbl+2J0nWG2Hk0gOV9\n5gl12aQHJt2F4+mI/J/SN5ZxhhRJoGObWSpm/QDMqxE7WM4cZNHQ8EcHnSi4\n6i9y\r\n=2oxI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.3.0_1535469295467_0.8889947826416125"},"_hasShrinkwrap":false},"4.4.0":{"name":"0x","version":"4.4.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.3","browserify":"^13.0.0","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^2.2.0","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^1.0.1","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^2.0.1","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"standard":"^6.0.7"},"browserify-shim":{},"gitHead":"d09abc36053c1e7d0f21956c6a7f2f040028141e","_id":"0x@4.4.0","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-FIJhWYsoxtS0ELhk8UHsByWLa2KgSYitxMzzpgevm/wUPs61bsOuWAgiRuni9iJdgh313j9ccZzjGPtm8IGF9w==","shasum":"bda2cdec362e77158fcef662de0a7767e074033a","tarball":"https://registry.npmjs.org/0x/-/0x-4.4.0.tgz","fileCount":39,"unpackedSize":87556,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJboRqlCRA9TVsSAnZWagAA87QP/Aqz+00f+Ndyxs93H12h\nsyxNPG/+3lOw3qseYaFmXGLMm1H7lwwgQpSHG2VqiZ2cglpA/9h7W8vm6vVa\nOJwUaYnO2TpIARm4LGlcEULzSd6o2R1yZ4xhaqM27AG5cdZ3juAIm3PDBrpJ\n/W3bwPCR9IrazDO+Hw5vgiHMGwRDZ3sDq6xBSUyrQJlgWA3oW6SMhOP7VaAe\nYTlY5cCd8PmcMtaKH/pFnzkXTT2gdNpL7MwqPT5Yull1HRS8gx6uIR5FX7Jj\nRjbBrWX83giVobDYGYZR2OpZLkXlKfJwhuprBxL1ntn1xNb+d0wR3/+cPrz/\n/Qm8X3AFmXQxhmgcL9h83Z5pm26dg8B5Qej6ULjr8GqcSYuStmn1+xxTDAJC\n+5a531uiLMwjfZDE1jXs/zOwBHcCqigQkIQNFrkHv1YCWxddXefKM7Y7Ounm\nuAAKZjIt/9BaNUH1irxCh+By1S4rcsreIcR/oT/NspG5H80Wy3MU/GVdl32W\nWtP5Tcf7pSTIGTf1U4MZAZ64oR5JwrqiWSjhERvBIHMh/ZFbECSxjNq6/Dwe\nlgSjmlNW0g296lMbVmfCivTF77CvLzL63GPjtsrj2wjbRbE3YebRB5qbxQRq\nNwuy42xJv4vk5modZQs2ilJDunopQZi8zpmqBciHdvyZva+HqUaG6y5l0NNP\nl691\r\n=NMh3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.4.0_1537284772190_0.7050032745173114"},"_hasShrinkwrap":false},"4.4.1":{"name":"0x","version":"4.4.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.3","browserify":"^16.2.2","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"snazzy":"^8.0.0","standard":"^12.0.1"},"browserify-shim":{},"gitHead":"1ceb9fb026fa6c0c6d89ce69b602b71835d3f229","_id":"0x@4.4.1","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-QcTlm1d3ojQoqMPUqwzpSZpQyqa552rpD89+Sd9vDjHzkKqQXrFZEe7XDIB2DpeQmhW8LUjRBoFHmXF0jfIWEQ==","shasum":"cb80aa445805425d694e6c9e8c200c0b9ee4110b","tarball":"https://registry.npmjs.org/0x/-/0x-4.4.1.tgz","fileCount":39,"unpackedSize":87414,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbohcCCRA9TVsSAnZWagAACT8P/3M1Ylf7heN5LCywV3se\nYd5SmUKcfVugwrXP6kRJyrcl2PDg3okU70jB7NVtF1LOIRXFxBsvK1eVYYpN\nri2DS6N+2LBZD7JmCOmI8BDSJ5viHKfuVBIVC62ECZsVUuocxCd/w1vXXGqP\nLMmZwFpn7MpnP0Hm1vvd7r/TCo5TnkpTpup2T7m0MPXd21t2jucnrfIJUQj/\nvwHGDYEkJr2AwejAgiCBik2+6df2dwwN8YvMUdMqzEPi5ryQNEldZ5IQ+ih1\nGJtLaM915ZkFOFL6lZHvRRHjSOs0IvP1/EtNfLAm4rj5pZoUyW67sCAfpea4\nsVoVqJL9QRqgwK0FMkDUk8FGLgupervkZJSzgjXYVchpjVa2zKrF3aZllp95\nnA2skE0/0l4Kil32CTWv4lwoWJbfwhnXnivxRwdQvc5kLd+t3yV4Xy1JeoXA\njldBBZdz3919rnelv9f8GQ/tsv6CXeyb5m1cPcaef4YLQ3v3J+QiGk1UVCHf\nbgTS5j8Cr7Vl/ZBkL1BVQC3x4hvVe2gMKQWDTgd3fzufSGt63yPqzA9orcL1\niZFodgxz1bOUXistL2P7/KNA+g26Z2eRLzW/jWkiymL/PoCVxzwCUDKOWH1a\nCDQTbapF2aRWn6wG+AmKxdvi/00WWZxxFxxXJK1n5HbDbsZyXZzkUZN4HwTX\nlnYO\r\n=1jKt\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.4.1_1537349377284_0.31671183942866565"},"_hasShrinkwrap":false},"4.4.2":{"name":"0x","version":"4.4.2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.3","browserify":"^16.2.2","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"snazzy":"^8.0.0","standard":"^12.0.1"},"browserify-shim":{},"gitHead":"3111af69e7be94f35e15b7df084738cde6a53609","_id":"0x@4.4.2","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-H7NRjqadQ4CuvIKb1LU8lEc4ICpMihzq9draKs6wKCVXM1aT6kXKl/KC+Vof5RlNNGUYqTV/6ihy9/hu9u/gzg==","shasum":"f651a8dbaddc6c25c3e024c9064902d306696a9d","tarball":"https://registry.npmjs.org/0x/-/0x-4.4.2.tgz","fileCount":39,"unpackedSize":88156,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbokepCRA9TVsSAnZWagAA1N8P/3hgYbh6yGYSnlLeM0J4\nmGgzRUd9BcWWGv68UzOmnVq97FiTbXFVDRUmaOS1ren3wF2cUbdN3X0dDgSp\nsTec6JaazTTP3BaN3whQ4MwuKlaFAq4zV48Uj5XPQCjefewsHS1EWOJXpaoU\nnQJ29wqUkW0MViUYLDdp66XjG2q863Go9gECoFM4FlFWlkfBgJ/P1P1xevJ0\nlK0BVC/pUtq2NB6azDdlBAfxpUIy8EYaTuC2wVtux265avIQc848XVB7SjQJ\nPzde+NCat6zzXJairfgRGgVE1p6mS1/AfFMz8xX9HY9wd6EEW1LdnP72f6sX\nInHQmULS7Upebh3fqi4WV1FVNI63holdZImKyDWk/6262Q7KM3GBxB8Yw3h1\nUKSkP9Xd6nwuVSkH6ge9gxD2OWOkxtco/cts4+S4GjLTE+uuMYLvk6mZo9Uz\noZvVzTTblF73Xf8rllUigd7XF95pG2vBrHDTDLtGqFpLvTVOFC2+aEfWq+Ny\n3TFvEd3fy8+WuFyaiIJxcuEP3+C0gB6qe9l5xVQ+UItu6d/ltLxrOlrrn6rN\nLSRxU+Yj4apJAYEVQU7rQT3a1Ox5swAmUQLYPTVC1mhbXRA2+gVjqp5d1muT\n4G6X3qn/fHU9SFzDWapokyhiuHewaxlf6qhztMh8QL0TpwYrFzIWx5/nhkHm\nCKwc\r\n=N9JA\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.4.2_1537361833020_0.5988205163894524"},"_hasShrinkwrap":false},"4.4.3":{"name":"0x","version":"4.4.3","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.3","browserify":"^16.2.2","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.2.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"snazzy":"^8.0.0","standard":"^12.0.1"},"browserify-shim":{},"gitHead":"783161628c6e4d6041a029a25da158cc51c38a25","_id":"0x@4.4.3","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-8HCFKHWymH5EoYkPpGamaWRM23xGNGlTab2tdRV6LSDfhCzQOo9dHXlaQgTyptv0JGbU7l9oYDomU0qIADEuSA==","shasum":"85a263a186704859e0c693745fb7ab8bf4aff20a","tarball":"https://registry.npmjs.org/0x/-/0x-4.4.3.tgz","fileCount":39,"unpackedSize":88092,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJboo3yCRA9TVsSAnZWagAAlysQAIHJOxaTc7OEFxnuwI68\nAHXRSL5XhV3nchE8wGDTfrJj1dF8mQgBneV3QqnZ7ruXZ8nGY5A6KcH1xpE6\nvjNClPQiOkgC09/0QNKn7x+R5Zv0/XaUP1gI//VVcam0wxO+tBDrDp7HytPe\nhOFozcBBGLVGAxoowf88lTOTyWV5jQkECSpmC4rc8wmxT/wuH0yAdmVsJZ1Z\nen1Ykwv+JnedmJdQp5FBLaTgiiU8Hu6ZnUzmlxGBg3l00WGKYFsBncvINQ52\nSFbU3b7bMUjaJ7jMBYTygZan3pI4CtatURc9ADaYQP5F5eOQ4qk98WIjkdGq\nW3qJUHKGek5hwd7ivPuNrJHnzwNGUrSejExjB4qrNSPt8GogMqNAM6lNBBfD\njrbhAbDo6aqLe4wvmT0UModstCYkcqxUbI4DDBjT6AlwCBbz0an1OjrleCkI\nCypljMhkPvIrE8r74vQSjnU3Ym6R3brNWP5egJJDTzOKV4usu2u/5sQ6/Dh1\nLOMleYMJPEOaAS68UGjKZlKV2f1Mk2xjSopub3RvWGJL4Mma3C6aQnidqd3D\nSff1NZO0PzBrKXiLZeXQ3FnMRpT0caVaVhmAfJf5+yCgyv6y1E98UJn+2qzn\nFHfyH6Gvm0PkkI/wjMfkVf15LANw1BdjLhK1om9KZq9EKZl79n/YT1E4DBQe\nd1tj\r\n=a+p4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.4.3_1537379824674_0.07249365717632306"},"_hasShrinkwrap":false},"4.4.4":{"name":"0x","version":"4.4.4","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.4","browserify":"^16.2.2","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"snazzy":"^8.0.0","standard":"^12.0.1"},"browserify-shim":{},"gitHead":"52729366dc7f95c5c919e5d4442d6bc873b955cc","_id":"0x@4.4.4","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-sdUXBtKZn5tONkMZICIOHPJK2VYh7Wv2J0vUX6+N4SS/iRbZKl52guMVmGfssSmRE+96hoohpgDZr/a9hNlvKw==","shasum":"c175222162eb642da693ac74b5295e4f365a573d","tarball":"https://registry.npmjs.org/0x/-/0x-4.4.4.tgz","fileCount":41,"unpackedSize":88758,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbqWZtCRA9TVsSAnZWagAAkIkP/3Prt7Sa4LH3bNCijiv6\nE2WRFp9qSMR+53l9jKuUuSTpNmXDI5UzGbbrfOWQyUomj5Ky3EieI7F1gv2s\nE8CJbA4ah4lcuR8y+08cKK2h7Zx4gtwc8smON5mI09PRETTRGIcBmPox3O+K\nGXU/RtnD7amaN0PGG7kbRoqBvyR3qVma+iEqy5KjEpHLjiru1WDjmR9ZzYaD\n760NFQAOHDlikfwA8R4FlkdvwzXXIs5usxZRl/kRkP4tKrtkbmag2lryQFw0\nu6ABQR+kdDrzk/vzvpmYTVyeAZyXHkqT0ElnAR00kDi7Fzj1znlZTu0hDMbB\njfBBsLRsOSqk15wG4anYp2OpoHo3AZupO+KK888qqK0BZNoeiCOE5xJK2ahI\n2ueXkhB0sBriosIO9W+8Ohv7CiIoZyWL3RZOJtLmSr0chBaULFn5g3p71CY7\nZyix9p5BIzSmc6I3TIoEd93g6xGtjF5yid8o4zL8afzkaQfil22eq2vgsxw4\nL8ii1VvsVfh+208X4GKvVWqK8F9Xu1jBPyeXRyj86Q4Qq3VMxH09gztor+y8\nytUXBNfepEzURxONHaLxp1Yo//ksaA9lNtiU2mlq7cqRPziM/ImSFaERUg7D\nufAPTg3XxB7CHRXEaDyNl/ODp/cHjmnNQwQTkdIWUt0XKUp0EOVqLQjKVYDY\nGWCL\r\n=HBdO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.4.4_1537828460531_0.5404474901895535"},"_hasShrinkwrap":false},"4.4.5":{"name":"0x","version":"4.4.5","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.4","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.0.1"},"browserify-shim":{},"gitHead":"d0a606e3b05a5c06d380a3d03e5818f31823f7fc","_id":"0x@4.4.5","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-Zx7CcMNxj3bYGicmN+AtRJmuzK6ighvTnkIoe+R8oAoGa0ohiannTLmK1Q2sS6fPF/2ORRJ4mnZFBWsr/rtyAA==","shasum":"bb8ad9fc861c2947730a21f31dbec9f9bc108879","tarball":"https://registry.npmjs.org/0x/-/0x-4.4.5.tgz","fileCount":42,"unpackedSize":228572,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrRRgCRA9TVsSAnZWagAA4/4P/2qzPcIf2zN9fO41TFjN\nYNVQlPlPVAkWjhKg+/aGnw2DF5MLRPIiifoAO0KhAo7x7PZdn6T5/j9GFKcH\nNlgTRAwBIsFlmbpxpsQSfatHg/6SAzUZlivv+DZC3lCZKJbeDwd4iR4qxOtD\n2L/jD/GjAWXhZuw4DNaGXyu5HhSehxFgTTTk87yovw6XiRnhe3h8GRBM3196\nFXWsiTSbqUzu/rHeMH4ByAXeDa0rG4cuIJ/i5ni9KxSysb+x/rGF+FS5+bgs\n2J9AMaKKvM1LGZMl7g16kdsexMoAaG7zOJXUEudGubcMfb6A+yzORJ1cl487\nyKPlWKqDjgGTFlgcPTuhrTibyPWQftmcm06v+HfxH7r8ElMopIIKQvUHrW9U\nhJgNk0DqRpfgopIeR6DNNN8KogZWNbUcc28avXrIJ1UQ+Qw3tqeFTqpAwqHH\nUuIVFpFN1JiG3hr6xB6YBZs2+jiYixlvSs3WvN8ycy/VM/tKH/RzLAZaNwi2\nsCFWeteKaPbGnAZWniUopmGZ+286BpetRrwe1bZk9NOa57sKzoZ2xAFkdXzL\nttEgRnxcbY2oLmdyPcflPfE/Kx/Sf7UX2IAA/L1IDi/dDtSKq22nD+NgSGzz\nEqtU/oVZ8Ek92usnsJ16C310XzAl73t8kOITykS5W6yy/dKLegiyCf8W70Tj\nwlep\r\n=c+kD\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.4.5_1538069600030_0.5697254408730503"},"_hasShrinkwrap":false},"4.5.0":{"name":"0x","version":"4.5.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.4","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.0.1"},"browserify-shim":{},"gitHead":"38c7db5f7fa0cb0ed58ec773093308cb77dc6495","_id":"0x@4.5.0","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-xshwKV/V0qPp+/c92kBQ1u+V1xuMra8eb+IiYuPaSU1iecTAtKnYB256GatZIyvZC/2XFZ1LB5RlOGn+cllJ/g==","shasum":"9f97674c198631173d0af3a884f395abd2c3b052","tarball":"https://registry.npmjs.org/0x/-/0x-4.5.0.tgz","fileCount":42,"unpackedSize":229474,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbs3pRCRA9TVsSAnZWagAAIU4P/0Vk8EuuT5vHVmF2byNs\nw55uahXn7tKSq70U7bfqt6y8Xlg0P3/2AJhuI5nB4OGYGE2X5IkBeklEOzR1\n5GQ4d1aoViPnA2a3zZIMmiGfnqkPyRH7cGoJxeQBbVWZKoIhlog75AMpZRXV\nqFKiUOTLdWjlXj2QM0aYIGVscBab1FelQsL1KHrMfQ8WnEBfzb4e17Uo96gE\nZntc74CvPFPTcyk2ATPXcqJyV6HA9nihZqZzm+tO0Tbnxk+GUR0zxMvUM5gt\nov7Pz1alI1wlIvn1KYL5ZtK7djcFXMPOC4j2+8m4UaVxHfh63wZmmmh7PZdt\n8yqEdh3PyEL9zU+VqVEbhTfXEC03kyFfjf6dZQ6ZCDCc9pa+in50VCwzMKfO\nKMUBVjHwXKf0Wzt8vhlC6M+jUhaWejC1Blwg7D5Di0yeZfCpnVuz9vb41onY\nsJqaCBhFJp8vmlbbk6YcdqE1sRqoMa0LR9I8p4KZS9XriMpMEqea5TQFmG9q\niplxcrKX3h9udff8u2ZCtMD72+c7LdK1/X+bYpbBe1kBycjYIxKOLRgRG/Az\nFuHtyTc/WL0MYDwKqydgjAfNG9z74dcY07dzye4kj3fTmoyLhvlHPMRE0Qeu\nmTQ3POsKwhaPebspCAuSRYEAIafk65PwrGcJ0XQQYfDVS7NHrVvxgCvjQc4o\nTrBq\r\n=elfZ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.5.0_1538488912972_0.6370385440985826"},"_hasShrinkwrap":false},"4.5.1":{"name":"0x","version":"4.5.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.4","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.0.1"},"browserify-shim":{},"gitHead":"04d119a7be77cdaca115c8c7ad98c3d50ab3ce1a","_id":"0x@4.5.1","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-Dei3ZJM7p3l3n5K9P2Su6+4A00oM+tzAuAYoiIQtprCV36XUufOg1y0FVkayngvdOIvhkkwCS7Aw9U+bk1sKCQ==","shasum":"5a7ff0b02ac735b0d22a64271620e415ffb0f24f","tarball":"https://registry.npmjs.org/0x/-/0x-4.5.1.tgz","fileCount":42,"unpackedSize":229981,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbu4fhCRA9TVsSAnZWagAACcwP/3WQin6thZo3iUTzLYAT\nQe5IaFtZjTSRjyTlPSrjYKIm/UHm04NMM7+P6tSo9xfjJFcUQSG3ev1yIYVD\nyHGfcw77QN+Hhgdj8AP5uqZzZUkDrqSQ/mbyCiOv3lbUWMw6eFSz5VsS9OZf\nNkd/SeHbd/DU6x05vp8aYUMYEeoi8fPeMM7o2jqCSYw+rD0EBLUDPY1nmZw8\nGrnQJP2Q8jC7I7TSLeHcwugFx+nl7G+eub5hTrFToKOc50I322cd1BW+UpwH\nNQQgEPREty0PxI14gd9wh3MFhA8LbUrUlwzkYItf/D8tG2CRBtjQ9TLVsCGw\nvmY7gByciuJ9O/eUC6u9CLbulic5JGBT24kdgn4wWu0lzpdLv3Md+JkeXzDZ\n+3fcR6ByDWN64v1uK43Gu6QM19rOft2p0e4U+0zuiRxVfQOUTyJBwUxY8mm9\na20btLbhQDSsep4u34TiARKMPWUhKx6KAoL7R0OOnkjDtjXH6tsF1SfoFixo\nbWl6cDf9oDcYNdLKQNzckXOdCcoIloXQbzKHJbmMK5CapxOOw1XTMDsWDagP\nyONeqJIHgugcL7r6CVD7QwpD90ss1dOdd/tCw0+zsOUEXk2Z1lToic0J18hx\np+2CWp83yERSul73wrSOS6kbo5X/l3Aposmk1geR1pPTUdFuBQKwBkB0t9hs\ndDs/\r\n=QJDN\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.5.1_1539016672203_0.7987671926639259"},"_hasShrinkwrap":false},"4.5.2":{"name":"0x","version":"4.5.2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.4","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.0.1"},"browserify-shim":{},"gitHead":"21e5f4122cd0b27ff17267741c2b88b1706b253c","_id":"0x@4.5.2","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-da8KTIpxnkfai93Owam3kCa/Yj1r+ZEaEL4DqUCEWrqFgRm/wRz71YCAVo1RTJo/b5kJFbgpn0Ber7tfwaYgAQ==","shasum":"5df56a2a2e41de9b04a9d072e982f1c7ab1713bd","tarball":"https://registry.npmjs.org/0x/-/0x-4.5.2.tgz","fileCount":42,"unpackedSize":230074,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbyd+aCRA9TVsSAnZWagAAW0kP/AlDHDL48/mD0tj7pRo2\nAj7ZYe3zK4isRDoRWl5EcDkARyZl1ZGDJ8Mux2q7dRWDu8z21nYSdPy7OyJ/\nSt5pXD+q6plEWyrNyV3tIumyBXtCKTZoZDJqYexAAUVToY0ADEzaxF2f7FoT\nIoZXR4jVh/nQNlu03Tf0ZGEHTzlgDUqgF2PzuQBNKE8uG2/rH/c1/ss64HWr\ngdUb0FEApIJPoewrpITOetwxtVOPrYa2bNt01joLDWTDo1T8ZmeETNnQMEJz\n4AOgC/gPZP7+v0fkP+i+trnJLGAEN2L2M77q8Hox79ep5FmpR+6YAqTDCBlC\nq9M3jgzgYOxEG5/aYrrpJr/+LC/iyNEHIjF54WYxyGfrjFgX6QgfKIzHUZCb\n0vdAK1gH7McV6QMUsdNiaKiIWPrDbYDSpxFaI+I5X6rDC5bHGnZ74WV51BX2\nDSleXj0GDQts8LHLnqA93+ly1EqV7XVdrnE1L8wIEuuxtbquf0RxRNLzwvMW\ndLppEY/Rb7I+kn/TI80gturgUk42241gEQpU0VjjGh7VYdBHFcpeFLutPCa4\nG5uTTOgP3g0tTLiX/C/pSFj3VvCP7lWwMtEUktxXLQ9Hrd3M/F2fLEctoe7e\nQ+jP43a83p/ZhU1K7M5y6gkIWnVl9tCPkWT+KesA4Kh3+QsACbgUOj+DpCIF\nvDxG\r\n=NFk6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.5.2_1539956633008_0.7743582240091977"},"_hasShrinkwrap":false},"4.5.3":{"name":"0x","version":"4.5.3","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.4","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.0.1"},"browserify-shim":{},"gitHead":"2e36dadc01fd752ccf1ce734d4906aceac371e13","_id":"0x@4.5.3","_npmVersion":"6.4.1","_nodeVersion":"10.12.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-Z2ymdjtwBiOPbW0t3ilb8ujAjs3SeFlZcaG8tnGqEQUJGJP06qQ+SV9W+yXrksfZHvnGWQYP1hMGMeXuJPgrxg==","shasum":"54368173420b26040a460e5e75e01cbe7a33ebb2","tarball":"https://registry.npmjs.org/0x/-/0x-4.5.3.tgz","fileCount":41,"unpackedSize":92985,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0c04CRA9TVsSAnZWagAAsaoQAItysB8wc2bClJKR6oTu\nJNEu2zrJoG1sPKqXFPf+6nRTLBpFyfyjwXcF9mm2s+rrtJzq45lxsN2mpVfX\naUasp9YXkZFB6q9P1SqP2TUJhqCmDV0urcejSXNawJ270c1IdK6mTTN8mB2N\nDZW2VZcivabRh2Ho83vooth3WT+/ujFnHs/Y4jiH17wBKMKyzpFntGcoR8q3\nFwU1UTRTHC+IncDrzSRX6POJMD+ptZ25YVliQBnDQlAYuxT+AwWXmWTo+uJp\nFuj2iUKgMiouWb5Sao/I7Gr9d8m3vb0Yx/DUXt2eNDuJ4Ro7rRoCFxV6F7bd\nfGdNYIwMRa5qeM8KrcYe1TBlu9CqeStE3M+ob9Zm///sR5eNmV2SHjCoC2DX\nCL70uG0kCZIMJMBq1q43MSWBXApDH1ppJIWU7boczptklldZUTmuQLIYo1Wx\nuFWZ1TM422SblXL2DOjRT57RgoW4udRI88qZeGVe7fMfeQhIPika3G49/AGj\nXX9uwviG8Zob/8KSXmsABLwDV3LaO5bXkhejIFKXto+hbKAAw2ILWTFj0EBI\ngCcYIdvnCOl7FmKpVdpZd6fnzEi5j9UblI2/fhoX9otkCCgOA8NU6QbIvhki\nqXcsgjXwFZLv9KUmUS1ZIxjH8kUABFbroRSVnQMZu7SbkDEPNL6X0bilM3CW\nun8K\r\n=spN1\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.5.3_1540476215177_0.010975024715796922"},"_hasShrinkwrap":false},"4.6.0":{"name":"0x","version":"4.6.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.4","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.0.1"},"browserify-shim":{},"gitHead":"741f99b3aae6ab17ec92be7b7f0551ddd00328e1","_id":"0x@4.6.0","_npmVersion":"6.4.1","_nodeVersion":"10.13.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-X6KirFKnKT5UXE14RzuPXbtOUwX8/Xxh/PZOtxKoc8y9cTusDEOIDovPe/r7CiIHjw2YygtRCLJMjVreC9Bsmg==","shasum":"6b4bb543228738d159d35babdb4800533187b34c","tarball":"https://registry.npmjs.org/0x/-/0x-4.6.0.tgz","fileCount":41,"unpackedSize":92875,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb/R/5CRA9TVsSAnZWagAAY7UP/RN0O+lL/1DTW2VkBSJA\nx5g8P0CuMh+hL+HtmkpX4AbPmwqCUsJBVl7pZAyxrwU4RrdsQoLc+cJs4mvJ\nfyLy20bsWIgRqGcV0VuxbqjePosVj1XG8iby8+5NjkEcnyFHAMdyYtpxsgbm\ntSvsCvjWKpfOU+sFLBxaqizqTwxXS+5lw8Tb9CAnrKjtMdosG7P5Tz3dQ5RY\nYtyzOL9IJo8m7z70hXvEN+uCFLKfpwpSHpQ3KTxkrVavSpQnz/HKR5QQnzQD\nJvmzz5E2vSYrnWDZqtwWw2oLvaQI0lrrxUSsKFmNDe+23G0RomUE2eMIklPZ\nb/7fPSrbmgAq8pycettuBdnC53lgvIl29nUwU+2qMStOLenv3oliWb3xX55S\neFkXTB8580+vI1cg4Xedx4XVLIpx7N/Bp1vhQDks1CTOpCCtLCrZb/ziYR8S\nR1/PpX4FkPsCFfZ+uz/L+NMJWRnkHn7ZgJnZP/OFspCaAAFGGAj6D/LN71bk\nenXEd7oeyuvppcef9XgGbP12auXputJxj7ov8+JjenTxuWpyt57WdF7aB3lQ\n3C5M9BaJAoliHJHyNChCUO9iJ+BSMBU8+I/+CJ7DdM+zA7KKfLx595vRk9/C\nI92/nW7bdBKoTojnlD0sJ6XmMWFd7en0CaN/nXhivSEguOaiBerQL0i9IEMz\nK2WC\r\n=Pj46\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.6.0_1543315448711_0.015899496376174937"},"_hasShrinkwrap":false},"4.7.0":{"name":"0x","version":"4.7.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.4","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.0.1"},"browserify-shim":{},"gitHead":"1cfbc5686c8f8cc48bc500a8d31a7c61f00d770a","_id":"0x@4.7.0","_npmVersion":"6.4.1","_nodeVersion":"8.13.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-83f+KMMiwCk64CorWUp3/vBvYYd7XE3D5+L7gmr0ZQCEjUDgKE6acg5HMIPj0I4E9DxwLBJaNONp1Lubqkb/jQ==","shasum":"47c3ab36c90d655a53e61376f53133b757ca3461","tarball":"https://registry.npmjs.org/0x/-/0x-4.7.0.tgz","fileCount":41,"unpackedSize":94085,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb/r38CRA9TVsSAnZWagAA60kQAIw2cYPzKlKqjwUvfSUa\nW6K1vMReTmwJ4gsFzMhf/NIL0o/XpIeWYxEEtc/sBc0Td8owZafCZVTpp5Ap\nUjf2KQAoPPvuAdeDj/eIBs65j0e92wZ6OjjzQhwPkBEOLPybD86f6dwDW30D\nutKwmvIDqtPY+emBysi6i/dZOqvQeVT2i2rQNJt4d3nYNelcjqceZn4XskSX\ntFW5SJU5jr9DGtS5hiPVIEmCufxwn6MiG/mX5+K8So8r1gLkfPAqI9k2XrSe\n8Pi9FgTi7BvgF6MAE3pWtQVTpc3VMu80z8C5FaAXXFJgpIf0hXQvbuhJq0ol\n62Bol4/bz2/Go3wiTsgxfFYeKvRPcmo3xsFGa0/DzZzW70pg3/KR4Y64bJet\neS0LvyUd5qRma96scfaAfMV64KjzI51ycSjTmG1VwCgrH32tlqGayzrfR7XT\nmfxaiKnCqFkUEsQys7iiSMF5hmkU+rZxVHHfqLRejx6hMyDMC8AJ13VBRPgJ\ngmT6BQX4ojbOJBVN7UZwKtqjlztvVL5lcDTh9gOV6pO9AHX+LRzJ+3deoArN\nGA3lokuEOii21Xi6+rk2JMPXeRCmp8nsThNzFgy7XZGwQo3MGoLNKEt+QoV8\nw47GPY+ZY1Gfu6Elf+/0M5OOVrlxafBL8hMK5qhq5Pd9Zh1ERheWQjgr/4h0\nD5al\r\n=caL9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.7.0_1543421435625_0.31421015142204856"},"_hasShrinkwrap":false},"4.7.1":{"name":"0x","version":"4.7.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.4","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"esprima":"^4.0.1","rimraf":"^2.6.2","snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.0.1"},"browserify-shim":{},"gitHead":"9367aa7f51307181f6f45db04d427fa223ad7474","_id":"0x@4.7.1","_npmVersion":"6.4.1","_nodeVersion":"10.13.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-bkmmtIt3EWBQlCktWPN34+wI4NA9yD8n2znf8hZ4WqPLMv0f8wnGabSBIUxN+4YXkEvPgptVseckKpXV9pMtSg==","shasum":"40a033337f07611e218ce96862c9c462e5b06d3e","tarball":"https://registry.npmjs.org/0x/-/0x-4.7.1.tgz","fileCount":42,"unpackedSize":95977,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBTf6CRA9TVsSAnZWagAArRUP/3xDanoSemsXT4SscKE8\n+tWw+HlHf2Wj9gIiw8/yvAM8+ayJqXt8gT7iS6KVUGmEbT02T3VPftvN3Nax\nNIEl5SrQDzVOSQIc1W+XLXPaZnOerPn1/WczaM8ZOJSamW6zZjJXZTYrHokl\n7KofOUHIBM7W+BDf+F89D62aitez1cDCiUN9YPjjqvxNu8TCoxyw7TNQeuvC\nTuvQjp6xEdjfNfcmI+hGBackS3qWgSHXEO8aGts98iGaSbTlhUcnlSrIjWi7\nfNDR8RrDoNs/kCPxCkmCHe8nNS9M51ga4V7Ucgn1RCuR16Vn5zbK3J5cWdVb\nJ3Mg/8JVNq0gEpa2oe+o7Vdjw3jsdn/9g/IpyWuP89YNri6aAY5hc0UGgDK+\nj1cjDgDtzrrMfWyFwYdHKMBWJu9Zmjqv1faKeeLWYINL8BTJfjDhySNe2k8t\nosl34NpfMaDc6+AFHWxP12pYRvD/l1UK9nc5mUMvmi6XEKdSFcHEWg/sNh3m\nMnIrChUZUHEivOuzIoibN2RMrjoLroObWQoZkOWFIXpr+QNxwtKMt7RHB5Qw\nLAvfMax4DztcrOxAxcgq2wudk3lEH45Wprc+XE6SiTMtuxq/IrfFU/9JbUJ6\nlu521ofDZYVSin+tTCwOEmUX9//YFiMWA8TuhUc0cZPi+ZdPraSbKUoy5tBW\n9Cqn\r\n=kX+m\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.7.1_1543845881690_0.022990500042598727"},"_hasShrinkwrap":false},"4.7.2":{"name":"0x","version":"4.7.2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.5.4","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.3.1","debounce":"^1.2.0","debug":"^4.0.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.1","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.0.1","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.0.0","tachyons":"^4.9.1","through2":"^2.0.1","which":"^1.2.4"},"devDependencies":{"esprima":"^4.0.1","rimraf":"^2.6.2","snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.0.1"},"browserify-shim":{},"gitHead":"66c12f310184db157ae3328010f9a624b2edd68e","_id":"0x@4.7.2","_npmVersion":"6.4.1","_nodeVersion":"10.13.0","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-0UQaYKidO60cZpYY/rBMG0Rp+Ufge+6amZqyAdr4DLrJI5ClNHEwioc6XMIUXt9ervxEo3g6qDR9nJcsf+yBbA==","shasum":"a94a5a73249308ef14a7607febb52d74df949ab9","tarball":"https://registry.npmjs.org/0x/-/0x-4.7.2.tgz","fileCount":42,"unpackedSize":96158,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBpRyCRA9TVsSAnZWagAAuKMQAImeGWLc+Jk8RtVp2Ri9\nkvjh7ZpbJyZmMnIog6NtAHEvJfSri3vZg23IDe85Dw6n1/mwD8PM3LeozdFW\nNsGlBBpBOS9tlt2Pu4luAJDsMRqIjELQAYZ6fr1YTPFlTDWajC3750evgZdb\n7IH6Rp0OlJQMbLRqaJMRPHUP3o8Cpq48zIBtKxkUtiO/vYwyjgCiIhIXyEqp\nMGtlNao7qXdDwqhQcS5n+TLFPY1U7xLTa40tC/LlCqNFBVz8xRVp1fqkRFAx\nGVqMWZuGc1SFvrfE3cxP7SmX86tN1/wOolvgIveP8tiB81RTxLuAx8GwJ4ZV\nVHfkDs0LGb7qnGPLVKSWrJjsMNkDH4SN/cDfrTD1zZ9Ys3J0zoXf4mo2dE/j\nG7HbbXg2uQKp+YqrIa4xcDXaI6DLnRFo+MzsaM8dihQJxyaREHqtjrgc7CPF\niO4XTA63PgPQ08fRxmzwBxpJa5/RDBEX4Y1unt4XsQoMxrk+V75Arl2XT/PY\nIE4sYzqzpHtoFrDPKlhRx6yYaZfavTwGcUjFieAKWRIM1500Ql4EpIYvb2iW\n/QdTblLYyDc6nsUNjGXxvaJMjorEV68Q2UVlTCfAU+BpD189r5SZ5zK1mIYB\nVbKCbyHXb9sc5A2mvUj/ds/mX8HwTlbvollskC8pbqcJC81WXhQfgjA18h9H\nsZGG\r\n=IVh3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.7.2_1543935090258_0.8090201752637016"},"_hasShrinkwrap":false},"4.7.3":{"name":"0x","version":"4.7.3","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.9.2","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.13.1","debounce":"^1.2.0","debug":"^4.1.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.2","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.4.0","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.1.0","tachyons":"^4.9.1","through2":"^2.0.5","which":"^1.2.4"},"devDependencies":{"esprima":"^4.0.1","rimraf":"^2.6.3","snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.5.3"},"browserify-shim":{},"gitHead":"dc79854f919a39cd48deff7dbdf278ac3077bc28","_id":"0x@4.7.3","_nodeVersion":"10.15.1","_npmVersion":"6.8.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-B9WkPOGMcMiEOFa5PO4XUua6/MU8/2xNKrPdBYVE6oHS50/8yImmvhrJyvjNAoY+pxpWqqrMRFAvtqLYR4vABw==","shasum":"7826e2294bd525e6c0c95ffb2e7b3fcab8a04866","tarball":"https://registry.npmjs.org/0x/-/0x-4.7.3.tgz","fileCount":42,"unpackedSize":96342,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcctyHCRA9TVsSAnZWagAAhjgP/jTA6TYDf3fj/Onxphbu\nwUJzrDOGpRAs3jrlmyVZmNdxOC8gAWKyB1e3rgz8wSkft9ljXQ+8zNEccmXv\ndQJXOcBdUXCt8oksiuvlkEqBqnZ9agKShicRW6HgJUwnK+7CwdiUqtzBHoBc\nPAmpavIrGTUPdnBCcAY8LToh0nbhmw4XTQgsc2L0gPpFp+rssxdIuITasAZ0\nLFVf74Q6lvvzDgXi8ebQpic8MK6AVB1AJS6fa3Jt/BL1V0H+ng9rkTA6hWWE\nPa3IyKsBPY7bJKvPXIMNmaeA1UF1gnE2FA6ExUnxiLRl+cOL1p0ncd9oE75w\nUFssddjmSZeBkvusttNYhVdBcj3nidHb3ZShUhPP2pDXKY+Sr1vmk3XgUaum\n4QUbKJOd1LkceKtYXXff3fOpKcU7AzMCIX288PDhttIWnNJVBAv6n3rPff+/\n87TmKV41c9xZNdmLucnVEZRhvUrJWttu+GKl06kQxZpwA8QEN660OTbYl9zg\nJzI9/0zO981OMUKA8c84l/5bxhdyKzsCRXlbpUWudf+mFQPtiJAsdLIPz661\n1ma9FAqu83FdzSN5wLxczlSU7tx8+Oifs5PRqTWYCOPFRif0d/GhnMeCg4ie\n2aGmwuYC7Vwmr4YbouSN0ITZX2n5Sv1vHVB25ogwhrBaRZatveYHwaeMKZjf\nfngH\r\n=sMwi\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.7.3_1551031431079_0.9460797795059255"},"_hasShrinkwrap":false},"4.7.4":{"name":"0x","version":"4.7.4","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.9.2","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.13.1","debounce":"^1.2.0","debug":"^4.1.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.2","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.4.0","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.1.0","tachyons":"^4.9.1","through2":"^2.0.5","which":"^1.2.4"},"devDependencies":{"esprima":"^4.0.1","rimraf":"^2.6.3","snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.5.3"},"browserify-shim":{},"gitHead":"1cab1fb3c1350792357c9b6ed3fa1949586d055f","_id":"0x@4.7.4","_nodeVersion":"10.15.2","_npmVersion":"6.8.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-dRq6L43hl0LnX60dxpH1dSqle/pxcD98TWkqw2aN0H/KLcDeyu2wp4CFtkByjIXG5PTinbncstHuGZZaypfCHQ==","shasum":"8fe4087f69e79def3a9c6c4cccd99fd819a2a3d8","tarball":"https://registry.npmjs.org/0x/-/0x-4.7.4.tgz","fileCount":42,"unpackedSize":96376,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJci5G2CRA9TVsSAnZWagAAXtEP/RFcClqF0C8C8Zfv5K1N\nLMbM0rB2zTecwdwXGrEeLcpc32+FxcBJjWK1q0AgzWFlqanvsqs/zu2bbuXo\n/44hC049fdFkp/M6d71ZMAJ5SIcShLPwSC1/lwqM9uy4h7tH8IHRXvHGsErf\nyXhxWq4MtJ7e9x1kTj/SSfx2mqjqMAODhMum62efExl/j8rdKC8cymO5N3TV\npMLlkjRr1P1bN66sF/qnWQisMk0yG875arSAuK5JolPKf077qfL21nJOcxDW\n4f9b8lpL31WG7aR2fc4GU/uu9s0AmysC3Nqcf/w/hDqxeBGD3Iopnum4BMN2\nQyUHhG6iLBf9m+3T2VlNLzO/AajhQajtRkazNY1oFg3qrweF6ovrfqQpQ+R2\naxEb2QtN3hmWZ/nrmIy6oLf1sa7XmJ49lLmmxrwCTV3gcJQIWZZlQJhmZ7Pl\nMX2kVbhiQQAd9tXP99fDU1GB3G8QFw1m4VCcWs6FW80BaDJqbd26+GNEN2QS\nm8pLnzM/6N1GIARdhYYxsj4Y5ch3+/4Awt7Gke5BX9T1Por0YVbekETC8O1m\nSM1GOfnc5g3/6lT7yYgMia3bMTcxnpnjs7JdJ0hEwesZnQuduHxPl95cZ3cX\nwxhGzDUDlRU6qjXblBdYEN11hez4/lqUCoFmj3+v+5aOlLv2zg8FffuD+IY5\nWHY0\r\n=FnHe\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.7.4_1552650678307_0.9679200308010452"},"_hasShrinkwrap":false},"4.7.5":{"name":"0x","version":"4.7.5","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.9.2","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.13.1","debounce":"^1.2.0","debug":"^4.1.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.2","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.4.0","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.1.0","tachyons":"^4.9.1","through2":"^2.0.5","which":"^1.2.4"},"devDependencies":{"esprima":"^4.0.1","rimraf":"^2.6.3","snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.5.3"},"browserify-shim":{},"gitHead":"49f6574c7c84e4d156a5f8bbfa484baf07a306c7","_id":"0x@4.7.5","_nodeVersion":"10.15.2","_npmVersion":"6.9.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"dist":{"integrity":"sha512-oLFxAdDibjlfLOCHuskQzC6d7LAj7e8tvPniLBNyAM7MjEC0/t8wprmouL3N2BcHVlU/wFdrJsUYxPNJ9wOQ2A==","shasum":"0eadf9f57789455564f11f7a53753e1b018df031","tarball":"https://registry.npmjs.org/0x/-/0x-4.7.5.tgz","fileCount":42,"unpackedSize":96379,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcnj7SCRA9TVsSAnZWagAA25MQAKEU4hnDzczVi4Z0aMR6\n2F5q9ZURs2i6Y5lVWbZBelNpFUIpjofKhNqoFECl7ifiyvXX/cje9V+TQzQi\n2sZaNdQnLmA/yTkmhMbuWo25glH8JuuJWCVhgWTSfpXnMDDBksM5UKHvD9w4\nCs4GYIP5rdtsSVsDZ1AZoUkLrwed9/+bpaXOHywtMe1E8B18rCNJNMnFlAaq\nY8NDSQXFmGVfypwln/pK04UTJ3cw7PAt0o9PzrA+qloymKLNtBNl3TjdYY59\nSdGwe//Hi8v8YFr/clq2i/8qH8PxYGC7ySX3H/qMO0uYX6A5cepjvmLILas2\nAc3ekapCegH7ETjeUf7wEeUIOAIxvGsBFBc96IrpbmFlg9aAh+6POIgaB2/z\n8rPXEtskHNFrRVrrhxg3SpoR36cLoSozaXW361kBTb4DVp0aMouVUTvRR1Y4\ng48S8t9ClICaV/FABW2fm3glk7/vA+VcwkdxGA40PtCDf7TffkvKU+WNMAna\nFuijm1OetQX0/RWmMBcOdQGkw1m1XUwhANqYe80Ui3kJOhguiQxNsgVEJzoN\ns+LMTAGtJouos5g08kNI0Sm3K2v3Ain/4p+pZdDMHmXJHimrj+6XFIiYr+MA\nzSZbvcBud1IUAqUlWEu6l8aA6150UeIcHpSd4y5OYDfG9DJVP+DDqQ1KEHQk\nP0mI\r\n=BEuI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.7.5_1553874641508_0.3498832339484035"},"_hasShrinkwrap":false},"4.8.0":{"name":"0x","version":"4.8.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.9.2","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.13.1","debounce":"^1.2.0","debug":"^4.1.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.2","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.4.0","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.1.0","tachyons":"^4.9.1","through2":"^2.0.5","which":"^1.2.4"},"devDependencies":{"esprima":"^4.0.1","rimraf":"^2.6.3","snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.5.3"},"browserify-shim":{},"gitHead":"4b2e4e6917fada1ce0ed61530fbc49af096d016d","_id":"0x@4.8.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-OHwl4UHrEGE+jN3Y9gmv49ZbktxrjaH0vfSaEKd3EzkT52ad+uwA8gZ2QyS0at6Pg8vaN+i3fOQqHo0e+Oni1A==","shasum":"7bee6030b962806fe581e43bb47ca55e67557a4e","tarball":"https://registry.npmjs.org/0x/-/0x-4.8.0.tgz","fileCount":43,"unpackedSize":99372,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcvzB5CRA9TVsSAnZWagAA4IcP+wW0QPoV2qKZ4pBEvQtd\nVoUokz6QbhbGICX57Ud212OZ5rrXsMCP7XRBvm80a0csBZGa/3iVRaP2Nsn5\niYnquPHLSXB2RpmVf97IbA75U4LcOjGJcFVNi6wPRGwM/Esi8JNLlzN07bgu\nacCP96AqdXmarIM5aB5fQNIrW32M8RtnhHfLItuNpMdeT1nfwBbt35cil8Qh\nklIkLw53x3y3Bh8062O+KUwgnEnnyKq8yfS2V0+ZrXgQ3jzPWp63et6QppF3\nH5rL2lN0/i7V7+qcvol0BfqYxyzesym9lkDcP74NyaqGqty2G/XiFjBnFETx\n2v85gK0WXRNtFga3tz295icXAMrEykyc9hjAZzaPv/OJDh6t/pOOsKlVuUN4\nOpOOxQvCbM2dO4keZOZmdMLL/eOETDlS7Hy5M8zyzhNzph1C3H3hjTVJBhL1\nZPiSoAI3rqE+eqkHj/RpK3KIpJimkr3OJsxsoPs2S+MZSJivfniystRcxXcV\nslgiAn7LQycXiNQ88yrvX+SalMClEb+or5Ej6tocUEHZzZX5Rd30muXOifhQ\nb3W4/+W/QQ/vW6CG6ECt9LJ8QFPruB1ifjr4NI/XaVlY4HwFUFY08IYto+1A\nwNZIivWwB40GZGZLANBhTVNjjzah0nKIL4Hm89C8LU4CKHmNtIaxdQaUqx3I\n7lgq\r\n=Dvk4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.8.0_1556033656401_0.2332757324425725"},"_hasShrinkwrap":false},"4.8.1":{"name":"0x","version":"4.8.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.9.2","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.13.1","debounce":"^1.2.0","debug":"^4.1.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.2","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.4.0","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.1.0","tachyons":"^4.9.1","through2":"^2.0.5","which":"^1.2.4"},"devDependencies":{"esprima":"^4.0.1","rimraf":"^2.6.3","snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.5.3"},"browserify-shim":{},"gitHead":"e3903f80b5f926fe8af2a0359bed1faf859e43be","_id":"0x@4.8.1","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-k49tDxi61gKKu2hlsYNY02bYD+Q8a2C1vmDj0Cwn4lRsLNLS4pXgJC4U1tggJuNM9MXtEX5MnCRNqTFFDZ0qng==","shasum":"16e240459dd8a2530bd4c6e8f031125f216d6199","tarball":"https://registry.npmjs.org/0x/-/0x-4.8.1.tgz","fileCount":43,"unpackedSize":99414,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcwZHjCRA9TVsSAnZWagAATw4QAJqrq+0Pqnqt11ph042X\n2e7/EC+aFLrihhfADZ9SZVesevaakloV7n6WhObZThlv2hOe5qd+cVTGWSAj\nb0oKSsFrsNrEjFymQPancodkF2xrfcU7nh8md8XuYEkBdlaibYWNSLrepKYp\n4s6tr+pN4gwAEyIngst731nXYgFlJSKBImvQJ43tSOsIcpNjkPzXfzplvFLj\nJn/FLb56lP1w7j6WRdFODWz7/lmAZCxBnCn98jJjI7fbNdi7TvFBvtFhmuV7\nGx62hJU3kvZ1NRRE/CeZuxsnCgC2BTTTWYzUujq/8mgo/rmUTeNk71PtfsU/\n3BRxGEGKLuKPhJZKLy7ycqfnY/SZyx8Fvq/XCAdyh6g+4eGhXK6sJQXZ6a0T\nvwhkSaVwjSJBsqqoSiCLXDzMaQqidMJhM8A6vy8LEL24wCF6YCcNm+Uk9wA6\nP4HsHAAQ3M+8UAPkkWH1X2+k4J4QnCeI3u/RPC0feyF056r+ESbwcsPPwV4/\nR4ydgI2/l/hT2e03OFrdlCh2iD0Jm3Aq6f7ZWV0Eiba1W53yBIWnLdPJWH2x\nVnmWIOOmeMrSP10tKqPDZRV4jRptsayAO2xQ+Tce9lZsPBwKPXeXUycSZlsV\n76S8rXcqD42BViQh81QLrpiyADGJ5dtQFIeub2zPdujRtJloqDkUS8TKhZq5\nQ8MT\r\n=HPbu\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.8.1_1556189666271_0.26702541066253405"},"_hasShrinkwrap":false},"4.8.2":{"name":"0x","version":"4.8.2","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.9.2","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.13.1","debounce":"^1.2.0","debug":"^4.1.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.2","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.4.0","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.1.0","tachyons":"^4.9.1","through2":"^2.0.5","which":"^1.2.4"},"devDependencies":{"esprima":"^4.0.1","rimraf":"^2.6.3","snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.5.3"},"browserify-shim":{},"gitHead":"9863309871a805536c86d7027c7345bb2e9ac40b","_id":"0x@4.8.2","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"dist":{"integrity":"sha512-ROH16auioKUubhDqvuBiSH7kMhJDVbtzeif2cEsTpHd1WGexAtsZd6pbRYyAIE/Wg540VjCcKF6ZaKmNlGr8uw==","shasum":"3951860058629f2239c9d923920e8f98d793e039","tarball":"https://registry.npmjs.org/0x/-/0x-4.8.2.tgz","fileCount":43,"unpackedSize":99414,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcwZV8CRA9TVsSAnZWagAAMVcP+wbwvyalB4NuDrmTSUKB\nRWTyAaODPMsjlr7pQPL1IQx7MYr9PK6AnySyTRx4qDLKKDGkiF3sorQ/zNmf\n4iZb8GplGYPvtiSMd/WYXUPM5YAsTCGfoQdMlbIOM44ZPnIMXZ6ub3UWhw80\nUrwBDMYyLHkjLW3UOCQnCVvfjJ/q74ltq0R2PWspTRu6tCYVqYMZTH02zQsK\nF5KOTV63kj/Ces1+63IrUCMh2LpVYlQFa6tyJaaO7YapCVW4lVpuPPwADNWl\nNBQHxFvaA05qZW6XY71LAZ9OPxPVOvaf6z361Q54OBVz8hUxo0QdnWfNP77V\nspiLDd7QiFR9b2U6y/C4xQfDCKS2Uk665MiNUVJwYrjFwYSOYm7kcQPihpk5\ndpEJ1ZJUzCSTpR8UWfG6O7xwiwKknn+VT0cJDzDsPFvNxmsceQ4Vi6CDgEVs\n12AclPAvOATHtlEkMevkSIKmSJ7Mb1G//WZZ7Mcm4e43KZyd9yePB3YY1MeJ\nxjpJd28t6xL/Yo+gcxZV7ZVtPeOg3+uckvp27eBdd9GEv60swQWJPtR2AwR7\nMXRUP4mjS+pXkyQTRjD733+Dji2EFsrBIvIFRId14JuTploXU0MVDwQK1tzZ\nHaEQ4BpfwKSdWIuwSYyoZ3SSdPToDyhOLviCa+O4QLTxswpyxw5ieF3fSUsh\nkbNx\r\n=miNt\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.8.2_1556190587684_0.30750974728422453"},"_hasShrinkwrap":false},"4.9.0":{"name":"0x","version":"4.9.0","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.9.2","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.13.1","debounce":"^1.2.0","debug":"^4.1.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.2","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.4.0","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.1.0","tachyons":"^4.9.1","through2":"^2.0.5","which":"^1.2.4"},"devDependencies":{"esprima":"^4.0.1","rimraf":"^2.6.3","snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.5.3"},"browserify-shim":{},"gitHead":"ad6103c4022b75e131dc589c0ce8f434c1f28efd","_id":"0x@4.9.0","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-uzJKFGH4XNP4xd20pByQXeQQA83Io1/VbddHt4ummKshqb1mqvGz/sbKoCU/OLzTiFPdVLfIhl0D3BPEGuWi/g==","shasum":"0b076a85c3e8933d9d14fe3e1a25fb375f7f3b7e","tarball":"https://registry.npmjs.org/0x/-/0x-4.9.0.tgz","fileCount":43,"unpackedSize":99959,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdnv3iCRA9TVsSAnZWagAAMdkP/1so0P6gunmx9iBAxKjo\nHZkYH7XUKX+zUSzNXWGmb9cTyjGQNHD7DzEKeWLDXl9lH/Qe2u5prJg2MZtR\n2C4mRC8UG1EB5nszIBurrgMZdZdhcpsE1ss/jGf74k8HLbHgeEXjPd3LcCVZ\nlnObcy6yD+2+hoze7YwSR+Lq5jPNcfcOidcV3BnOXbjPhBCNsqzl/hiIDSf8\n7S03AADdj3PgF/qh1kKQiqicoPQmyILO7rYdoPs/W3jyCF72D8ILTz/IVUj3\nyzPbHLZCLpuSJoS4zZQGU+17JdxKRUoNgzGUrPolBY/bTNgtHq3G3sRAt9Lh\nCi01CVXMpK6OmYw2irzTMeAOcNogNLqVyZsI58dufF/J1Og4BMc3kYBBTc6c\n2yhydJ1DrTudRcY6qRGLbQKTlfKHaUhl3v4cigh42jx6y1doHvt07gSTwnGZ\n+jOxGOR8KVjCO2CmKZ24PCXEWvSaEKt6OzdyWlpgaVCcz7VkZSC6ZNkLh8ef\n0zpMc92uX/lpgeRpt9jriyRMTHqTwkQlZjyPzw3y3E15nBaoDDzBQKvZuCvt\nuI35p8anlEPsniYd37/Rv7TedQbml/vUvOisopmIPjpPthy3Es+nergc0nrf\nDK3n15MKNwBs3YF4xQeUzSyJyhBXxCu5L0ULpnObCPCJW+u2oMr4b7fctSdr\n1zHM\r\n=5mh+\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.9.0_1570700769601_0.5389343154773338"},"_hasShrinkwrap":false},"4.9.1":{"name":"0x","version":"4.9.1","description":"🔥 single-command flamegraph profiling 🔥","main":"index.js","bin":{"0x":"./cmd.js"},"scripts":{"test":"npm run lint && tap test/*.test.js","stress-rest-example":"cd examples/rest-api && npm test","start":"./cmd.js --on-port 'npm run stress-rest-example' -- node examples/rest-api","lint":"standard --fix | snazzy"},"repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"author":{"name":"David Mark Clements"},"license":"MIT","engines":{"node":">=8.5.0"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"homepage":"https://github.com/davidmarkclements/0x#readme","dependencies":{"ajv":"^6.9.2","browserify":"^16.2.3","concat-stream":"^1.5.2","d3-fg":"^6.14.0","debounce":"^1.2.0","debug":"^4.1.1","end-of-stream":"^1.1.0","env-string":"^1.0.0","escape-string-regexp":"^1.0.5","execspawn":"^1.0.1","has-unicode":"^2.0.1","hsl-to-rgb-for-reals":"^1.1.0","jsonstream2":"^1.1.2","make-dir":"^1.3.0","minimist":"^1.2.0","morphdom":"^2.3.3","nanohtml":"^1.4.0","on-net-listen":"^1.1.0","opn":"^5.4.0","perf-sym":"^2.0.3","pump":"^3.0.0","pumpify":"^1.4.0","semver":"^5.5.1","single-line-log":"^1.0.1","split2":"^3.1.0","tachyons":"^4.9.1","through2":"^2.0.5","which":"^1.2.4"},"devDependencies":{"esprima":"^4.0.1","rimraf":"^2.6.3","snazzy":"^8.0.0","standard":"^12.0.1","tap":"^12.5.3"},"browserify-shim":{},"gitHead":"ea239f31379922451456518479bf442499426853","_id":"0x@4.9.1","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-x3OlozzDF3j3CnFh0kxy5lslcl0mYGg9KbktqIROWthEXAuslcNnh/S91PGL6Ok+sFO+kUzUSj5KLVMoOZp4XQ==","shasum":"6f80c58d10dea1dbb4a362412c30d6f74f40fef5","tarball":"https://registry.npmjs.org/0x/-/0x-4.9.1.tgz","fileCount":43,"unpackedSize":99959,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdnv5eCRA9TVsSAnZWagAAE2QP/i7fXRob+ITzjnzDD3GZ\nKKVxRA4NJxbEL/nT4ZPgt4bc+TF+vXkiqAICt7rvrzQ0kV/cR+UfixHyhmAb\nm/Etf2sVQXlu7Gb0dpq1zkdI+YIpY1F9ZDNMRUIwKF/fqEJsgNaZ2D5oiZX5\n/V98iLIyHYMksd4fv30VWfVxTZk3XNEQmZKl/iUoP85jKmmi9ia+A5wd++m/\nfjbnIHvySWZqZPhX+1cFr9ywUQ+JUJoMQKcj1Cjt1xJop/STZMK2HOp6Xjv+\nP+jYjlqv+9nUD2cnJUNNBIhvyU3sn84+LqiPlBB/nN4Hs2cv4SEtXGhSSbHM\n28cA4UnEHP99rPNhTMBWwTH+RIT3Lyz2VH9PudsNd9EHJaq+1Is1Hn1N3gvB\nfsckmqyvgzDyr1RPB1LID9iZeOHttETML3FUNXLoMJ88SDxomp/LvhheyJJs\nKpssHrL2qO+vbjS/5PkyyrgKn9CsECmu8hUbku/1QhUo2KfSRSXNEAznsLn4\n0n68/Fh3I367RAs9KwJwLndRrpIfllnxuNElgwmGDfkYntTQTUqgi4vY9TSP\nddvmJ/QNOb+mUp6IiXuRtlb9Ut83FWn1p0AKTU3kuAvDYAD/fwp80904qvUl\nfNdoyqIZsoh+obCUuHJebA/tXB1rRtYEPkjl1RC2I0vWgmwSQe5Fu9cftO5z\nKlh9\r\n=0+lq\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/0x_4.9.1_1570700893504_0.9442552603135734"},"_hasShrinkwrap":false}},"readme":"# 0x\n\n<img alt=0x src=assets/0x-logo.png width=350>\n\n🔥 single-command flamegraph profiling 🔥\n\nDiscover the bottlenecks and hot paths in your code, with flamegraphs.\n\n## Visualize Stack Traces\n\n`0x` can profile and generate an interactive flamegraph for a Node process with a single command,\non any platform which Node runs on (macOs, Linux, Windows, Android...).\n\n## Support\n\n* Node v8.5.0 and above\n* Default usage supports any Operating System that Node runs on!\n* Chrome\n  * Other browsers may open flamegraphs in a degraded, but functional form\n\n## Legacy\n\nOlder versions of Node are supported via previous 0x versions:\n\n| 0x | Node       | macOS/SmartOS | Linux | Windows |\n|----|------------|-------|-------|---------|\n| v4 | v8.5.0+    | ☑️    | ☑️     | ☑️      |\n| v3 | v6 – v8.4.0| ☑️    | ☑️     | ⤬      |\n| v2 | v4         | ☑️    | ☑️     | ⤬      |\n\n## Demo\n\nAn example interactive flamegraph can be viewed at <http://davidmarkclements.github.io/0x-demo/>\n\n## Install\n\n```sh\nnpm install -g 0x\n```\n\n## Usage\n\nUse `0x` to run a script:\n\n```sh\n0x my-app.js\n```\n\nImmediately open the flamegraph in the browser:\n\n```sh\n0x -o my-app.js\n```\n\nAutomatically execute profiling command against the first\nport opened by profiled process:\n\n```sh\n0x -P 'autocannon localhost:$PORT' my-app.js\n```\n\nUse a custom node executable:\n\n```sh\n0x -- /path/to/node my-app.js\n```\n\nPass custom arguments to node:\n\n```sh\n0x -- node --zero-fill-buffers my-app.js\n```\n\n## Generating\n\nWhen ready to generate a flamegraph, send a SIGINT.\n\nThe simplest way to do this is pressing CTRL+C.\n\nWhen `0x` catches the SIGINT, it process the stacks and\ngenerates a profile folder (`<pid>.0x`), containing `flamegraph.html`.\n\n## The UI\n\nThe `flamegraph.html` file contains the 0x UI, which is explained in\n[docs/ui.md](docs/ui.md).\n\n## Production Servers\n\nA lightweight, production server friendly, approach to generating a\nflamegraph is described in [docs/production-servers.md](docs/production-servers.md).\n\n## The Profile Folder\n\nBy default, a Profile Folder will be created and named after the PID, e.g.\n`3866.0x` (we can set this name manually using the `--output-dir` flag).\n\nThe Profile Folder is explained in more detail in [docs/profile-folder.md](docs/profile-folder.md)\n\n## Example\n\nClone this repo, run `npm i -g` and from the repo root run\n\n```sh\n0x examples/rest-api\n```\n\nIn another tab run\n\n```sh\nnpm run stress-rest-example\n```\n\nTo put some load on the rest server, once that's done\nuse ctrl + c to kill the server.\n\n## Command Line API\n\n### --help | -h\n\nPrint usage info.\n\n### --open | -o\n\nOpen the flamegraph in the browser using `open` or `xdg-open` (see\nhttps://www.npmjs.com/package/open for details).\n\n### --on-port | -P\n\nRun a given command and then generate the flamegraph.\nThe command as specified has access to a `$PORT` variable.\nThe `$PORT` variable is set according to the first port that\nprofiled process opens.\n\nFor instance, here's an example of using [autocannon](http://npm.im/autocannon)\nto load-test the process:\n\n```sh\n0x -P 'autocannon localhost:$PORT' app.js\n```\n\nWhen the load-test completes, the profiled processed will be\nsent a SIGINT and the flamegraph will be automatically generated.\n\nRemember to use single quotes to avoid bash interpolation,\nor else escape variable (e.g. `0x -P \"autocannon localhost:$PORT\" app.js`\nwon't work wheras `0x -P \"autocannon localhost:\\$PORT\" app.js` will).\n\nNote: On Windows interpolation usually occurs with `%PORT%`, however\nin this case the dollar-prefix `$PORT` is the correct syntax\n(because the interpolation is not shell based).\n\nDefault: ''\n\n### --name\n\nThe name of the HTML file, without the .html extension\nCan be set to - to write HTML to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`,\ne.g. `--name=-`).\n\nIf either this flag or `--output-html-file` is set to `-`\nthen the HTML will go to STDOUT.\n\nDefault: flamegraph\n\n### ---title\n\nSet the title to display in the flamegraph UI.\n\nDefault: the command that 0x ran to start the process\n\n### --output-dir | -D\n\nSpecify artifact output directory. This can be specified in template\nform with possible variables being `{pid}`, `{timestamp}`, `{name}`\n(based on the `--name` flag) and `{outputDir}`(variables\nmust be specified without whitespace, e.g. `{ pid }` is not supported).\n\nDefault: `{pid}.0x`\n\n### --output-html | -F\n\nSpecify destination of the generated flamegraph HTML file.\nThis can be specified in template form with possible variables\nbeing `{pid}`, `{timestamp}`, `{name}` (based on the `--name` flag) and\n`{outputDir}` (variables must be specified without whitespace,\ne.g. `{ pid }` is not supported). It can also be set to `-` to\nsend the HTML output to STDOUT (note\ndue to the nature of CLI argument parsing, this must be set using `=`,\ne.g. `--output-html=-`).\n\nIf either this flag or `--name` is set to `-`\nthen the HTML will go to STDOUT.\n\nDefault: `{outputDir}/{name}.html`\n\n### --kernel-tracing\n\nUse an OS kernel tracing tool (perf on Linux or\ndtrace on macOS and SmartOS). This will capture\nnative stack frames (C++ modules and Libuv I/O),\nbut may result in missing stacks on Node 8.\n\nSee [docs/kernel-tracing.md](docs/kernel-tracing.md) for more information.\n\nDefault: false\n\n### --quiet | -q\n\nLimit output, the only output will be fatal errors or\nthe path to the `flamegraph.html` upon successful generation.\n\nDefault: false\n\n### --silent | -s\n\nSuppress all output, except fatal errors.\n\nDefault: false\n\n### --collect-only\n\nDon't generate the flamegraph, only create the Profile Folder,\nwith relevant outputs.\n\nDefault: false\n\n### --visualize-only\n\nSupply a path to a profile folder to build or rebuild visualization\nfrom original stacks.\n\nDefault: undefined\n\n### --visualize-cpu-profile\n\nSupply a path to a CPU profile. See `examples/cpu-profile` for an example.\n\n[CPU Profile](https://developers.google.com/web/tools/chrome-devtools/rendering-tools/js-execution) output does not have as much information but it can be exported from Chrome Devtools in the browser. There's also an automated headless tool for doing so: [automated-chrome-profiling](https://github.com/paulirish/automated-chrome-profiling). For creating Node.js Cpu Profiles in Node see [v8-profiler](https://github.com/node-inspector/v8-profiler) or [v8-profiler-next](https://github.com/hyj1991/v8-profiler-next).\n\nDefault: undefined\n\n### --kernel-tracing-debug\n\nShow output from DTrace or perf(1) tools.\n\nDefault: false\n\n### --tree-debug\n\nSave the intermediate tree representation of captured trace output to a JSON\nfile.\n\nDefault: false\n\n## Programmatic API\n\n0x can also be required as a Node module and scripted:\n\n```js\nconst zeroEks = require('0x')\nconst path = require('path')\n\nasync function capture () {\n  const opts = {\n    argv: [path.join(__dirname, 'my-app.js'), '--my-flag', '\"value for my flag\"'],\n    workingDir: __dirname\n  }\n  try {\n    const file = await zeroEks(opts)\n    console.log(`flamegraph in ${file}`)\n  } catch (e) {\n    console.error(e)\n  }\n}\n\ncapture()\n\n```\n\nThe Programmatic API is detailed in [docs/api.md](docs/api.md).\n\n## Troubleshooting\n\n### Memory Issues\n\nVery complex applications with lots of stacks may hit memory issues.\n\nThe `--stack-size` flag can be used to set the memory to the maximum 8GB\nin order to work around this when profiling:\n\n```\nnode --stack-size=8024 $(which 0x) my-app.js\n```\n\nThere may still be a problem opening the flamegraph in Chrome. The same work\naround can be used by opening Chrome from the command line (platform dependent)\nand nesting the `--stack-size` flag within the `--js-flags` flag:\n`--js-flags=\"--stack-size 8024\"`.\n\n## Debugging\n\n`DEBUG=0x* 0x my-app.js`\n\n## Alternatives\n\n* <https://github.com/brendangregg/FlameGraph> (perl)\n* <https://www.npmjs.com/package/stackvis> (node)\n* <https://www.npmjs.com/package/d3-flame-graph> (node)\n\n## Acknowledgements\n\nSponsored by [nearForm](http://nearform.com)\n\nThis tool is inspired from various info and code sources\nand would have taken much longer without the following people and\ntheir Open Source/Info Sharing efforts:\n\n* Thorsten Lorenz (<http://thlorenz.com/>)\n* Dave Pacheco (<http://dtrace.org/blogs/dap/about/>)\n* Brendan Gregg (<http://www.brendangregg.com/>)\n* Martin Spier (<http://martinspier.io/>)\n\n## License\n\nMIT\n","maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"}],"time":{"modified":"2019-10-10T09:48:16.419Z","created":"2016-02-14T16:10:18.507Z","1.0.0":"2016-02-14T16:10:18.507Z","2.0.0":"2016-03-02T18:19:00.538Z","2.0.1":"2016-03-03T01:49:26.733Z","2.0.2":"2016-03-03T01:54:00.155Z","2.0.3":"2016-03-03T01:58:01.641Z","2.0.4":"2016-03-03T03:32:22.723Z","2.0.5":"2016-03-03T03:51:53.940Z","2.0.6":"2016-03-10T17:57:23.721Z","2.1.0":"2016-03-15T13:39:52.486Z","2.2.0":"2016-03-20T17:39:15.305Z","2.2.1":"2016-03-22T12:00:24.653Z","2.2.2":"2016-03-23T16:55:58.568Z","2.2.3":"2016-03-23T18:17:51.458Z","2.2.4":"2016-03-23T22:54:44.941Z","2.2.5":"2016-03-24T16:46:44.238Z","2.2.6":"2016-03-24T17:09:01.412Z","2.2.8":"2016-08-12T22:36:40.934Z","2.2.9":"2016-09-17T14:43:16.695Z","2.2.10":"2016-09-19T17:12:07.556Z","2.2.11":"2016-09-19T17:37:31.429Z","2.2.12":"2016-10-18T13:03:29.578Z","2.2.13":"2016-10-30T15:00:49.067Z","2.2.14":"2016-11-03T12:14:55.824Z","2.2.15":"2016-12-02T18:05:57.881Z","2.3.0":"2016-12-07T16:18:43.196Z","2.3.1":"2017-01-22T20:50:37.687Z","2.4.0":"2017-01-22T22:40:54.918Z","2.4.1":"2017-03-17T10:23:59.387Z","2.4.2":"2017-04-03T07:09:32.231Z","2.4.3":"2017-08-04T17:07:47.724Z","2.4.4":"2017-08-08T18:01:38.216Z","2.5.0":"2017-09-28T06:11:34.023Z","2.5.1":"2017-10-03T22:23:58.081Z","2.5.2":"2017-10-04T18:15:42.509Z","2.5.3":"2017-10-07T16:35:54.163Z","3.0.0-rc1":"2018-01-18T14:16:04.274Z","3.0.0-rc2":"2018-01-18T19:51:30.999Z","3.0.0-rc3":"2018-01-18T20:14:09.383Z","3.0.0":"2018-01-19T23:16:22.879Z","3.0.1":"2018-01-22T15:08:06.456Z","3.0.2":"2018-01-22T16:16:31.796Z","3.1.0":"2018-01-22T19:56:46.667Z","3.1.1":"2018-02-01T18:27:16.894Z","3.1.2":"2018-02-05T15:23:01.059Z","3.2.0":"2018-02-06T14:05:29.953Z","3.3.0-rc1":"2018-02-07T19:17:24.583Z","3.3.0-rc2":"2018-02-08T00:19:34.348Z","3.3.0-rc3":"2018-02-08T00:24:47.948Z","3.3.0-rc4":"2018-02-08T00:48:32.817Z","3.3.0-rc5":"2018-02-08T00:58:58.460Z","3.3.0":"2018-02-09T02:55:00.820Z","3.4.0":"2018-02-12T16:57:19.585Z","3.4.1":"2018-02-26T22:29:00.587Z","3.4.2":"2018-02-26T22:30:47.702Z","4.0.0-rc1":"2018-03-14T00:30:03.792Z","4.0.0-rc2":"2018-03-14T08:54:16.158Z","4.0.0-rc3":"2018-03-14T15:32:17.353Z","4.0.0-rc4":"2018-03-14T21:30:20.181Z","4.0.0-rc5":"2018-03-14T22:20:54.022Z","4.0.0-rc6":"2018-03-16T21:08:36.674Z","4.0.0":"2018-03-21T03:20:20.151Z","4.0.1":"2018-03-21T10:25:29.438Z","4.0.2":"2018-03-24T06:34:03.950Z","4.0.3":"2018-03-24T13:46:06.802Z","3.3.1":"2018-03-24T14:02:25.877Z","2.5.4":"2018-03-24T14:04:07.387Z","4.0.4":"2018-03-30T12:21:12.011Z","4.0.5":"2018-04-02T17:44:03.922Z","4.0.6":"2018-04-02T19:15:31.529Z","4.0.7":"2018-04-03T14:10:45.936Z","4.0.8":"2018-04-08T21:33:20.348Z","4.0.9":"2018-04-12T20:15:17.745Z","4.0.10":"2018-05-09T13:24:42.044Z","4.0.11":"2018-05-10T08:17:30.756Z","4.0.12":"2018-07-04T10:13:30.224Z","4.1.0":"2018-07-17T14:08:05.169Z","4.1.1":"2018-07-24T18:37:06.289Z","4.1.2":"2018-07-24T21:39:34.034Z","4.1.3":"2018-08-03T10:23:42.911Z","4.1.4":"2018-08-10T15:45:19.419Z","4.1.5":"2018-08-14T09:23:43.090Z","4.1.6":"2018-08-22T15:13:16.058Z","4.2.0":"2018-08-24T13:57:35.355Z","4.3.0":"2018-08-28T15:14:55.621Z","4.4.0":"2018-09-18T15:32:52.349Z","4.4.1":"2018-09-19T09:29:37.624Z","4.4.2":"2018-09-19T12:57:13.135Z","4.4.3":"2018-09-19T17:57:04.831Z","4.4.4":"2018-09-24T22:34:20.699Z","4.4.5":"2018-09-27T17:33:20.245Z","4.5.0":"2018-10-02T14:01:53.223Z","4.5.1":"2018-10-08T16:37:52.383Z","4.5.2":"2018-10-19T13:43:53.267Z","4.5.3":"2018-10-25T14:03:35.339Z","4.6.0":"2018-11-27T10:44:08.894Z","4.7.0":"2018-11-28T16:10:35.767Z","4.7.1":"2018-12-03T14:04:41.806Z","4.7.2":"2018-12-04T14:51:30.418Z","4.7.3":"2019-02-24T18:03:51.300Z","4.7.4":"2019-03-15T11:51:18.397Z","4.7.5":"2019-03-29T15:50:41.621Z","4.8.0":"2019-04-23T15:34:16.554Z","4.8.1":"2019-04-25T10:54:26.723Z","4.8.2":"2019-04-25T11:09:47.866Z","4.9.0":"2019-10-10T09:46:09.698Z","4.9.1":"2019-10-10T09:48:13.637Z"},"author":{"name":"David Mark Clements"},"license":"MIT","readmeFilename":"readme.md","homepage":"https://github.com/davidmarkclements/0x#readme","repository":{"type":"git","url":"git+https://github.com/davidmarkclements/0x.git"},"bugs":{"url":"https://github.com/davidmarkclements/0x/issues"},"users":{"ezodude":true,"jamesjnadeau":true,"samhagman":true,"columbennett":true,"wmhilton":true,"lestad":true,"briandela":true,"ferrari":true,"robmcguinness":true,"daviddias":true,"matteo.collina":true,"mhaidarh":true,"jamescostian":true,"jrthib":true,"ojkelly":true,"bajtos":true,"dpjayasekara":true,"ewdchn":true,"ruxandrafed":true,"ruyadorno":true,"hy19841214":true,"mjasso":true},"_etag":"W/\"f9d3bc9a8e1278476483a0d3f52b7d0f\"","_lastModified":"Thu, 10 Oct 2019 09:48:20 GMT"}