{"_id":"ndarray-crout-decomposition","_rev":"11-49dae8cbee06796ab9d5f50bd17bd9ce","name":"ndarray-crout-decomposition","description":"LU decomposition using the crout algorithm","dist-tags":{"latest":"1.1.0"},"versions":{"1.0.0":{"name":"ndarray-crout-decomposition","version":"1.0.0","description":"LU decomposition using the crout algorithm","main":"index.js","dependencies":{},"devDependencies":{"tape":"^2.12.1","ndarray":"^1.0.14","zeros":"~0.0.0"},"scripts":{"test":"tape test/*.js"},"repository":{"type":"git","url":"git://github.com/substack/ndarray-crout-decomposition.git"},"homepage":"https://github.com/substack/ndarray-crout-decomposition","keywords":["ndarray","crout","matrix","lu","decomposition","linalg","linear","algebra","math"],"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/15","firefox/latest","firefox/nightly","chrome/15","chrome/latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"bugs":{"url":"https://github.com/substack/ndarray-crout-decomposition/issues"},"_id":"ndarray-crout-decomposition@1.0.0","dist":{"shasum":"d0b181a2ac1266467d5a94e9340dba8309bedf9d","tarball":"https://registry.npmjs.org/ndarray-crout-decomposition/-/ndarray-crout-decomposition-1.0.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"substack","email":"mail@substack.net"},"maintainers":[{"name":"substack","email":"mail@substack.net"}],"directories":{}},"1.0.1":{"name":"ndarray-crout-decomposition","version":"1.0.1","description":"LU decomposition using the crout algorithm","main":"index.js","dependencies":{},"devDependencies":{"tape":"^2.12.1","ndarray":"^1.0.14","zeros":"~0.0.0"},"scripts":{"test":"tape test/*.js"},"repository":{"type":"git","url":"git://github.com/substack/ndarray-crout-decomposition.git"},"homepage":"https://github.com/substack/ndarray-crout-decomposition","keywords":["ndarray","crout","matrix","lu","decomposition","linalg","linear","algebra","math"],"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/15","firefox/latest","firefox/nightly","chrome/15","chrome/latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"bugs":{"url":"https://github.com/substack/ndarray-crout-decomposition/issues"},"_id":"ndarray-crout-decomposition@1.0.1","dist":{"shasum":"8b2d569f31fadb594b9aa87e69684748abe47448","tarball":"https://registry.npmjs.org/ndarray-crout-decomposition/-/ndarray-crout-decomposition-1.0.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"substack","email":"mail@substack.net"},"maintainers":[{"name":"substack","email":"mail@substack.net"}],"directories":{}},"1.1.0":{"name":"ndarray-crout-decomposition","version":"1.1.0","description":"LU decomposition using the crout algorithm","main":"index.js","dependencies":{},"devDependencies":{"tape":"^2.12.1","ndarray":"^1.0.14","zeros":"~0.0.0"},"scripts":{"test":"tape test/*.js"},"repository":{"type":"git","url":"git://github.com/substack/ndarray-crout-decomposition.git"},"homepage":"https://github.com/substack/ndarray-crout-decomposition","keywords":["ndarray","crout","matrix","lu","decomposition","linalg","linear","algebra","math"],"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/15","firefox/latest","firefox/nightly","chrome/15","chrome/latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"bugs":{"url":"https://github.com/substack/ndarray-crout-decomposition/issues"},"_id":"ndarray-crout-decomposition@1.1.0","dist":{"shasum":"67fb643edeafeae85edccdbd745af7d2e6bde17a","tarball":"https://registry.npmjs.org/ndarray-crout-decomposition/-/ndarray-crout-decomposition-1.1.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"substack","email":"mail@substack.net"},"maintainers":[{"name":"substack","email":"mail@substack.net"},{"name":"mikolalysenko","email":"mikolalysenko@gmail.com"}],"directories":{}}},"readme":"# ndarray-crout-decomposition\n\nLU decomposition using the crout algorithm\n\n[![testling badge](https://ci.testling.com/substack/ndarray-crout-decomposition.png)](https://ci.testling.com/substack/ndarray-crout-decomposition)\n\n[![build status](https://secure.travis-ci.org/substack/ndarray-crout-decomposition.png)](http://travis-ci.org/substack/ndarray-crout-decomposition)\n\n# example\n\n``` js\nvar ndarray = require('ndarray');\nvar zeros = require('zeros');\nvar show = require('ndarray-show');\nvar crout = require('ndarray-crout-decomposition');\n\nvar A = ndarray([ 4, 3, 6, 3 ], [ 2, 2 ]);\nvar L = zeros([ 2, 2 ]);\nvar U = zeros([ 2, 2 ]);\n\ncrout(A, L, U);\nconsole.log('L=\\n' + show(L));\nconsole.log('U=\\n' + show(U));\n```\n\noutput:\n\n```\nL=\n   4.000    0.000\n   3.000   -1.500\nU=\n   1.000    1.500\n   0.000    1.000\n```\n\nor to save space, you can use a single matrix to store the L and U values:\n\n``` js\nvar ndarray = require('ndarray');\nvar zeros = require('zeros');\nvar show = require('ndarray-show');\nvar crout = require('ndarray-crout-decomposition');\n\nvar A = ndarray([ 4, 3, 6, 3 ], [ 2, 2 ]);\nvar LU = zeros([ 2, 2 ]);\n\ncrout(A, LU);\nconsole.log('LU=\\n' + show(LU));\n```\n\noutput:\n\n```\nLU=\n   4.000    1.500\n   3.000   -1.500\n```\n\n# methods\n\n``` js\nvar crout = require('ndarray-crout-decomposition')\n```\n\n## var ok = crout(A, L, U)\n\nDecompose the matrix `A` into `L` and `U`, mutating `L` and `U` in-place.\n\n`A` is not modified.\n\nIf you don't pass in a `U` matrix, `L` will be used to store both the `L` and\n`U` values, omitting the diagonal of ones from `U` to make room.\n\nIf `A` was non-square or the algorithm could not find a solution, `ok` is\n`false`. Otherwise `ok` is `true`.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install ndarray-crout-decomposition\n```\n\n# license\n\nMIT\n","maintainers":[{"name":"substack","email":"substack@gmail.com"},{"name":"mikolalysenko","email":"mikolalysenko@gmail.com"},{"name":"rreusser","email":"rsreusser@gmail.com"},{"name":"jaspervdg","email":"th.v.d.gronde@hccnet.nl"},{"name":"planeshifter","email":"pgb@andrew.cmu.edu"},{"name":"hughsk","email":"hughskennedy@gmail.com"}],"time":{"modified":"2015-07-10T12:14:37.714Z","created":"2014-05-27T12:52:00.107Z","1.0.0":"2014-05-27T12:52:00.107Z","1.0.1":"2014-05-28T20:02:59.734Z","1.1.0":"2014-05-29T23:22:54.878Z"},"homepage":"https://github.com/substack/ndarray-crout-decomposition","keywords":["ndarray","crout","matrix","lu","decomposition","linalg","linear","algebra","math"],"repository":{"type":"git","url":"git://github.com/substack/ndarray-crout-decomposition.git"},"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"bugs":{"url":"https://github.com/substack/ndarray-crout-decomposition/issues"},"license":"MIT","readmeFilename":"readme.markdown","_attachments":{},"_etag":"W/\"a2ff17308a4fb6c55e81db472524eb0e\"","_lastModified":"Sun, 27 May 2018 09:13:37 GMT"}