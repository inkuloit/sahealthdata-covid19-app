"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _history = require("history");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Wizard =
/*#__PURE__*/
function (_Component) {
  _inherits(Wizard, _Component);

  function Wizard() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Wizard);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Wizard)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      activeStepIndex: _this.props.defaultActiveStepIndex
    });

    _defineProperty(_assertThisInitialized(_this), "firstStep", 0);

    _defineProperty(_assertThisInitialized(_this), "goToPrevStep", function () {
      var activeStepIndex = _this.activeStepIndex;

      _this.goToStep(activeStepIndex - 1);
    });

    _defineProperty(_assertThisInitialized(_this), "goToNextStep", function () {
      var activeStepIndex = _this.activeStepIndex;

      _this.goToStep(activeStepIndex + 1);
    });

    _defineProperty(_assertThisInitialized(_this), "goToStep", function (index) {
      var _this$state = _this.state,
          totalSteps = _this$state.totalSteps,
          steps = _this$state.steps;
      var onWizardFinished = _this.props.onWizardFinished;
      var lastStep = index < _this.firstStep || index > totalSteps - 1;
      if (lastStep) return onWizardFinished();

      _this.setActiveStepIndex(index);

      var path = steps[index].id;

      _this.push(path);
    });

    return _this;
  }

  _createClass(Wizard, [{
    key: "getChildContext",
    value: function getChildContext() {
      var totalSteps = this.state.totalSteps;
      var activeStepIndex = this.activeStepIndex;
      return {
        activeStepIndex: activeStepIndex,
        goToNextStep: this.goToNextStep,
        goToPrevStep: this.goToPrevStep,
        goToStep: this.goToStep,
        totalSteps: totalSteps
      };
    }
  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(newProps) {
      if (newProps.children !== this.props.children) {
        this.setSteps();
      }
    }
  }, {
    key: "UNSAFE_componentWillMount",
    value: function UNSAFE_componentWillMount() {
      this.initWizard();
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var _this$props = this.props,
          baseUrl = _this$props.baseUrl,
          history = _this$props.history;
      var steps = this.state.steps;
      this.unlisten = history.listen(function (_ref, action) {
        var pathname = _ref.pathname;
        var noBrowserNavigationKeysPressed = action !== 'POP';
        if (noBrowserNavigationKeysPressed) return;
        var path = pathname.replace("".concat(baseUrl, "/"), '');
        var stepIndex = steps.findIndex(function (step) {
          return step.id === path;
        });

        _this2.setActiveStepIndex(stepIndex);
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unlisten();
    }
  }, {
    key: "initWizard",
    value: function initWizard() {
      var activeStepIndex = this.activeStepIndex;
      var steps = this.setSteps();
      if (steps.length === 0) return;
      var id = steps[activeStepIndex].id;
      this.replace(id);
    }
  }, {
    key: "setSteps",
    value: function setSteps() {
      var children = this.props.children;
      var steps = [];

      _react.Children.forEach(children, function (child) {
        if (child && child.props.isSteps) {
          var grandchildren = child.props.children;

          _react.Children.forEach(grandchildren, function (child) {
            if (child && child.props.isStep) {
              var id = child.props.id;
              steps.push({
                id: id
              });
            }
          });
        }
      });

      this.setState({
        steps: steps,
        totalSteps: steps.length
      });
      return steps;
    }
  }, {
    key: "isUncontrolled",
    value: function isUncontrolled() {
      var activeStepIndex = this.props.activeStepIndex;
      return typeof activeStepIndex === 'undefined';
    }
  }, {
    key: "push",
    value: function push(path) {
      var _this$props2 = this.props,
          baseUrl = _this$props2.baseUrl,
          history = _this$props2.history;
      history.push("".concat(baseUrl, "/").concat(path));
    }
  }, {
    key: "replace",
    value: function replace(path) {
      var _this$props3 = this.props,
          baseUrl = _this$props3.baseUrl,
          history = _this$props3.history;
      history.replace("".concat(baseUrl, "/").concat(path));
    }
  }, {
    key: "setActiveStepIndex",
    value: function setActiveStepIndex(index) {
      var onStepChanged = this.props.onStepChanged;
      var steps = this.state.steps;
      var isUncontrolled = this.isUncontrolled();

      if (isUncontrolled) {
        this.setState({
          activeStepIndex: index
        });
      }

      onStepChanged({
        activeStepIndex: index,
        step: steps[index]
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
          children = _this$props4.children,
          render = _this$props4.render;

      if (render) {
        return render;
      }

      return children;
    }
  }, {
    key: "activeStepIndex",
    get: function get() {
      return this.isUncontrolled() ? this.state.activeStepIndex : this.props.activeStepIndex;
    }
  }]);

  return Wizard;
}(_react.Component);

_defineProperty(Wizard, "childContextTypes", {
  activeStepIndex: _propTypes["default"].number.isRequired,
  goToNextStep: _propTypes["default"].func.isRequired,
  goToPrevStep: _propTypes["default"].func.isRequired,
  goToStep: _propTypes["default"].func.isRequired,
  totalSteps: _propTypes["default"].number.isRequired
});

_defineProperty(Wizard, "propTypes", {
  activeStepIndex: _propTypes["default"].number,
  baseUrl: _propTypes["default"].string,
  children: _propTypes["default"].node.isRequired,
  defaultActiveStepIndex: _propTypes["default"].number,
  history: _propTypes["default"].object,
  onStepChanged: _propTypes["default"].func,
  onWizardFinished: _propTypes["default"].func,
  render: _propTypes["default"].func
});

_defineProperty(Wizard, "defaultProps", {
  defaultActiveStepIndex: 0,
  history: (0, _history.createMemoryHistory)(),
  onStepChanged: function onStepChanged() {},
  onWizardFinished: function onWizardFinished() {}
});

var _default = Wizard;
exports["default"] = _default;