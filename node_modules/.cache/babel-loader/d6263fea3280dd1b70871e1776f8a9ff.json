{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport config from './config';\nimport PrivateRoute from './PrivateRoute'; // providers\n\nimport { ProjectsProvider, CountriesProvider } from 'providers'; // containers\n\nimport Navigation from 'containers/Navigation';\nimport Footer from 'containers/Footer'; // auth pages/routes\n\nimport Login from 'pages/Auth/Login'; // private routes\n\nimport Dashboard from 'pages/cPanel/Dashboard';\nimport CaseCapture from 'pages/cPanel/Cases/Capture';\nimport BulkCapture from 'pages/cPanel/Cases/BulkCapture';\nimport AccountProfile from 'pages/cPanel/Account/Profile'; // pages/routes\n\nimport Projections from 'pages/Projections';\nimport { AuthContext } from 'context/auth';\n\nconst App = () => {\n  const [project, setProject] = useState({});\n  const [country, setCountry] = useState({});\n  const [authTokens, setAuthTokens] = useState();\n  const isLogin = window.location.pathname.indexOf('/login') !== -1;\n  useEffect(() => {\n    const fetchData = async () => {\n      const project = await ProjectsProvider.get(config.project.id);\n      const country = await CountriesProvider.get(config.project.company);\n      setProject(project);\n      setCountry(country);\n    };\n\n    fetchData();\n  }, []);\n\n  const setTokens = data => {\n    localStorage.setItem('tokens', JSON.stringify(data));\n    setAuthTokens(data);\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      authTokens,\n      setAuthTokens: setTokens\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: process.env.PUBLIC_URL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }, !isLogin && /*#__PURE__*/React.createElement(Navigation, Object.assign({\n    country: country\n  }, project, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content content-fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Redirect, {\n    exact: true,\n    from: \"/\",\n    to: \"/projections\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/projections\",\n    component: Projections,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/cpanel/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/cpanel/dashboard\",\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/cpanel/cases/capture\",\n    component: CaseCapture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/cpanel/cases/bulk-capture\",\n    component: BulkCapture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/cpanel/account/profile\",\n    component: AccountProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }))), !isLogin && /*#__PURE__*/React.createElement(Footer, Object.assign({\n    country: country\n  }, project, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 18\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Redirect","Switch","config","PrivateRoute","ProjectsProvider","CountriesProvider","Navigation","Footer","Login","Dashboard","CaseCapture","BulkCapture","AccountProfile","Projections","AuthContext","App","project","setProject","country","setCountry","authTokens","setAuthTokens","isLogin","window","location","pathname","indexOf","fetchData","get","id","company","setTokens","data","localStorage","setItem","JSON","stringify","process","env","PUBLIC_URL"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,MAAnD,QAAiE,kBAAjE;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,WAApD,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,kBAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACyB,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,EAA5C;AACA,QAAM2B,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,QAAjC,MAA+C,CAAC,CAAhE;AAEA9B,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM+B,SAAS,GAAG,YAAY;AAC7B,YAAMX,OAAO,GAAG,MAAMZ,gBAAgB,CAACwB,GAAjB,CAAqB1B,MAAM,CAACc,OAAP,CAAea,EAApC,CAAtB;AACA,YAAMX,OAAO,GAAG,MAAMb,iBAAiB,CAACuB,GAAlB,CAAsB1B,MAAM,CAACc,OAAP,CAAec,OAArC,CAAtB;AACAb,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,MAAAA,UAAU,CAACD,OAAD,CAAV;AACA,KALD;;AAMAS,IAAAA,SAAS;AACT,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMI,SAAS,GAAIC,IAAD,IAAU;AAC3BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA/B;AACAX,IAAAA,aAAa,CAACW,IAAD,CAAb;AACA,GAHD;;AAKA,sBACC,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEZ,MAAAA,UAAF;AAAcC,MAAAA,aAAa,EAAEU;AAA7B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEM,OAAO,CAACC,GAAR,CAAYC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAACjB,OAAD,iBAAY,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEJ;AAArB,KAAkCF,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADd,eAEC;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,QAAD;AAAU,IAAA,KAAK,MAAf;AAAgB,IAAA,IAAI,EAAC,GAArB;AAAyB,IAAA,EAAE,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,cAAlB;AAAiC,IAAA,SAAS,EAAEH,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,eAAlB;AAAkC,IAAA,SAAS,EAAEL,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAIC,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,mBAAzB;AAA6C,IAAA,SAAS,EAAEC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,eAKC,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,uBAAzB;AAAiD,IAAA,SAAS,EAAEC,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,eAMC,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,4BAAzB;AAAsD,IAAA,SAAS,EAAEC,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,eAOC,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,yBAAzB;AAAmD,IAAA,SAAS,EAAEC,cAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CADD,CAFD,EAaE,CAACU,OAAD,iBAAY,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ;AAAjB,KAA8BF,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbd,CADD,CADD;AAmBA,CAxCD;;AA0CA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nimport config from './config';\nimport PrivateRoute from './PrivateRoute';\n\n// providers\nimport { ProjectsProvider, CountriesProvider } from 'providers';\n\n// containers\nimport Navigation from 'containers/Navigation';\nimport Footer from 'containers/Footer';\n\n// auth pages/routes\nimport Login from 'pages/Auth/Login';\n\n// private routes\nimport Dashboard from 'pages/cPanel/Dashboard';\nimport CaseCapture from 'pages/cPanel/Cases/Capture';\nimport BulkCapture from 'pages/cPanel/Cases/BulkCapture';\nimport AccountProfile from 'pages/cPanel/Account/Profile';\n\n// pages/routes\nimport Projections from 'pages/Projections';\n\nimport { AuthContext } from 'context/auth';\n\nconst App = () => {\n\tconst [project, setProject] = useState({});\n\tconst [country, setCountry] = useState({});\n\tconst [authTokens, setAuthTokens] = useState();\n\tconst isLogin = window.location.pathname.indexOf('/login') !== -1;\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst project = await ProjectsProvider.get(config.project.id);\n\t\t\tconst country = await CountriesProvider.get(config.project.company);\n\t\t\tsetProject(project);\n\t\t\tsetCountry(country);\n\t\t};\n\t\tfetchData();\n\t}, []);\n\n\tconst setTokens = (data) => {\n\t\tlocalStorage.setItem('tokens', JSON.stringify(data));\n\t\tsetAuthTokens(data);\n\t}\n\n\treturn (\n\t\t<AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t{!isLogin && <Navigation country={country} {...project} />}\n\t\t\t\t<div className=\"content content-fixed\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Redirect exact from=\"/\" to=\"/projections\" />\n\t\t\t\t\t\t<Route exact path=\"/projections\" component={Projections} />\n\t\t\t\t\t\t<Route exact path=\"/cpanel/login\" component={Login} />\n\t\t\t\t\t\t<PrivateRoute exact path=\"/cpanel/dashboard\" component={Dashboard} />\n\t\t\t\t\t\t<PrivateRoute exact path=\"/cpanel/cases/capture\" component={CaseCapture} />\n\t\t\t\t\t\t<PrivateRoute exact path=\"/cpanel/cases/bulk-capture\" component={BulkCapture} />\n\t\t\t\t\t\t<PrivateRoute exact path=\"/cpanel/account/profile\" component={AccountProfile} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t\t{!isLogin && <Footer country={country} {...project} />}\n\t\t\t</Router>\n\t\t</AuthContext.Provider>\n\t)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}