{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/pages/Projections.js\";\nimport React, { useState, useEffect } from 'react';\nimport NumberFormat from 'react-number-format';\nimport queryString from 'query-string';\nimport config from '../config';\nimport { Card, CardBody, Container, Col, Row } from 'reactstrap';\nimport { CaseStats, ResourceUseStats, ResourceCountStats, TotalDeathStats } from 'components';\nimport { CountriesProvider, StatsProvider } from 'providers';\n\nconst Projections = () => {\n  const [provinces, setProvinces] = useState([]);\n  const [statSumm, setStatSumm] = useState({});\n  const [province, setProvince] = useState('all');\n  const [view, setView] = useState('provinces');\n  const [loaded, setLoaded] = useState(false);\n  const [query, setQuery] = useState('');\n  document.title = 'Coronavirus Projections - South Africa';\n  useEffect(() => {\n    const fetchData = async () => {\n      let query = '';\n      const provinces = await CountriesProvider.getProvinces(config.project.company);\n\n      if (window.location.search) {\n        const obj = queryString.parse(window.location.search);\n\n        if (obj.p) {\n          const province = provinces.filter(item => item.name === obj.p);\n          setProvince(province[0].name);\n          query = `province_id=${province[0].id}`;\n          setQuery(query);\n          setView('districts');\n        }\n      }\n\n      const statSumm = await StatsProvider.get('resources', 'all', query);\n      setProvinces(provinces);\n      setStatSumm(statSumm[0]);\n      setLoaded(true);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSelectProvince = async e => {\n    const province = e.currentTarget.value;\n    const query = province === 'all' ? '' : `?p=${province}`;\n    window.location = `/projections${query}`;\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"pd-x-0 pd-lg-x-10 pd-xl-x-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-sm-flex align-items-center justify-content-between mg-b-20 mg-lg-b-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"breadcrumb breadcrumb-style1 mg-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Statistics\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    \"aria-current\": \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }\n  }, \"South Africa\"))), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mg-b-0 tx-spacing--1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, \"COVID-19 Projections\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tx-color-03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, province !== 'all' ? ` for ${province}` : ''))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-none d-md-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-label\": \"Example\",\n    className: \"df-example demo-forms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control select2\",\n    onChange: handleSelectProvince,\n    value: province,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    label: \"All Provinces (South Africa)\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"All Provinces\"), provinces.length > 0 && provinces.map(province => /*#__PURE__*/React.createElement(\"option\", {\n    key: province.id,\n    label: province.name,\n    value: province.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 39\n    }\n  }, province.name))))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"row-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    className: \"mg-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mg-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tx-color-04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require('images/icons/info.svg'),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-body mg-l-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mg-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }\n  }, \"The charts below show projected hospital resource use based on COVID-19 deaths. The model assumes continued social distancing until the end of May 2020.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tx-color-03 mg-b-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }\n  }, \"In locations without social distancing measures currently in place, we have assumed they will be in place within seven days of the last model update. If not, the number of deaths and burden on their hospital systems will likely be higher than the model predicts. For answers to other frequently asked questions about the modeling. To view the paper with in-depth analysis and a description of the methods used to produce the projections.\")))))), /*#__PURE__*/React.createElement(Col, {\n    sm: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResourceCountStats, {\n    heading: \"All Beds\",\n    value: statSumm.allbed_mean ? statSumm.allbed_mean : 0,\n    summary: \"Estimated daily unique views per visitor on the ads.\",\n    txColor: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: 6,\n    lg: 4,\n    className: \"mg-t-10 mg-sm-t-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResourceCountStats, {\n    heading: \"Bed Shortages\",\n    value: statSumm.allbed_lower ? statSumm.allbed_lower : 0,\n    summary: \"Estimated daily unique views per visitor on the ads.\",\n    txColor: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: 6,\n    lg: 4,\n    className: \"mg-t-10 mg-sm-t-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResourceCountStats, {\n    heading: \"Mobile Labs\",\n    value: statSumm.mobilab_mean ? statSumm.mobilab_mean : 0,\n    summary: \"Estimated daily unique views per visitor on the ads.\",\n    txColor: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    className: \"mg-t-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResourceUseStats, Object.assign({}, statSumm, {\n    view: view,\n    loaded: loaded,\n    query: query,\n    province: province,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    className: \"mg-t-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DeathsPerDayStats, {\n    view: view,\n    loaded: loaded,\n    query: query,\n    province: province,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    className: \"mg-t-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TotalDeathStats, {\n    view: view,\n    loaded: loaded,\n    query: query,\n    province: province,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    className: \"mg-t-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CaseStats, {\n    view: view,\n    loaded: loaded,\n    query: query,\n    province: province,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default Projections;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/pages/Projections.js"],"names":["React","useState","useEffect","NumberFormat","queryString","config","Card","CardBody","Container","Col","Row","CaseStats","ResourceUseStats","ResourceCountStats","TotalDeathStats","CountriesProvider","StatsProvider","Projections","provinces","setProvinces","statSumm","setStatSumm","province","setProvince","view","setView","loaded","setLoaded","query","setQuery","document","title","fetchData","getProvinces","project","company","window","location","search","obj","parse","p","filter","item","name","id","get","handleSelectProvince","e","currentTarget","value","length","map","require","allbed_mean","allbed_lower","mobilab_mean"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NumberFormat from 'react-number-format';\nimport queryString from 'query-string';\nimport config from '../config';\nimport {\n\tCard,\n\tCardBody,\n\tContainer,\n\tCol,\n\tRow,\n} from 'reactstrap';\nimport {\n\tCaseStats,\n\tResourceUseStats,\n\tResourceCountStats,\n\tTotalDeathStats,\n} from 'components';\nimport { CountriesProvider, StatsProvider } from 'providers';\n\nconst Projections = () => {\n\tconst [provinces, setProvinces] = useState([]);\n\tconst [statSumm, setStatSumm] = useState({});\n\tconst [province, setProvince] = useState('all');\n\tconst [view, setView] = useState('provinces');\n\tconst [loaded, setLoaded] = useState(false);\n\tconst [query, setQuery] = useState('');\n\n\tdocument.title = 'Coronavirus Projections - South Africa';\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tlet query = '';\n\t\t\tconst provinces = await CountriesProvider.getProvinces(config.project.company);\n\t\t\tif (window.location.search) {\n\t\t\t\tconst obj = queryString.parse(window.location.search);\n\t\t\t\tif (obj.p) {\n\t\t\t\t\tconst province = provinces.filter(item => item.name === obj.p);\n\t\t\t\t\tsetProvince(province[0].name);\n\t\t\t\t\tquery = `province_id=${province[0].id}`;\n\t\t\t\t\tsetQuery(query);\n\t\t\t\t\tsetView('districts');\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst statSumm = await StatsProvider.get('resources', 'all', query);\n\t\t\tsetProvinces(provinces);\n\t\t\tsetStatSumm(statSumm[0]);\n\t\t\tsetLoaded(true);\n\t\t};\n\t\tfetchData();\n\t}, []);\n\n\tconst handleSelectProvince = async (e) => {\n\t\tconst province = e.currentTarget.value;\n\t\tconst query = province === 'all' ? '' : `?p=${province}`;\n\t\twindow.location = `/projections${query}`;\n\t};\n\n\treturn (\n\t\t<Container fluid className=\"pd-x-0 pd-lg-x-10 pd-xl-x-0\">\n\t\t\t<div className=\"d-sm-flex align-items-center justify-content-between mg-b-20 mg-lg-b-30\">\n\t\t\t\t<div>\n\t\t\t\t\t<nav aria-label=\"breadcrumb\">\n\t\t\t\t\t\t<ol className=\"breadcrumb breadcrumb-style1 mg-b-10\">\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item\">\n\t\t\t\t\t\t\t\t<a href=\"/\">Statistics</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">South Africa</li>\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<h4 className=\"mg-b-0 tx-spacing--1\">\n\t\t\t\t\t\tCOVID-19 Projections\n\t\t\t\t\t\t<span className=\"tx-color-03\">{province !== 'all' ? ` for ${province}` : ''}</span>\n\t\t\t\t\t</h4>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"d-none d-md-block\">\n\t\t\t\t\t<div data-label=\"Example\" className=\"df-example demo-forms\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclassName=\"form-control select2\"\n\t\t\t\t\t\t\t\tonChange={handleSelectProvince}\n\t\t\t\t\t\t\t\tvalue={province}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option label=\"All Provinces (South Africa)\" value=\"all\">All Provinces</option>\n\t\t\t\t\t\t\t\t{provinces.length > 0\n\t\t\t\t\t\t\t\t\t&& provinces.map(province => <option key={province.id} label={province.name} value={province.name}>{province.name}</option>)}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Row className=\"row-xs\">\n\t\t\t\t<Col lg={12} className=\"mg-b-10\">\n\t\t\t\t\t<Card className=\"mg-b-10\">\n\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t<div className=\"media\">\n\t\t\t\t\t\t\t\t<span className=\"tx-color-04\">\n\t\t\t\t\t\t\t\t\t<img src={require('images/icons/info.svg')} alt=\"\" />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<div className=\"media-body mg-l-20\">\n\t\t\t\t\t\t\t\t\t<h6 className=\"mg-b-10\">The charts below show projected hospital resource use based on COVID-19 deaths. The model assumes continued social distancing until the end of May 2020.</h6>\n\t\t\t\t\t\t\t\t\t<p className=\"tx-color-03 mg-b-0\">\n\t\t\t\t\t\t\t\t\t\tIn locations without social distancing measures currently in place, we have assumed they will be in place within seven days of the last model update. If not, the number of deaths and burden on their hospital systems will likely be higher than the model predicts.\n\t\t\t\t\t\t\t\t\t\tFor answers to other frequently asked questions about the modeling.\n\t\t\t\t\t\t\t\t\t\tTo view the paper with in-depth analysis and a description of the methods used to produce the projections.\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={6} lg={4}>\n\t\t\t\t\t<ResourceCountStats\n\t\t\t\t\t\theading=\"All Beds\"\n\t\t\t\t\t\tvalue={statSumm.allbed_mean ? statSumm.allbed_mean : 0}\n\t\t\t\t\t\tsummary=\"Estimated daily unique views per visitor on the ads.\"\n\t\t\t\t\t\ttxColor=\"primary\"\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={6} lg={4} className=\"mg-t-10 mg-sm-t-0\">\n\t\t\t\t\t<ResourceCountStats\n\t\t\t\t\t\theading=\"Bed Shortages\"\n\t\t\t\t\t\tvalue={statSumm.allbed_lower ? statSumm.allbed_lower : 0}\n\t\t\t\t\t\tsummary=\"Estimated daily unique views per visitor on the ads.\"\n\t\t\t\t\t\ttxColor=\"pink\"\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={6} lg={4} className=\"mg-t-10 mg-sm-t-0\">\n\t\t\t\t\t<ResourceCountStats\n\t\t\t\t\t\theading=\"Mobile Labs\"\n\t\t\t\t\t\tvalue={statSumm.mobilab_mean ? statSumm.mobilab_mean : 0}\n\t\t\t\t\t\tsummary=\"Estimated daily unique views per visitor on the ads.\"\n\t\t\t\t\t\ttxColor=\"teal\"\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col lg={12} className=\"mg-t-10\">\n\t\t\t\t\t<ResourceUseStats\n\t\t\t\t\t\t{...statSumm}\n\t\t\t\t\t\tview={view}\n\t\t\t\t\t\tloaded={loaded}\n\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\tprovince={province}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col lg={12} className=\"mg-t-10\">\n\t\t\t\t\t<DeathsPerDayStats\n\t\t\t\t\t\tview={view}\n\t\t\t\t\t\tloaded={loaded}\n\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\tprovince={province}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col lg={12} className=\"mg-t-10\">\n\t\t\t\t\t<TotalDeathStats\n\t\t\t\t\t\tview={view}\n\t\t\t\t\t\tloaded={loaded}\n\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\tprovince={province}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col lg={12} className=\"mg-t-10\">\n\t\t\t\t\t<CaseStats\n\t\t\t\t\t\tview={view}\n\t\t\t\t\t\tloaded={loaded}\n\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\tprovince={province}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nexport default Projections;\n"]},"metadata":{},"sourceType":"module"}