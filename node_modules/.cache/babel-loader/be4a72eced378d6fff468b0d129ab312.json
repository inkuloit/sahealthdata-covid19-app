{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/components/Charts/LineChart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { Line } from 'react-chartjs-3';\nimport { Loading } from 'components';\n\nconst NoData = () => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 8,\n    className: \"text-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"\\xA0\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"text-center text-muted mt-5 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }, \"Stats here...\")))));\n};\n\nfunction LineChart() {\n  const [loaded, setLoaded] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setChartData(null);\n      setLoaded(true); //         if (user) {\n      //             const labels = [];\n      //             const datasets = [];\n      //             const withdrawals = await TransactionsService.getCountByYearMonthQty('debit');\n      //             const deposits = await TransactionsService.getCountByYearMonthQty('credit');\n      //             if (withdrawals.length > 0) {\n      //                 const withdrawalData = [];\n      //                 withdrawals.map(item => {\n      //                     labels.push(item.year_month);\n      //                     withdrawalData.push(item.quantity);\n      //                     return true;\n      //                 });\n      //                 datasets.push({\n      //                     label: 'Withdrawals',\n      //                     fill: true,\n      //                     lineTension: 0.1,\n      //                     backgroundColor: 'rgba(255, 30, 30, 0.1)',\n      //                     borderColor: 'rgba(255, 30, 30, 1)',\n      //                     borderCapStyle: 'butt',\n      //                     borderDash: [],\n      //                     borderDashOffset: 0.0,\n      //                     borderJoinStyle: 'miter',\n      //                     pointBorderColor: 'rgba(255, 30, 30, 1)',\n      //                     pointBackgroundColor: '#fff',\n      //                     pointBorderWidth: 1,\n      //                     pointHoverRadius: 5,\n      //                     pointHoverBackgroundColor: 'rgba(255, 30, 30, 1)',\n      //                     pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n      //                     pointHoverBorderWidth: 2,\n      //                     pointRadius: 1,\n      //                     pointHitRadius: 10,\n      //                     data: withdrawalData,\n      //                 });\n      //             }\n      //             if (deposits.length > 0) {\n      //                 const depositData = [];\n      //                 deposits.map(item => {\n      //                     depositData.push(item.quantity);\n      //                     if (labels.indexOf(item.year_month) === -1) {\n      //                         labels.push(item.year_month);\n      //                     }\n      //                     return true;\n      //                 });\n      //                 datasets.push({\n      //                     label: 'Deposits',\n      //                     fill: true,\n      //                     lineTension: 0.1,\n      //                     backgroundColor: 'rgba(0, 138, 190, 0.1)',\n      //                     borderColor: 'rgba(0, 138, 190, 1)',\n      //                     borderCapStyle: 'butt',\n      //                     borderDash: [],\n      //                     borderDashOffset: 0.0,\n      //                     borderJoinStyle: 'miter',\n      //                     pointBorderColor: 'rgba(0, 138, 190, 1)',\n      //                     pointBackgroundColor: '#fff',\n      //                     pointBorderWidth: 1,\n      //                     pointHoverRadius: 5,\n      //                     pointHoverBackgroundColor: 'rgba(0, 138, 190, 1)',\n      //                     pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n      //                     pointHoverBorderWidth: 2,\n      //                     pointRadius: 1,\n      //                     pointHitRadius: 10,\n      //                     data: depositData,\n      //                 });\n      //             }\n      //             if (labels.length > 0) {\n      //                 setChartData({ labels, datasets });\n      //             }\n      //             setLoaded(true);\n      //         }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, !loaded && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }), loaded && chartData && /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }), loaded && !chartData && /*#__PURE__*/React.createElement(NoData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 38\n    }\n  }));\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/components/Charts/LineChart.jsx"],"names":["React","useState","useEffect","Col","Row","Line","Loading","NoData","LineChart","loaded","setLoaded","chartData","setChartData","fetchData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,SAAS,EAAC,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,SAAS,EAAC,kCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,CAPJ,CADJ,CADJ;AAiBH,CAlBD;;AAoBA,SAASC,SAAT,GAAqB;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,SAAS,GAAG,YAAY;AAC1BD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,MAAAA,SAAS,CAAC,IAAD,CAAT,CAF0B,CAGlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,KAzED;;AA0EAG,IAAAA,SAAS;AACZ,GA5EQ,EA4EN,EA5EM,CAAT;AA8EA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACJ,MAAD,iBAAW,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,EAEKA,MAAM,IAAIE,SAAV,iBAAuB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF5B,EAGKF,MAAM,IAAI,CAACE,SAAX,iBAAwB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH7B,CADJ;AAOH;;AAED,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { Line } from 'react-chartjs-3';\nimport { Loading } from 'components';\n\nconst NoData = () => {\n    return (\n        <Row>\n            <Col xs={12} className=\"text-center\">\n                <Row>\n                    <Col sm={2} />\n                    <Col xs={12} sm={8} className=\"text-center mt-4\">\n                        &nbsp;\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} className=\"text-center text-muted mt-5 mb-5\">\n                        <strong>Stats here...</strong>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nfunction LineChart() {\n    const [loaded, setLoaded] = useState(false);\n    const [chartData, setChartData] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setChartData(null);\n            setLoaded(true);\n    //         if (user) {\n    //             const labels = [];\n    //             const datasets = [];\n    //             const withdrawals = await TransactionsService.getCountByYearMonthQty('debit');\n    //             const deposits = await TransactionsService.getCountByYearMonthQty('credit');\n    //             if (withdrawals.length > 0) {\n    //                 const withdrawalData = [];\n    //                 withdrawals.map(item => {\n    //                     labels.push(item.year_month);\n    //                     withdrawalData.push(item.quantity);\n    //                     return true;\n    //                 });\n    //                 datasets.push({\n    //                     label: 'Withdrawals',\n    //                     fill: true,\n    //                     lineTension: 0.1,\n    //                     backgroundColor: 'rgba(255, 30, 30, 0.1)',\n    //                     borderColor: 'rgba(255, 30, 30, 1)',\n    //                     borderCapStyle: 'butt',\n    //                     borderDash: [],\n    //                     borderDashOffset: 0.0,\n    //                     borderJoinStyle: 'miter',\n    //                     pointBorderColor: 'rgba(255, 30, 30, 1)',\n    //                     pointBackgroundColor: '#fff',\n    //                     pointBorderWidth: 1,\n    //                     pointHoverRadius: 5,\n    //                     pointHoverBackgroundColor: 'rgba(255, 30, 30, 1)',\n    //                     pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n    //                     pointHoverBorderWidth: 2,\n    //                     pointRadius: 1,\n    //                     pointHitRadius: 10,\n    //                     data: withdrawalData,\n    //                 });\n    //             }\n    //             if (deposits.length > 0) {\n    //                 const depositData = [];\n    //                 deposits.map(item => {\n    //                     depositData.push(item.quantity);\n    //                     if (labels.indexOf(item.year_month) === -1) {\n    //                         labels.push(item.year_month);\n    //                     }\n    //                     return true;\n    //                 });\n    //                 datasets.push({\n    //                     label: 'Deposits',\n    //                     fill: true,\n    //                     lineTension: 0.1,\n    //                     backgroundColor: 'rgba(0, 138, 190, 0.1)',\n    //                     borderColor: 'rgba(0, 138, 190, 1)',\n    //                     borderCapStyle: 'butt',\n    //                     borderDash: [],\n    //                     borderDashOffset: 0.0,\n    //                     borderJoinStyle: 'miter',\n    //                     pointBorderColor: 'rgba(0, 138, 190, 1)',\n    //                     pointBackgroundColor: '#fff',\n    //                     pointBorderWidth: 1,\n    //                     pointHoverRadius: 5,\n    //                     pointHoverBackgroundColor: 'rgba(0, 138, 190, 1)',\n    //                     pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n    //                     pointHoverBorderWidth: 2,\n    //                     pointRadius: 1,\n    //                     pointHitRadius: 10,\n    //                     data: depositData,\n    //                 });\n    //             }\n    //             if (labels.length > 0) {\n    //                 setChartData({ labels, datasets });\n    //             }\n    //             setLoaded(true);\n    //         }\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <React.Fragment>\n            {!loaded && <Loading />}\n            {loaded && chartData && <Line data={chartData} />}\n            {loaded && !chartData && <NoData />}\n        </React.Fragment>\n    );\n}\n\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}