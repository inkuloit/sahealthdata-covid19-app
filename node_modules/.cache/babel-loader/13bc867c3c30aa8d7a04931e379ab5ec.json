{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/components/Charts/BarChart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { Bar } from 'react-chartjs-3';\nimport { Loading } from 'components';\n\nconst NoData = () => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 8,\n    className: \"text-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"\\xA0\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"text-center text-muted mt-5 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }, \"no data available...\")))));\n};\n\nfunction BarChart(props) {\n  const {\n    chartData,\n    redraw,\n    setRedraw\n  } = props;\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoaded(true);\n      setRedraw(false);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, !loaded && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }), loaded && chartData.labels && /*#__PURE__*/React.createElement(Bar, {\n    data: chartData,\n    redraw: redraw,\n    legend: {\n      display: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 44\n    }\n  }), loaded && !chartData.labels && /*#__PURE__*/React.createElement(NoData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 45\n    }\n  }));\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/components/Charts/BarChart.jsx"],"names":["React","useState","useEffect","Col","Row","Bar","Loading","NoData","BarChart","props","chartData","redraw","setRedraw","loaded","setLoaded","fetchData","labels","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,SAAS,EAAC,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,SAAS,EAAC,kCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,CAPJ,CADJ,CADJ;AAiBH,CAlBD;;AAoBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,MAAmCH,KAAzC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,SAAS,GAAG,YAAY;AAC1BD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH,KAHD;;AAIAG,IAAAA,SAAS;AACZ,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACF,MAAD,iBAAW,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,EAEKA,MAAM,IAAIH,SAAS,CAACM,MAApB,iBAA8B,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAEN,SAAX;AAAsB,IAAA,MAAM,EAAEC,MAA9B;AAAsC,IAAA,MAAM,EAAE;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnC,EAGKJ,MAAM,IAAI,CAACH,SAAS,CAACM,MAArB,iBAA+B,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHpC,CADJ;AAOH;;AAED,eAAeR,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { Bar } from 'react-chartjs-3';\nimport { Loading } from 'components';\n\nconst NoData = () => {\n    return (\n        <Row>\n            <Col xs={12} className=\"text-center\">\n                <Row>\n                    <Col sm={2} />\n                    <Col xs={12} sm={8} className=\"text-center mt-4\">\n                        &nbsp;\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} className=\"text-center text-muted mt-5 mb-5\">\n                        <strong>no data available...</strong>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nfunction BarChart(props) {\n    const { chartData, redraw, setRedraw } = props;\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoaded(true);\n            setRedraw(false);\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <React.Fragment>\n            {!loaded && <Loading />}\n            {loaded && chartData.labels && <Bar data={chartData} redraw={redraw} legend={{ display: false }} />}\n            {loaded && !chartData.labels && <NoData />}\n        </React.Fragment>\n    );\n}\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}