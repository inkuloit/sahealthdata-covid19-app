{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/components/Stats/TotalDeathStats.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { Card, CardBody } from 'reactstrap';\nimport { StatsProvider } from 'providers';\n\nconst TotalDeathStats = props => {\n  const {\n    query,\n    loaded,\n    province\n  } = props;\n  const [stats, setStats] = useState({});\n  const [chartData, setChartData] = useState({});\n  const [componentLoaded, setComponentLoaded] = useState(false);\n\n  const fetchData = async () => {\n    if (loaded) {\n      const stats = await StatsProvider.get('cases', 'all', query);\n      const data = await StatsProvider.get('cases', 'deaths_per_day', query);\n      setStats(stats[0]);\n\n      if (data.length > 0) {\n        const labels = [];\n        const datasetData = [];\n        data.map(item => {\n          var caseDate = moment(item.case_date).format(\"MMM DD\");\n          labels.push(caseDate);\n          datasetData.push(item.actual_deaths);\n        });\n        const chartData = {\n          labels,\n          datasets: [{\n            label: 'Actual Deaths',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(255,99,132,0.4)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(255,99,132,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(255,99,132,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: datasetData\n          }]\n        };\n        setChartData(chartData);\n      }\n\n      setComponentLoaded(true);\n    }\n  };\n\n  if (loaded) {\n    if (!componentLoaded) {\n      fetchData();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, componentLoaded && /*#__PURE__*/React.createElement(Card, {\n    className: \"mg-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header pd-t-20 d-sm-flex align-items-start justify-content-between bd-b-0 pd-b-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mg-b-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Total Deaths\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tx-pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, province !== 'all' ? ` for ${province}` : '')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tx-13 tx-color-03 mg-b-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Total COVID-19 deaths projected to April 1, 2020\"))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"pd-y-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-sm-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wd-40 wd-md-50 ht-40 ht-md-50 bg-pink tx-white mg-r-10 mg-md-r-10 d-flex align-items-center justify-content-center rounded op-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-bar-chart-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"18\",\n    y1: \"20\",\n    x2: \"18\",\n    y2: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 251\n    }\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"20\",\n    x2: \"12\",\n    y2: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 296\n    }\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"6\",\n    y1: \"20\",\n    x2: \"6\",\n    y2: \"14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 340\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"tx-20 tx-sm-18 tx-md-24 tx-normal tx-rubik mg-b-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, stats.deaths ? stats.deaths : 0), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"tx-sans tx-uppercase tx-10 tx-spacing-1 tx-color-03 tx-semibold tx-nowrap mg-b-5 mg-md-b-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"COVID-19 deaths\"))))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"pd-y-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mg-t-30\",\n    style: {\n      position: 'relative',\n      minHeight: 300,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    chartData: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default TotalDeathStats;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/components/Stats/TotalDeathStats.js"],"names":["React","useState","moment","Card","CardBody","StatsProvider","TotalDeathStats","props","query","loaded","province","stats","setStats","chartData","setChartData","componentLoaded","setComponentLoaded","fetchData","get","data","length","labels","datasetData","map","item","caseDate","case_date","format","push","actual_deaths","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","deaths","position","minHeight","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Card, CardBody } from 'reactstrap';\nimport { StatsProvider } from 'providers';\n\nconst TotalDeathStats = props => {\n    const { query, loaded, province } = props;\n    const [stats, setStats] = useState({});\n    const [chartData, setChartData] = useState({});\n    const [componentLoaded, setComponentLoaded] = useState(false);\n    \n    const fetchData = async () => {\n        if (loaded) {\n            const stats = await StatsProvider.get('cases', 'all', query);\n            const data = await StatsProvider.get('cases', 'deaths_per_day', query);\n            setStats(stats[0]);\n\n            if (data.length > 0) {\n                const labels = [];\n                const datasetData = [];\n                data.map(item => {\n                    var caseDate = moment(item.case_date).format(\"MMM DD\");\n                    labels.push(caseDate);\n                    datasetData.push(item.actual_deaths);\n                });\n                const chartData = {\n                    labels,\n                    datasets: [{\n                        label: 'Actual Deaths',\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(255,99,132,0.4)',\n                        borderColor: 'rgba(255,99,132,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: 'rgba(255,99,132,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: 'rgba(255,99,132,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: datasetData,\n                    }],\n                };\n                setChartData(chartData);\n            }\n            setComponentLoaded(true);\n        }\n    };\n\n    if (loaded) {\n        if (!componentLoaded) {\n            fetchData();\n        }\n    }\n    return (\n        <React.Fragment>\n            {componentLoaded\n            && (\n            <Card className=\"mg-b-10\">\n                <div className=\"card-header pd-t-20 d-sm-flex align-items-start justify-content-between bd-b-0 pd-b-0\">\n                    <div>\n                        <h6 className=\"mg-b-5\">\n                            Total Deaths\n                            <span className=\"tx-pink\">{province !== 'all' ? ` for ${province}` : ''}</span>\n                        </h6>\n                        <p className=\"tx-13 tx-color-03 mg-b-0\">Total COVID-19 deaths projected to April 1, 2020</p>\n                    </div>\n                </div>\n                <CardBody className=\"pd-y-30\">\n                    <div className=\"d-sm-flex\">\n                        <div className=\"media\">\n                            <div className=\"wd-40 wd-md-50 ht-40 ht-md-50 bg-pink tx-white mg-r-10 mg-md-r-10 d-flex align-items-center justify-content-center rounded op-6\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-bar-chart-2\"><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line></svg>\n                            </div>\n                            <div className=\"media-body\">\n                                <h4 className=\"tx-20 tx-sm-18 tx-md-24 tx-normal tx-rubik mg-b-0\">\n                                    {stats.deaths ? stats.deaths : 0}\n                                </h4>\n                                <h6 className=\"tx-sans tx-uppercase tx-10 tx-spacing-1 tx-color-03 tx-semibold tx-nowrap mg-b-5 mg-md-b-8\">COVID-19 deaths</h6>\n                            </div>\n                        </div>\n                    </div>\n                </CardBody>\n                <CardBody className=\"pd-y-30\">\n                    <div className=\"mg-t-30\" style={{ position: 'relative', minHeight: 300, width: '100%' }}>\n                        <LineChart chartData={chartData} />\n                    </div>\n                </CardBody>\n            </Card>)}\n        </React.Fragment>\n    );\n};\n\nexport default TotalDeathStats;\n"]},"metadata":{},"sourceType":"module"}