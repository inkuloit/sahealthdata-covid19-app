{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/components/Stats/DeathsPerDayStats.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport NumberFormat from 'react-number-format';\nimport { Card, CardBody, Col, Row } from 'reactstrap';\nimport { LineChart } from 'components';\nimport { StatsProvider } from 'providers';\n\nconst DeathsPerDayStats = props => {\n  const {\n    query,\n    loaded,\n    province\n  } = props;\n  const [chartData, setChartData] = useState({});\n  const [componentLoaded, setComponentLoaded] = useState(false);\n\n  const fetchData = async () => {\n    if (loaded) {\n      const data = await StatsProvider.get('cases', 'deaths_per_day', query);\n\n      if (data.length > 0) {\n        const labels = [];\n        const datasetData = [];\n        data.map(item => {\n          var caseDate = moment(item.case_date).format(\"MMM DD\");\n          labels.push(caseDate);\n          datasetData.push(item.actual_deaths);\n          return null;\n        });\n        const chartData = {\n          labels,\n          datasets: [{\n            label: 'Actual Deaths',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(1,104,250,0.4)',\n            borderColor: 'rgba(1,104,250,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(1,104,250,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(1,104,250,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: datasetData\n          }]\n        };\n        setChartData(chartData);\n      }\n\n      setComponentLoaded(true);\n    }\n  };\n\n  if (loaded) {\n    if (!componentLoaded) {\n      fetchData();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, componentLoaded && /*#__PURE__*/React.createElement(Card, {\n    className: \"mg-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header pd-y-20 d-md-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mg-b-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Deaths Per Day\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tx-pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, province !== 'all' ? ` for ${province}` : '')), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline d-flex mg-t-20 mg-sm-t-10 mg-md-t-0 mg-b-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block wd-10 ht-10 bg-df-1 rounded mg-r-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tx-sans tx-uppercase tx-10 tx-medium tx-color-03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"Actual\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item d-flex align-items-center mg-l-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block wd-10 ht-10 bg-df-3 rounded mg-r-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tx-sans tx-uppercase tx-10 tx-medium tx-color-03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, \"Projected\")))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"pos-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"tx-normal tx-rubik tx-spacing--2 mg-b-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(NumberFormat, {\n    displayType: 'text',\n    thousandSeparator: true,\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"tx-uppercase tx-11 tx-spacing-1 tx-color-02 tx-semibold mg-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, \"Days\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mg-b-0 tx-12 tx-color-03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, \"Until peak count of daily deaths.\")), /*#__PURE__*/React.createElement(Col, {\n    sm: 5,\n    className: \"mg-t-20 mg-sm-t-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"tx-normal tx-rubik tx-spacing--2 mg-b-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(NumberFormat, {\n    displayType: 'text',\n    thousandSeparator: true,\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"tx-uppercase tx-11 tx-spacing-1 tx-color-02 tx-semibold mg-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, \"COVID-19 deaths\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mg-b-0 tx-12 tx-color-03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, \"Projected on April 1, 2020.\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mg-t-30\",\n    style: {\n      position: 'relative',\n      minHeight: 300,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    chartData: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default DeathsPerDayStats;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/humpalumpa/inkuloit/healthdata.co.za/app/src/components/Stats/DeathsPerDayStats.js"],"names":["React","useState","moment","NumberFormat","Card","CardBody","Col","Row","LineChart","StatsProvider","DeathsPerDayStats","props","query","loaded","province","chartData","setChartData","componentLoaded","setComponentLoaded","fetchData","data","get","length","labels","datasetData","map","item","caseDate","case_date","format","push","actual_deaths","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","position","minHeight","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport NumberFormat from 'react-number-format';\nimport { Card, CardBody, Col, Row } from 'reactstrap';\nimport { LineChart } from 'components';\nimport { StatsProvider } from 'providers';\n\nconst DeathsPerDayStats = props => {\n    const { query, loaded, province } = props;\n    const [chartData, setChartData] = useState({});\n    const [componentLoaded, setComponentLoaded] = useState(false);\n\n    const fetchData = async () => {\n        if (loaded) {\n            const data = await StatsProvider.get('cases', 'deaths_per_day', query);\n\n            if (data.length > 0) {\n                const labels = [];\n                const datasetData = [];\n                data.map(item => {\n                    var caseDate = moment(item.case_date).format(\"MMM DD\");\n                    labels.push(caseDate);\n                    datasetData.push(item.actual_deaths);\n                    return null;\n                });\n                const chartData = {\n                    labels,\n                    datasets: [{\n                        label: 'Actual Deaths',\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(1,104,250,0.4)',\n                        borderColor: 'rgba(1,104,250,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: 'rgba(1,104,250,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: 'rgba(1,104,250,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: datasetData,\n                    }],\n                };\n                setChartData(chartData);\n            }\n            setComponentLoaded(true);\n        }\n    };\n\n    if (loaded) {\n        if (!componentLoaded) {\n            fetchData();\n        }\n    }\n\n    return (\n        <React.Fragment>\n            {componentLoaded\n            && (\n            <Card className=\"mg-b-10\">\n                <div className=\"card-header pd-y-20 d-md-flex align-items-center justify-content-between\">\n                    <h6 className=\"mg-b-5\">\n                        Deaths Per Day\n                        <span className=\"tx-pink\">{province !== 'all' ? ` for ${province}` : ''}</span>\n                    </h6>\n                    <ul className=\"list-inline d-flex mg-t-20 mg-sm-t-10 mg-md-t-0 mg-b-0\">\n                        <li className=\"list-inline-item d-flex align-items-center\">\n                            <span className=\"d-block wd-10 ht-10 bg-df-1 rounded mg-r-5\"></span>\n                            <span className=\"tx-sans tx-uppercase tx-10 tx-medium tx-color-03\">Actual</span>\n                        </li>\n                        {/* <li className=\"list-inline-item d-flex align-items-center mg-l-5\">\n                            <span className=\"d-block wd-10 ht-10 bg-df-2 rounded mg-r-5\"></span>\n                            <span className=\"tx-sans tx-uppercase tx-10 tx-medium tx-color-03\">Actual</span>\n                        </li> */}\n                        <li className=\"list-inline-item d-flex align-items-center mg-l-5\">\n                            <span className=\"d-block wd-10 ht-10 bg-df-3 rounded mg-r-5\"></span>\n                            <span className=\"tx-sans tx-uppercase tx-10 tx-medium tx-color-03\">Projected</span>\n                        </li>\n                    </ul>\n                </div>\n                <CardBody className=\"pos-relative\">\n                    <div>\n                        <Row>\n                            <Col sm={5}>\n                                <h3 className=\"tx-normal tx-rubik tx-spacing--2 mg-b-5\">\n                                    <NumberFormat displayType={'text'} thousandSeparator value={0} />\n                                </h3>\n                                <h6 className=\"tx-uppercase tx-11 tx-spacing-1 tx-color-02 tx-semibold mg-b-10\">Days</h6>\n                                <p className=\"mg-b-0 tx-12 tx-color-03\">Until peak count of daily deaths.</p>\n                            </Col>\n                            <Col sm={5} className=\"mg-t-20 mg-sm-t-0\">\n                                <h3 className=\"tx-normal tx-rubik tx-spacing--2 mg-b-5\">\n                                    <NumberFormat displayType={'text'} thousandSeparator value={0} />\n                                </h3>\n                                <h6 className=\"tx-uppercase tx-11 tx-spacing-1 tx-color-02 tx-semibold mg-b-10\">COVID-19 deaths</h6>\n                                <p className=\"mg-b-0 tx-12 tx-color-03\">Projected on April 1, 2020.</p>\n                            </Col>\n                        </Row>\n                    </div>\n                    <div className=\"mg-t-30\" style={{ position: 'relative', minHeight: 300, width: '100%' }}>\n                        <LineChart chartData={chartData} />\n                    </div>\n                </CardBody>\n            </Card>)}\n        </React.Fragment>\n    );\n}\n\nexport default DeathsPerDayStats;\n"]},"metadata":{},"sourceType":"module"}